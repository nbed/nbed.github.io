define(["exports"],function(_exports){"use strict";Object.defineProperty(_exports,"__esModule",{value:!0});_exports.eventOptions$1=_exports.eventOptions=eventOptions;_exports.insertNodeIntoTemplate=insertNodeIntoTemplate;_exports.internalProperty$1=_exports.internalProperty=internalProperty;_exports.property$1=_exports.property=property;_exports.query$1=_exports.query=query;_exports.queryAll$1=_exports.queryAll=queryAll;_exports.queryAssignedNodes$1=_exports.queryAssignedNodes=queryAssignedNodes;_exports.queryAsync$1=_exports.queryAsync=queryAsync;_exports.removeNodesFromTemplate=removeNodesFromTemplate;_exports.templateFactory$1=_exports.templateFactory=templateFactory;_exports.toggleTheme=toggleTheme;_exports.marker=_exports.lastAttributeNameRegex=_exports.isTemplatePartActive$1=_exports.isTemplatePartActive=_exports.isPrimitive$1=_exports.isPrimitive=_exports.isLightTheme=_exports.isIterable$1=_exports.isIterable=_exports.isDirective$1=_exports.isDirective=_exports.isCEPolyfill=_exports.html$2=_exports.html$1=_exports.html=_exports.directive$1=_exports.directive=_exports.defaultTemplateProcessor$1=_exports.defaultTemplateProcessor=_exports.defaultConverter$1=_exports.defaultConverter=_exports.customElement$1=_exports.customElement=_exports.css$1=_exports.css=_exports.createMarker$1=_exports.createMarker=_exports.boundAttributeSuffix=_exports.TitlePage=_exports.TemplateResult$3=_exports.TemplateResult$2=_exports.TemplateResult$1=_exports.TemplateResult=_exports.TemplateInstance$1=_exports.TemplateInstance=_exports.Template$1=_exports.Template=_exports.TabsSection=_exports.SVGTemplateResult$2=_exports.SVGTemplateResult$1=_exports.SVGTemplateResult=_exports.UpdatingElement$1=_exports.UpdatingElement=_exports.ReactiveElement=_exports.PropertyPart$1=_exports.PropertyPart=_exports.PropertyCommitter$1=_exports.PropertyCommitter=_exports.NodePart$1=_exports.NodePart=_exports.MenuSection=_exports.MainElement=_exports.LitElement=_exports.EventPart$1=_exports.EventPart=_exports.DomainSection=_exports.DefaultTemplateProcessor$1=_exports.DefaultTemplateProcessor=_exports.CSSResult$1=_exports.CSSResult=_exports.BooleanAttributePart$1=_exports.BooleanAttributePart=_exports.AttributePart$1=_exports.AttributePart=_exports.AttributeCommitter$1=_exports.AttributeCommitter=_exports.AccordianSection=_exports.$updatingElement=_exports.$titlePage=_exports.$templateResult=_exports.$templateInstance=_exports.$templateFactory=_exports.$template=_exports.$tabsSection=_exports.$sharedStyles=_exports.$shadyRender=_exports.$section4=_exports.$section3IndDoc=_exports.$section3DataEvidence=_exports.$section3=_exports.$section2CyclesItem=_exports.$section2=_exports.$section1RolesItem=_exports.$section1=_exports.$render=_exports.$parts=_exports.$part=_exports.$overview=_exports.$modifyTemplate=_exports.$menuSection=_exports.$mainElement=_exports.$litHtml=_exports.$litElement=_exports.$domainSection=_exports.$dom=_exports.$directive=_exports.$defaultTemplateProcessor=_exports.$decorators=_exports.$cssTag=_exports.$accordianSection=void 0;_exports.unsafeCSS$1=_exports.unsafeCSS=_exports.templateCaches$1=_exports.templateCaches=_exports.svg$2=_exports.svg$1=_exports.svg=_exports.supportsAdoptingStyleSheets$1=_exports.supportsAdoptingStyleSheets=_exports.state$1=_exports.state=_exports.sharedStyles=_exports.shadyTemplateFactory=_exports.section4=_exports.section3EvidenceItem=_exports.section3DocItem=_exports.section3=_exports.section2Cycles=_exports.section2=_exports.section1=_exports.rolesItem=_exports.reparentNodes$1=_exports.reparentNodes=_exports.render$1=_exports.render$2=_exports.render=_exports.removeNodes$1=_exports.removeNodes=_exports.parts$1=_exports.parts=_exports.overviewList=_exports.nothing$1=_exports.nothing=_exports.notEqual$1=_exports.notEqual=_exports.nodeMarker=_exports.noChange$1=_exports.noChange=_exports.markerRegex=void 0;function _templateObject58_6d670280e80511eb8c1eeb8ba8ae3128(){var data=babelHelpers.taggedTemplateLiteral(["\n\t\t.overview {\n\t\t\tpadding: 8px;\n\t\t}\n\n\t\t/* move up so the anchor + menu is above the content */\n\t\t.anchor-ref {\n\t\t\tposition: relative;\n\t\t\ttop: -50px;\n\t\t}"]);_templateObject58_6d670280e80511eb8c1eeb8ba8ae3128=function _templateObject58_6d670280e80511eb8c1eeb8ba8ae3128(){return data};return data}function _templateObject57_6d670280e80511eb8c1eeb8ba8ae3128(){var data=babelHelpers.taggedTemplateLiteral(["\n\t\t<head>\n\t\t\t<title>NB School Improvement Indicators</title>\n\t\t\t<meta name=\"viewport\" http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8 width=device-width,initial-scale=1.0\"/>\n\t\t\t<link rel=\"shortcut icon\" type=\"image/x-icon\" href=\"favicon.png\">\n\t\t</head>\n\n\t\t<body>\n\n\t\t\t<menu-section\n\t\t\t\t@change-theme=\"","\"></menu-section>\n\n\t\t\t<a id=\"anchor_section0\" class=\"anchor-ref\"></a>\n\t\t\t<title-page></title-page>\n\n\t\t\t<a id=\"anchor_section1\" class=\"anchor-ref\"></a>\n\t\t\t<domain-section color=\"var(--s1-color)\" colorFaded=\"var(--s1-color-faded)\" .tabList=\"","\">\n\t\t\t\t<span slot=\"header\">Section I: Framework Overview</span>\n\n\t\t\t\t<div slot=\"overview\">\n\t\t\t\t\t<h4>Framework Overview</h4>\n\t\t\t\t\t<p>Section I provides a framework overview including an overview of the improvement planning process. This section also includes information identifying the legislated roles and responsibilities of each individual and group stakeholder. These include: School Principal/School Administrative Team, School Improvement Committee, School Personnel, Stakeholders and Partners, District School Liaisons, Critical Friends, the Superintendent, and the District Education Council (DEC). </p>\n\n\t\t\t\t\t<div class=\"overview\">\n\t\t\t\t\t\t<em>Overview</em>\n\t\t\t\t\t\t<accordian-section color=\"var(--s1-color)\" .list=\"","\"></accordian-section>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</domain-section>\n\n\t\t\t<a id=\"anchor_section2\" class=\"anchor-ref\"></a>\n\t\t\t<domain-section color=\"var(--s2-color)\" colorFaded=\"var(--s2-color-faded)\" .tabList=\"","\">\n\t\t\t\t<span slot=\"header\">Section II: Cycles</span>\n\n\t\t\t\t<div slot=\"overview\">\n\t\t\t\t\t<h4>Cycles</h4>\n\t\t\t\t\t<p>Section II identifies the short- and long-term planning and monitoring cycles, including some content and diagrams suggesting content and processes to support effective planning, implementation, and monitoring (PDCA).</p>\n\t\t\t\t</div>\n\t\t\t</domain-section>\n\n\t\t\t<a id=\"anchor_section3\" class=\"anchor-ref\"></a>\n\t\t\t<domain-section color=\"var(--s3-color)\" colorFaded=\"var(--s3-color-faded)\" .tabList=\"","\">\n\t\t\t\t<span slot=\"header\">Section III: Self-Assessment Instrument</span>\n\n\t\t\t\t<div slot=\"overview\">\n\t\t\t\t\t<h4>Self-Assessment Instrument</h4>\n\t\t\t\t\t<p>Section III identifies the process for self-assessment, including the overview and purpose, and the Self-Assessment Process in Brief, including a discussion around the self-assessment instruments and associated documents (<a target=\"_blank\" href=\"https://collabe.nbed.nb.ca/sites/10year/nbsip/Shared%20Documents/2.%20Provincial%20Improvement%20Framework%20and%20Associated%20Documents/School%20Self-assessment%20Documents/School%20Improvement%20Indicators%20Only%20Document%20FINAL.docx?Web=1\">Indicator Document</a>, <a target=\"_blank\" href=\" https://collabe.nbed.nb.ca/sites/10year/nbsip/Shared%20Documents/2.%20Provincial%20Improvement%20Framework%20and%20Associated%20Documents/School%20Self-assessment%20Documents/School%20Improvement%20Indicators%20with%20Explanatory%20Notes%20FINAL.docx?Web=1\">Explanatory Notes Document</a>, <a target=\"_blank\" href=\"https://collabe.nbed.nb.ca/sites/10year/nbsip/_layouts/15/WopiFrame.aspx?sourcedoc=/sites/10year/nbsip/Shared%20Documents/2.%20Provincial%20Improvement%20Framework%20and%20Associated%20Documents/School%20Self-assessment%20Documents/Inclusion%20Look-fors%20August%2028,%202020%20FINAL.docx&action=default\">Inclusion Look-For</a>).  This section also provides a link to the online tiered document which combines all self-assessment documents into a user-friendly drop-down document.\n\t\t\t\t\tThis section also includes suggestions for the effective use of data/evidence, including information on the triangulation of data (conversations, observations and products).  An explanation of the intent and utility of the Annual School Performance Report is provided at the end of this section.\n\t\t\t\t\t</p>\n\t\t\t\t</div>\n\t\t\t</domain-section>\n\n\t\t\t<a id=\"anchor_section4\" class=\"anchor-ref\"></a>\n\t\t\t<domain-section color=\"var(--s4-color)\" colorFaded=\"var(--s4-color-faded)\" .tabList=\"","\">\n\t\t\t\t<span slot=\"header\">Section IV: Appendices and Templates</span>\n\n\t\t\t\t<div slot=\"overview\">\n\t\t\t\t\t<h4>Appendices and Templates</h4>\n\t\t\t\t\t<p>Section IV provides a list of appendices and templates, which can be used in whole or in part to support schools to self-assess, plan, and monitor.  This section also includes an outline of the policies associated with improvement planning and a list of acronyms for user reference.</p>\n\t\t\t\t</div>\n\t\t\t</domain-section>\n\t\t</body>\n\t\t"]);_templateObject57_6d670280e80511eb8c1eeb8ba8ae3128=function _templateObject57_6d670280e80511eb8c1eeb8ba8ae3128(){return data};return data}function _templateObject56_6d670280e80511eb8c1eeb8ba8ae3128(){var data=babelHelpers.taggedTemplateLiteral(["\n\t\t:host { \n\t\t\tdisplay: block;\n\t\t\tfont-family: sans-serif;\n\t\t}\n\t\t:host([hidden]) { display: none; }\n\n\t\t.container {\n\t\t\tposition: fixed;\n\n\t\t\ttop: 0;\n\n\t\t\tz-index: 10;\n\n\t\t\tdisplay: flex;\n\t\t\tflex-direction: row;\n\n\t\t\twidth: 100%;\n\t\t\tjustify-content: center;\n\t\t\talign-items: center;\n\n\t\t\tbackground-color: var(--menu-nav-bg);\n\t\t}\n\n\t\t.nav-section {\n\t\t\tpadding: 0.5em 0 0 0;\n\t\t\tdisplay: flex;\n\t\t\tflex-direction: row;\n\t\t}\n\n\t\t.nav-item {\n\t\t\tcursor: pointer;\n\t\t\tpadding: 8px;\n\t\t\tcolor: var(--menu-color-text);\n\t\t\tbackground-color: var(--menu-bg);\n\n\t\t\tborder-radius: 3px;\n\t\t}\n\n\t\t.right-area {\n\t\t\tmargin-right: 4px;\n\t\t}\n\n\t\t.nav-item-selected, .nav-item:hover {\n\t\t\tbackground-color: var(--menu-bg-selected);\n\t\t\tcolor: var(--menu-color-selected);\n\t\t}\n\t\t\n\t\t.theme {\n\t\t\tposition: absolute;\n\t\t\tdisplay: relative;\n\t\t\tcursor: pointer;\n\t\t\tright: 0;\n\t\t\tpadding: 0.5em;\n\t\t\twidth: 32px;\n\t\t\theight: 32px;\n\t\t}\n\n\t\t@media all and (-ms-high-contrast:none) {\n\t\t\t.theme {\n\t\t\t\tright: 32px;\n\t\t\t}\n\t\t}\n\n\t\t.theme:hover {\n\t\t\tbackground-color: var(--menu-bg-selected);\n\t\t\tborder-radius: 50%;\n\t\t}\n\t\t"]);_templateObject56_6d670280e80511eb8c1eeb8ba8ae3128=function _templateObject56_6d670280e80511eb8c1eeb8ba8ae3128(){return data};return data}function _templateObject55_6d670280e80511eb8c1eeb8ba8ae3128(){var data=babelHelpers.taggedTemplateLiteral(["<div class=\"nav-item \n\t\t\t\t\t\t"," \n\t\t\t\t\t\t","\"\n\t\t\t\t\t\t\t@click=",">\n\t\t\t\t\t\t","\n\t\t\t\t\t</div>"]);_templateObject55_6d670280e80511eb8c1eeb8ba8ae3128=function _templateObject55_6d670280e80511eb8c1eeb8ba8ae3128(){return data};return data}function _templateObject54_6d670280e80511eb8c1eeb8ba8ae3128(){var data=babelHelpers.taggedTemplateLiteral(["\n\t\t<div class=\"container\">\n\t\t\t<div class=\"nav-section\">\n\t\t\t\t","\n\t\t\t</div>\n\t\t\t<div class=\"theme\" @click=\"","\">\n\t\t\t\t<img src=\"./manifest/","\">\n\t\t\t</div>\n\t\t</div>\n\t\t"]);_templateObject54_6d670280e80511eb8c1eeb8ba8ae3128=function _templateObject54_6d670280e80511eb8c1eeb8ba8ae3128(){return data};return data}function _templateObject53_6d670280e80511eb8c1eeb8ba8ae3128(){var data=babelHelpers.taggedTemplateLiteral([""]);_templateObject53_6d670280e80511eb8c1eeb8ba8ae3128=function _templateObject53_6d670280e80511eb8c1eeb8ba8ae3128(){return data};return data}function _templateObject52_6d670280e80511eb8c1eeb8ba8ae3128(){var data=babelHelpers.taggedTemplateLiteral([""]);_templateObject52_6d670280e80511eb8c1eeb8ba8ae3128=function _templateObject52_6d670280e80511eb8c1eeb8ba8ae3128(){return data};return data}function _templateObject51_6d670280e80511eb8c1eeb8ba8ae3128(){var data=babelHelpers.taggedTemplateLiteral([""]);_templateObject51_6d670280e80511eb8c1eeb8ba8ae3128=function _templateObject51_6d670280e80511eb8c1eeb8ba8ae3128(){return data};return data}function _templateObject50_6d670280e80511eb8c1eeb8ba8ae3128(){var data=babelHelpers.taggedTemplateLiteral([""]);_templateObject50_6d670280e80511eb8c1eeb8ba8ae3128=function _templateObject50_6d670280e80511eb8c1eeb8ba8ae3128(){return data};return data}function _templateObject49_6d670280e80511eb8c1eeb8ba8ae3128(){var data=babelHelpers.taggedTemplateLiteral([""]);_templateObject49_6d670280e80511eb8c1eeb8ba8ae3128=function _templateObject49_6d670280e80511eb8c1eeb8ba8ae3128(){return data};return data}function _templateObject48_6d670280e80511eb8c1eeb8ba8ae3128(){var data=babelHelpers.taggedTemplateLiteral(["\n\n\t\t<style>\n\t\t\t","\n\n\t\t\t:host { \n\t\t\t\tdisplay: block;\n\t\t\t\tfont-family: sans-serif;\n\n\t\t\t\tmargin: 32px 0 0 0;\n\t\t\t}\n\t\t\t:host([hidden]) { display: none; }\n\n\t\t\t.container {\n\t\t\t\tdisplay: flex;\n\t\t\t\tflex-direction: row;\n\t\t\t\tpadding: 24px 10%;\n\t\t\t\tbox-sizing: border-box;\n\t\t\t\tposition: relative;\n\t\t\t\twidth: 100%;\n\t\t\t\tjustify-content: center;\n\t\t\t}\n\n\t\t\t.header {\n\t\t\t\twidth: 100%;\n\t\t\t\ttext-align: center;\n\t\t\t\talign-items: center;\n\t\t\t\tdisplay: flex;\n\t\t\t\tcolor: white;\n\n\t\t\t\tflex: 1;\n\n\t\t\t\tborder-top-left-radius: 16px;\n\t\t\t\tborder-bottom-left-radius: 16px;\n\n\t\t\t\tbackground-color: blue;\n\t\t\t\tbox-shadow:\n\t\t\t\t\tinset 60px 0 120px darkblue,\n\t\t\t\t\tinset -60px 0 120px darkblue;\n\t\t\t\t-moz-box-shadow:\n\t\t\t\t\tinset 60px 0 120px darkblue,\n\t\t\t\t\tinset -60px 0 120px darkblue;\n\t\t\t\t-webkit-box-shadow:\n\t\t\t\t\tinset 60px 0 120px darkblue,\n\t\t\t\t\tinset -60px 0 120px darkblue;\n\t\t\t}\n\n\t\t\t.inner-header {\n\t\t\t\tpadding: 0 32px;\n\t\t\t\tflex: 1;\n\t\t\t}\n\n\t\t\t.box {\n\t\t\t\twidth: 50%;\n\t\t\t\tflex: 1;\n\t\t\t\tborder-top-right-radius: 16px;\n\t\t\t\tborder-bottom-right-radius: 16px;\n\t\t\t}\n\n\t\t\t.overlay {\n\t\t\t\tposition: absolute;\n\t\t\t\tbottom: 24px;\n\t\t\t\tpadding: 16px;\n\t\t\t\tcolor: black;\n\t\t\t\tfont-weight: bold;\n\t\t\t\tright: 10%;\n\t\t\t\ttext-align: right;\n\t\t\t\tbackground-color: #FED88F;\n\n\t\t\t\tborder-top-left-radius: 16px;\n\t\t\t\tborder-bottom-right-radius: 16px;\n\t\t\t}\n\n\t\t\t@media only screen and (max-width: 1220px) {\n\t\t\t\t.container {\n\t\t\t\t\tflex-direction: column;\n\t\t\t\t\talign-items: center;\n\t\t\t\t}\n\n\t\t\t\t.box {\n\t\t\t\t\twidth: 100%;\n\t\t\t\t\tborder-top-right-radius: 0;\n\t\t\t\t\tborder-top-left-radius: 0;\n\t\t\t\t\tborder-bottom-right-radius: 16px;\n\t\t\t\t\tborder-bottom-left-radius: 16px;\n\t\t\t\t}\n\n\t\t\t\t.header {\n\t\t\t\t\tborder-top-right-radius: 16px;\n\t\t\t\t\tborder-top-left-radius: 16px;\n\t\t\t\t\tborder-bottom-right-radius: 0;\n\t\t\t\t\tborder-bottom-left-radius: 0;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t@media only screen and (max-width: 600px) {\n\t\t\t\t:host {\n\t\t\t\t\tmargin: 64px 0 0 0;\n\t\t\t\t}\n\n\t\t\t\t.container {\n\t\t\t\t\tpadding: 24px 0;\n\t\t\t\t}\n\n\t\t\t\t.overlay {\n\t\t\t\t\tright: 0;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t@media all and (-ms-high-contrast:none) and (max-width: 1220px) {\n\t\t\t\t.container {\n\t\t\t\t\tdisplay: block;\n\t\t\t\t}\n\t\t\t}\n\n\t\t</style>\n\n\t\t<div class=\"container\">\n\t\t\t<div class=\"header\">\n\t\t\t\t<div class=\"inner-header\">\n\t\t\t\t\t<h1>New Brunswick Provincial Improvement Framework:</h1>\n\t\t\t\t\t<h2>A Collaborative Process for Schools, Districts and the Province</h2>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<img class=\"box\" src=\"./manifest/title-page.jpg\"/>\n\n\t\t\t<div class=\"overlay\">\n\t\t\t\tDepartment of Education & Early Childhood Development\n\t\t\t\t<br>\n\t\t\t\t10-Year Education Implementation Planning Team\n\t\t\t\t<br>\n\t\t\t\tUpdated July 6th, 2021\n\t\t\t</div>\n\n\t\t</div>\n\t\t"]);_templateObject48_6d670280e80511eb8c1eeb8ba8ae3128=function _templateObject48_6d670280e80511eb8c1eeb8ba8ae3128(){return data};return data}function _templateObject47_6d670280e80511eb8c1eeb8ba8ae3128(){var data=babelHelpers.taggedTemplateLiteral([""]);_templateObject47_6d670280e80511eb8c1eeb8ba8ae3128=function _templateObject47_6d670280e80511eb8c1eeb8ba8ae3128(){return data};return data}function _templateObject46_6d670280e80511eb8c1eeb8ba8ae3128(){var data=babelHelpers.taggedTemplateLiteral(["<tabs-section .color=\"","\" .list=\"","\"></tabs-section>"]);_templateObject46_6d670280e80511eb8c1eeb8ba8ae3128=function _templateObject46_6d670280e80511eb8c1eeb8ba8ae3128(){return data};return data}function _templateObject45_6d670280e80511eb8c1eeb8ba8ae3128(){var data=babelHelpers.taggedTemplateLiteral(["\n\n\t\t<style>\n\t\t\t","\n\n\t\t\t:host { \n\t\t\t\tdisplay: block;\n\t\t\t\tfont-family: sans-serif;\n\t\t\t}\n\t\t\t:host([hidden]) { display: none; }\n\n\t\t\t.domain {\n\t\t\t\tmargin: 1em 7em;\n\t\t\t}\n\t\t\t\n\t\t\t.domain-header {\n\t\t\t\tmargin: 1em 0 0 0;\n\t\t\t\tpadding: 0 0;\n\n\t\t\t\tbackground-color: ","; \n\n\t\t\t\ttext-align: center;\n\t\t\t\tborder: 1px solid ",";\n\t\t\t\tborder-top-left-radius: 16px; \n\t\t\t\tborder-top-right-radius: 16px;\n\n\t\t\t\tfont-weight: bold;\n\t\t\t\tfont-size: 26px;\n\t\t\t\n\t\t\t\theight: auto;\n\t\t\t\tposition: relative;\n\t\t\t}\n\n\t\t\t.container {\n\t\t\t\tpadding: 1em 2em;\n\n\t\t\t\tborder: 1px solid ",";\n\t\t\t\tborder-bottom-left-radius: 16px;\n\t\t\t\tborder-bottom-right-radius: 16px;\n\t\t\t\tborder-top-width: 0;\n\t\t\t}\n\n\t\t\t.header {\n\t\t\t\tpadding: 0 2em 0 0;\n\t\t\t}\n\n\t\t\t.tab {\n\t\t\t\tposition: relative;\n\t\t\t\tpadding: 10px;\n\t\t\t}\n\n\t\t\t.tab-container {\n\t\t\t\tdisplay: flex;\n\t\t\t}\n\n\t\t\t@media only screen and (max-width: 900px) {\n\t\t\t\t.domain {\n\t\t\t\t\tmargin: 1em 1em;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t@media only screen and (max-width: 600px) {\n\t\t\t\t.domain {\n\t\t\t\t\tmargin: 1em 0;\n\t\t\t\t}\n\n\t\t\t\t.container {\n\t\t\t\t\tpadding: 1em;\n\t\t\t\t}\n\n\t\t\t\t.header {\n\t\t\t\t\tpadding: 0;\n\t\t\t\t}\n\t\t\t}\n\n\t\t</style>\n\n\t\t<div class=\"domain\">\n\t\t\t<div class=\"domain-header\">\n\t\t\t\t<slot name=\"header\"></slot>\n\t\t\t</div>\n\t\t\t<div class=\"container\">\n\t\t\t\t<div class=\"header\">\n\t\t\t\t\t<slot name=\"overview\"></slot>\n\t\t\t\t</div>\n\t\t\t\t","\n\t\t\t</div>\n\n\t\t</div>\n\t\t"]);_templateObject45_6d670280e80511eb8c1eeb8ba8ae3128=function _templateObject45_6d670280e80511eb8c1eeb8ba8ae3128(){return data};return data}function _templateObject44_6d670280e80511eb8c1eeb8ba8ae3128(){var data=babelHelpers.taggedTemplateLiteral([""]);_templateObject44_6d670280e80511eb8c1eeb8ba8ae3128=function _templateObject44_6d670280e80511eb8c1eeb8ba8ae3128(){return data};return data}function _templateObject43_6d670280e80511eb8c1eeb8ba8ae3128(){var data=babelHelpers.taggedTemplateLiteral(["\n\t\t\t\t\t<accordian-section .color=\"","\" .list=\"","\"></accordian-section>\n\t\t\t\t"]);_templateObject43_6d670280e80511eb8c1eeb8ba8ae3128=function _templateObject43_6d670280e80511eb8c1eeb8ba8ae3128(){return data};return data}function _templateObject42_6d670280e80511eb8c1eeb8ba8ae3128(){var data=babelHelpers.taggedTemplateLiteral(["<div class=\"tab ","\"\n\t\t\t\t\t\t\tdata-tab="," @click=",">\n\t\t\t\t\t\t","\n\t\t\t\t\t</div>"]);_templateObject42_6d670280e80511eb8c1eeb8ba8ae3128=function _templateObject42_6d670280e80511eb8c1eeb8ba8ae3128(){return data};return data}function _templateObject41_6d670280e80511eb8c1eeb8ba8ae3128(){var data=babelHelpers.taggedTemplateLiteral(["\n\n\t\t<style>\n\t\t\t","\n\n\t\t\t:host { \n\t\t\t\tdisplay: block;\n\t\t\t\tfont-family: sans-serif;\n\t\t\t}\n\t\t\t:host([hidden]) { display: none; }\n\n\t\t\t.container {\n\t\t\t\tdisplay: flex;\n\t\t\t\tflex-direction: column;\n\t\t\t}\n\n\t\t\t.nav-section {\n\t\t\t\tpadding: 1em 0 0 0;\n\t\t\t\tdisplay: flex;\n\t\t\t\tflex-direction: row;\n\t\t\t}\n\n\t\t\t.tab {\n\t\t\t\tposition: relative;\n\t\t\t\tz-index: 5;\n\n\t\t\t\tborder-top-left-radius: 10px;\n\t\t\t\tborder-top-right-radius: 10px;\n\t\t\t\tborder: 1px solid #ddd;\n\n\t\t\t\tmargin: 0 5px 0 0;\n\t\t\t\tpadding: 10pt 25pt;\n\n\t\t\t\tbackground-color: var(--tab-color);\n\t\t\t}\n\n\t\t\t.tab:hover {\n\t\t\t\tcursor: pointer;\n\t\t\t\tpadding: 9pt 25pt;\n\t\t\t\tborder-top: 2px solid;\n\t\t\t\tborder-bottom: none;\n\t\t\t}\n\n\t\t\t.tab-selected {\n\t\t\t\tborder-bottom: 1px solid var(--tab-color);\n\t\t\t\tborder-top-width: 2px;\n\t\t\t\tborder-top-style: solid;\n\t\t\t\tpadding: 9pt 25pt;\n\t\t\t}\n\n\t\t\t.tab-selected, .tab:hover {\n\t\t\t\tborder-top-color: ",";\n\t\t\t}\n\n\t\t\t.tab-content {\n\t\t\t\tposition: relative;\n\t\t\t\tpadding: 10px;\n\n\t\t\t\t/* hide top of border under tabs */\n\t\t\t\tmargin-top: -1px;\n\n\t\t\t\tborder: 1px solid #ddd;\n\t\t\t\tborder-top-right-radius: 10px;\n\t\t\t\tborder-bottom-left-radius: 10px;\n\t\t\t\tborder-bottom-right-radius: 10px;\n\t\t\t}\n\n\t\t\t@media only screen and (max-width: 900px) {\n\t\t\t\t.nav-section {\n\t\t\t\t\tpadding: 0;\n\t\t\t\t}\n\n\t\t\t\t.tab {\n\t\t\t\t\tpadding: 10px;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t.tab:hover {\n\t\t\t\t\tpadding: 10px;\n\t\t\t\t}\n\n\t\t\t\t.tab-selected {\n\t\t\t\t\tpadding: 10px;\n\t\t\t\t}\n\t\t\t}\n\t\t</style>\n\n\t\t<div class=\"container\">\n\t\t\t<div class=\"nav-section\">\n\t\t\t\t","\n\t\t\t</div>\n\t\t\t<div class=\"tab-content\">\n\t\t\t\t<div class=\"content\">","</div>\n\t\t\t\t","\n\t\t\t</div>\n\t\t</div>\n\t\t"]);_templateObject41_6d670280e80511eb8c1eeb8ba8ae3128=function _templateObject41_6d670280e80511eb8c1eeb8ba8ae3128(){return data};return data}function _templateObject40_6d670280e80511eb8c1eeb8ba8ae3128(){var data=babelHelpers.taggedTemplateLiteral([""]);_templateObject40_6d670280e80511eb8c1eeb8ba8ae3128=function _templateObject40_6d670280e80511eb8c1eeb8ba8ae3128(){return data};return data}function _templateObject39_6d670280e80511eb8c1eeb8ba8ae3128(){var data=babelHelpers.taggedTemplateLiteral(["<p>Several Templates are provided to assist schools in monitoring progress. Schools can choose to use these verbatim, modify them, or discard them if they feel they have a more efficient and effective template. The following is a list of the policy content and templates provided in the appendices:</p>\n        <p><a href=\"","Appendix-A.pdf\" target=\"_blank\"><strong>Appendix A</strong>: 10-year Plan Cluster of Objectives</a></p>\n        <p><a href=\"","Appendix-B.pdf\" target=\"_blank\"><strong>Appendix B</strong>: Combined SIP/PLWEP, Relevant Legislation</a></p>\n        <p><a href=\"","Appendix-C.pdf\" target=\"_blank\"><strong>Appendix C</strong>: Sample Improvement Planning Template</a></p>\n        <p><a href=\"","Appendix-D.pdf\" target=\"_blank\"><strong>Appendix D</strong>: PDCA Template</a></p>\n        <p><a href=\"","Appendix-E.pdf\" target=\"_blank\"><strong>Appendix E</strong>: Meeting Minute Template</a></p>\n        <p><a href=\"https://collabe.nbed.nb.ca/sites/10year/nbsip/Shared%20Documents/2.%20Provincial%20Improvement%20Framework%20and%20Associated%20Documents/Annual%20School%20Performance%20Report%20FINAL.docx?Web=1\" target=\"_blank\"><strong>Appendix F</strong>: Annual School Performance Report Template</a></p>\n        <p><a href=\"","Appendix-G.pdf\" target=\"_blank\"><strong>Appendix G</strong>: Policy associated with improvement planning</a></p>\n        <p><a href=\"","Appendix-H.pdf\" target=\"_blank\"><strong>Appendix H</strong>: Consultations</a></p>\n        <p><a href=\"","Appendix-I.pdf\" target=\"_blank\"><strong>Appendix I</strong>:  Acronyms</a></p>"]);_templateObject39_6d670280e80511eb8c1eeb8ba8ae3128=function _templateObject39_6d670280e80511eb8c1eeb8ba8ae3128(){return data};return data}function _templateObject38_6d670280e80511eb8c1eeb8ba8ae3128(){var data=babelHelpers.taggedTemplateLiteral(["<p>Although it has already been mentioned several times throughout this document, the importance of the Annual School Performance Report must be highlighted.&nbsp;</p>\n        <ul>\n        <li>The Annual School Performance Report is a high-level document that schools would submit to the district in January of each year (See <a target=\"_blank\" href=\"https://collabe.nbed.nb.ca/sites/10year/nbsip/Shared%20Documents/2.%20Provincial%20Improvement%20Framework%20and%20Associated%20Documents/Annual%20School%20Performance%20Report%20FINAL.docx?Web=1\">Appendix F</a>).</li>\n        <li>This report will identify overarching school goals and indicate progress toward these goals.</li>\n        <li>District will collate this data and author a similar high-level report to be shared with provincial representatives.</li>\n        <li>This is a mechanism by which schools and districts will be able to measure progress.</li>\n        <li>Most importantly the Annual School Performance Report will allow for the transfer of information from schools, to districts and then to the province. This information will be used to:\n        <ul>\n        <li>set ongoing provincial priorities;</li>\n        <li>inform resource allocation; and,</li>\n        <li>inform PL planning.</li>\n        </ul>\n        </li>\n        </ul>"]);_templateObject38_6d670280e80511eb8c1eeb8ba8ae3128=function _templateObject38_6d670280e80511eb8c1eeb8ba8ae3128(){return data};return data}function _templateObject37_6d670280e80511eb8c1eeb8ba8ae3128(){var data=babelHelpers.taggedTemplateLiteral(["<p>Different schools&rsquo; teams have different levels of proficiency when gathering and analyzing data. If a school leader is new to a school or position, or there is a large change in the makeup of the improvement team, schools should re-examine their proficiency with data and evidence. In it&rsquo;s simplest, data is anything that is quantifiable. Evidence is a broader concept and can include information that may be considered more subjective, for example, conversations and observations. Once evidence is quantified, it can often be considered hard data.</p>\n        <p>Blink suggests the following guiding questions be used when a school chooses to examine data:</p>\n        <ol>\n        <li>How and when should data be gathered?</li>\n        <li>What data should be included?</li>\n        <li>How does using data to drive instructional decisions affect programming?</li>\n        <li>How does using data to drive instructional decisions affect staffing?</li>\n        <li>How do we find time (school or District provided) for teachers and administrators to evaluate and analyze the data that they have?</li>\n        <li>How does using data to drive instructional decisions affect professional learning?</li>\n        <li>How does using data to drive instructional decisions affect goal setting? (Blink, 2016, p.1)</li>\n        </ol>"]);_templateObject37_6d670280e80511eb8c1eeb8ba8ae3128=function _templateObject37_6d670280e80511eb8c1eeb8ba8ae3128(){return data};return data}function _templateObject36_6d670280e80511eb8c1eeb8ba8ae3128(){var data=babelHelpers.taggedTemplateLiteral(["<p>The self-assessment instrument to be used at the school level is the <a target=\"_blank\" href=\"https://collabe.nbed.nb.ca/sites/10year/nbsip/_layouts/15/WopiFrame.aspx?sourcedoc=/sites/10year/nbsip/Shared%20Documents/2.%20Provincial%20Improvement%20Framework%20and%20Associated%20Documents/School%20Self-assessment%20Documents/Inclusion%20Look-fors%20August%2028,%202020%20FINAL.docx&action=default\">Inclusion Look-For</a> document.</p>"]);_templateObject36_6d670280e80511eb8c1eeb8ba8ae3128=function _templateObject36_6d670280e80511eb8c1eeb8ba8ae3128(){return data};return data}function _templateObject35_6d670280e80511eb8c1eeb8ba8ae3128(){var data=babelHelpers.taggedTemplateLiteral(["<p>To ensure understanding at all levels we have broken down the self-assessment process into seven steps. The School Improvement Planning &ldquo;SIP Self-Assessment Process Infographic&rdquo; outlines the seven steps. If school personnel feel they want to examine the process in its entirety they can go to the <a target=\"_blank\" href=\"https://collabe.nbed.nb.ca/sites/10year/nbsip/_layouts/15/WopiFrame.aspx?sourcedoc=/sites/10year/nbsip/Shared%20Documents/1.%20Provincial%20Improvement%20Framework%20School%20Self-Assessment%20Module/School%20Self-assessment%20PL%20PowerPoint%20FINAL.pptx&action=default\">School Self-Assessment Module</a>.</p>\n        <p>A general overview of the self-assessment process as follows. Prior to authoring the <a target=\"_blank\" href=\"https://collabe.nbed.nb.ca/sites/10year/nbsip/Shared%20Documents/2.%20Provincial%20Improvement%20Framework%20and%20Associated%20Documents/Annual%20School%20Performance%20Report%20FINAL.docx?Web=1\">Annual School Performance Report</a>, schools will use the indicator document to self-assess.</p>\n        <p><u>If a school is in the first year of the improvement planning process</u>, they should examine the indicator document in its entirety to determine priority domains and areas of focus. Each domain includes guiding questions to assist schools to effectively identify target domains and potential areas for growth.&nbsp;</p>\n        <p>Other data should be examined to support analysis. This could include:</p>\n        <ul>\n        <li>assessment results (formative and summative);</li>\n        <li>Teacher Perception Survey Data results;</li>\n        <li>Our School data;</li>\n        <li>previous Improvement Plans/PLWEP documents;</li>\n        <li>student profiles;</li>\n        <li>behaviour tracking data;</li>\n        <li>PLP analysis;</li>\n        <li>lesson plans;</li>\n        <li>team meeting minutes;</li>\n        <li>teacher/team growth plans;</li>\n        <li>technology plans;</li>\n        <li>website analysis; and,</li>\n        <li>data dashboards.</li>\n        </ul>\n        <p>Please note data dashboards or e-binders may be used to assist schools to effectively organize and assess data. When used effectively, data dashboards can help schools be proactive by identifying potential problems and offering interventions before they affect student achievement. In some cases, the introduction of data dashboards and their associated reports helped facilitate schools&rsquo; shift to comprehensive data analysis and continuous school improvement. Suggestions for the effective gathering and use of data/evidence are shared in the following section.</p>\n        <p>Once target areas for growth are identified, the Improvement Team may follow the recommended steps outlined on page 8 which include, but are not limited to:&nbsp;</p>\n        <ul>\n        <li>analyzing and assessing data/evidence to determine areas of focus;&nbsp;</li>\n        <li>developing targeted goals for each area of focus;&nbsp;</li>\n        <li>establishing actionable strategies based on data/evidence;&nbsp;</li>\n        <li>communicating the plan;&nbsp;</li>\n        <li>implementing actions;&nbsp;</li>\n        <li>monitoring progress on an ongoing basis; and,&nbsp;</li>\n        <li>adjusting strategies and actions as needed.</li>\n        </ul>\n        <p><u>If school teams are using the document to determine progress toward previously identified goals</u>, (for example, they are in the second year of a two-year plan) they can be more targeted in their approach. In these cases, school teams may choose to focus on specific domains and indicators, and the associated measures already delineated in their current improvement plan to identify progress toward specific goals. This information should be analyzed along with a diversity of supporting data/evidence and can be used to provide content for the <a target=\"_blank\" href=\"https://collabe.nbed.nb.ca/sites/10year/nbsip/Shared%20Documents/2.%20Provincial%20Improvement%20Framework%20and%20Associated%20Documents/Annual%20School%20Performance%20Report%20FINAL.docx?Web=1\">Annual School Performance Report</a>. Regardless of where a school is in the process, a focus on using a variety of data/evidence to ensure an effective self-assessment occurs is recommended.</p>"]);_templateObject35_6d670280e80511eb8c1eeb8ba8ae3128=function _templateObject35_6d670280e80511eb8c1eeb8ba8ae3128(){return data};return data}function _templateObject34_6d670280e80511eb8c1eeb8ba8ae3128(){var data=babelHelpers.taggedTemplateLiteral(["<p>The indicator document is used at three different levels of the education system for different purposes.</p>\n        <p>The indicator document is used as a means to identify the <em>highest standards of effective practice </em>for schools based on research.&nbsp;</p>\n        <p>The indicator document is used as a means to identify the preferred standards for schools and makes links to our current provincial strategy document, the 10-year Education Plan.</p>\n        <p>At the school level, the indicator document is to be used to promote effective self-assessment. The document can be used to assist schools in identifying strengths and potential areas of focus. Ultimately, and most importantly, it is a mechanism to assist schools to identify and adopt practices which will help improve academic, behavioural, and social-emotional outcomes for students.</p>\n        <p>At the district level, it is used to help determine areas where schools are focusing their energies and can be used to identify areas where additional resourcing or PL support may be needed.</p>\n        <p>At the provincial level, it is used as a vehicle to help understand and inform how well we are doing systemically; the challenges that schools and districts are working to address; and, budgetary processes to allow for effective long-term planning, including informing allocation of resources and PL planning.&nbsp;</p>\n        <p>The results from the Annual School Performance Reports will be collated at the district level and shared with the department at a high level. No school-specific identifying information will be shared. Results will be used to help determine progress toward the objectives outlined in the 10-year Education Plan.&nbsp;</p>\n        <p>It is important to reiterate that an annual review of the framework and indicator documents, based on current research, will be conducted to ensure ongoing alignment with changing systemic needs. These annual reviews will include input from each of the districts and will include representation from each of the district staffs, school-based administrative teams and teachers.</p>"]);_templateObject34_6d670280e80511eb8c1eeb8ba8ae3128=function _templateObject34_6d670280e80511eb8c1eeb8ba8ae3128(){return data};return data}function _templateObject33_6d670280e80511eb8c1eeb8ba8ae3128(){var data=babelHelpers.taggedTemplateLiteral(["<p>We have noted that multiple measures help to provide a clearer picture of how a school is performing. The variety of data/evidence must be collected and analyzed on a regular basis. The key to the collection of the data/evidence is determining how the information relates to school improvement and improved student outcomes.&nbsp;</p>\n        <p>Blink notes that, &ldquo;the most important things to remember about the collection of data is that someone needs to be in charge&rdquo; (2016, p.18). In the absence of a responsible individual or team skilled in the use and application of data/evidence, schools should source support and/or PL opportunities to assist with gathering, analysis and application of data to build capacity. Further, every person involved in the collection and use of data should understand what they are responsible for and their role in the improvement process.&nbsp;</p>\n        <p>DuFour et al, (2005) and Reeves (2009)<a href=\"#_ftn12\" name=\"_ftnref12\">[12]</a> have both been noted as identifying the problem of being &ldquo;data rich and information poor.&rdquo; All data/evidence should serve a specific purpose. If you are taking pains to collect the data/evidence, then you should work to analyze and act on the results. If you are not acting on the data/evidence, then it is likely that it was not worth collecting.</p>\n        <p>If school leaders are unsure about their proficiency with data/evidence, it is recommended that they source district support. District personnel could work with school leaders and teams to examine the following factors and provide support where deemed appropriate:</p>\n        <ul>\n        <li>team readiness;&nbsp;</li>\n        <li>identifying data/evidence sources;</li>\n        <li>analysis of data/evidence;</li>\n        <li>making hypotheses and identifying issues;</li>\n        <li>prioritizing and setting improvement goals;&nbsp;</li>\n        <li>designing objectives and strategies;</li>\n        <li>progress monitoring and evaluation; and,&nbsp;</li>\n        <li>implementation: making a commitment and planning for &ldquo;roll out&rdquo;&nbsp;(Blink, 2016, p. 26).</li>\n        </ul>\n        <p>If teams are unsure whether they are effectively using evidence-informed decision making, then they should examine whether data/evidence is effectively translating into changes in practice at the school and classroom levels.&nbsp;</p>\n        <p>Finally, it is important when using data/evidence to ensure that the team identifies a Present Level of Performance (PLOP). This provides a baseline, so teams are able to accurately identify whether they are making progress toward identified goals. The easiest ways to effectively establish a PLOP and monitor progress is to identify baseline measures when first implementing a strategy or when establishing a goal. The essence of creating effective goals and effectively monitoring progress is that it allows teams to not only plan and implement actions strategically but also promotes the importance of close monitoring to ensure teams are moving in the right direction towards achieving the desired results. The cycle for monitoring progress should occur on a regular and ongoing basis throughout the school year.&nbsp;</p>\n        <p><a href=\"#_ftnref12\" name=\"_ftn12\">[12]</a> Reeves, D. B. (2009). <em>Assessing educational leaders: Evaluating performance for improved individual and organizational results</em>. Thousand Oaks, Calif: Corwin Press.</p>"]);_templateObject33_6d670280e80511eb8c1eeb8ba8ae3128=function _templateObject33_6d670280e80511eb8c1eeb8ba8ae3128(){return data};return data}function _templateObject32_6d670280e80511eb8c1eeb8ba8ae3128(){var data=babelHelpers.taggedTemplateLiteral(["<p>There are two cycles schools should consider when planning including: the Plan, Do, Check, Act (PDCA) and annual/multi-year cycles.</p>\n            <p>Long-term cycles can include annual and/or multi-year goals.</p>"]);_templateObject32_6d670280e80511eb8c1eeb8ba8ae3128=function _templateObject32_6d670280e80511eb8c1eeb8ba8ae3128(){return data};return data}function _templateObject31_6d670280e80511eb8c1eeb8ba8ae3128(){var data=babelHelpers.taggedTemplateLiteral(["<p>Research has identified that schools improve when they use a collection of data/ evidence (demographic, perception, student learning and school process) derived from a variety of sources (conversations, observations and products) to inform their goal-setting and decision-making processes (Bryk, Gomez, Grunow and LeMahieu, 2015<a href=\"#_ftn8\" name=\"_ftnref8\">[8]</a>; Reeves, 2007<a href=\"#_ftn9\" name=\"_ftnref9\">[9]</a>; DuFour, Dufour and Eaker, 2005<a href=\"#_ftn10\" name=\"_ftnref10\">[10]</a>). The gathering and use of this data/evidence is part of a continuous process designed for the adoption of strategies to best meet changing student, school and systemic needs.</p>\n        <p>Schools and districts may choose to adopt a one, two, three or four-year timeframe for long-term planning. A sample three-year planning cycle is provided in the table on the following page. It is recommended that the cycle be managed by each school and district to best address their particular needs and contexts. Because the Annual School Performance Report is used to inform systemic needs within a fixed budgetary process timeline, the self-assessment and reporting is slated to occur each January. Each school will be asked to identify long-term goals which will be supported by the strategies and actions outlined in the annual plan.&nbsp;</p>\n        <p><strong>Sample Three Year Planning Table</strong></p>\n        <p>If the framework is implemented over a three-year cycle, then the following actions could be undertaken each year:</p>\n        <table>\n        <tbody>\n        <tr style=\"color: #ffffff;\">\n        <td style=\"background-color: #4472c4; text-align: center; vertical-align: middle;\" width=\"33%\"><strong>Year One</strong></td>\n        <td style=\"background-color: #70ad47; text-align: center; vertical-align: middle;\" width=\"33%\"><strong>Year Two</strong></td>\n        <td style=\"background-color: #aeaaaa; text-align: center; vertical-align: middle;\" width=\"33%\"><strong>Year Three</strong></td>\n        </tr>\n        <tr>\n        <td style=\"background-color: #4472c455; vertical-align: top;\" width=\"33%\">\n        <ul>\n        <li>Complete system analysis based on data</li>\n        <li>Goal-setting</li>\n        <li>Identification of strategies and actions</li>\n        <li>Implementation</li>\n        <li>Ongoing monitoring</li>\n        <li>Annual self-assessment</li>\n        <li>Author and share Annual School Performance Report</li>\n        <li>Identification of priorities, resources and professional learning needs for upcoming school year</li>\n        </ul>\n        </td>\n        <td style=\"background-color: #70ad4755; vertical-align: top;\" width=\"33%\">\n        <ul>\n        <li>Complete system analysis based on data</li>\n        <li>Goal-setting</li>\n        <li>Identification of strategies and actions</li>\n        <li>Implementation</li>\n        <li>Ongoing monitoring</li>\n        <li>Annual self-assessment</li>\n        <li>Author and share Annual School Performance Report</li>\n        <li>Identification of priorities, resources and professional learning needs for upcoming school year</li>\n        </ul>\n        </td>\n        <td style=\"background-color: #aeaaaa55; vertical-align: top;\" width=\"33%\">\n        <ul>\n        <li>Complete system analysis based on data</li>\n        <li>Goal-setting</li>\n        <li>Identification of strategies and actions</li>\n        <li>Implementation</li>\n        <li>Ongoing monitoring</li>\n        <li>Annual self-assessment</li>\n        <li>Author and share Annual School Performance Report</li>\n        <li>Revisit plan and progress toward long-term targets</li>\n        <li>Identification of priorities, resources and professional learning needs for upcoming school year</li>\n        </ul>\n        </td>\n        </tr>\n        </tbody>\n        </table>\n        <p>&nbsp;</p>\n        <p>Annual improvement plans should be agile, with adjustments to strategies and actions being made within the school year which are informed by the ongoing monitoring process (Breakspear, 2017)<a href=\"#_ftn11\" name=\"_ftnref11\">[11]</a>. Once a goal has been reached and a practice embedded, this strategy could become part of a work plan rather than a targeted improvement initiative. When walkthroughs and/or other evidence indicates a decline in effective practice or the need to revisit a strategy or action, it may then be reinserted into the plan as needed. For example, a school with an effective Response to Intervention (RTI) strategy may need to revisit PL in this area if there is a sufficient staff turnover to warrant additional training. In the case of a significant change in staff or student clientele, it may be necessary for an extensive revision of the short-term strategies and actions used by a school. For example, a sudden and pronounced influx of newcomers may necessitate that schools re-examine their priorities.</p>\n        <p>At the end of each cycle, prior to authoring the Annual School Performance Report in January, each school should do a complete self-assessment using the indicator document as a guide to identify the preferred standard. Following is a brief overview of the purpose for the instrument as well as a primer on using the instrument to self-assess effectively.&nbsp;</p>\n        <p><a href=\"#_ftnref8\" name=\"_ftn8\">[8]</a> Bryk, A. S., Gomez, L. M., Grunow, A., &amp; LeMahieu, P. G. (2015). <em>Learning to improve: How America's schools can get better at getting better</em>. Boston: Harvard Education Publishing.</p>\n        <p><a href=\"#_ftnref9\" name=\"_ftn9\">[9]</a> Reeves, D. B. (2007). <em>Ahead of the curve: The power of assessment to transform teaching and learning. </em>Bloomington, IN: Solution Tree</p>\n        <p><a href=\"#_ftnref10\" name=\"_ftn10\">[10]</a> DuFour, R., Eaker, R. E., &amp; DuFour, R. B. (2005). <em>On common ground: The power of professional learning communities. </em>Bloomington, Ind: National Educational Service.</p>\n        <p><a href=\"#_ftnref11\" name=\"_ftn11\">[11]</a> Breakspear, S. (2017). Embracing Agile Leadership for Learning - how leaders can create impact despite growing complexity. <em>Australian Educational Leader</em>, 39, 3, 68-71.</p>"]);_templateObject31_6d670280e80511eb8c1eeb8ba8ae3128=function _templateObject31_6d670280e80511eb8c1eeb8ba8ae3128(){return data};return data}function _templateObject30_6d670280e80511eb8c1eeb8ba8ae3128(){var data=babelHelpers.taggedTemplateLiteral(["<p>The first graphic on the previous page outlines the components of the PDCA cycle. The following are suggested major activities schools and districts could complete within the school year:</p>\n        <ul>\n        <li>an improvement committee to oversee the school improvement process is established, or the committee membership from the previous school year is reconfirmed;</li>\n        <li>schools use data/evidence (conversations, observations and products) to identify potential areas of focus;</li>\n        <li>schools may use the guiding questions for each of the four domains outlined in the indicator document to assess their performance, prioritize domains, and identify target areas for improvement;</li>\n        <li>schools determine areas of focus, identify goals and associated strategies and actions to address areas for improvement, and identify links to the district and provincial education plans;</li>\n        <li>information from progress monitoring is shared with students, school, staff, stakeholders and partners on an ongoing basis;</li>\n        <li>districts request updates on progress to monitor performance and help schools identify challenges and source needed supports;</li>\n        <li>during the annual SIP session, schools will assess their performance across any or all four domains as outlined in the improvement plan. During this process, School Improvement Planning Teams will participate in a &ldquo;deep dive&rdquo; using targeted data and evidence to identify progress toward identified goals. They will then author the Annual School Performance Report;</li>\n        <li>the Annual School Performance Report will be shared with district personnel. These will identify school goals, progress toward these goals, and identified PL needs to promote ongoing improvement (see the template provided in <a target=\"_blank\" href=\"https://collabe.nbed.nb.ca/sites/10year/nbsip/Shared%20Documents/2.%20Provincial%20Improvement%20Framework%20and%20Associated%20Documents/Annual%20School%20Performance%20Report%20FINAL.docx?Web=1\">Appendix F</a> for details); and,</li>\n        <li>the process culminates in the generation and distribution of the Annual School Performance Report, noted above, and will inform the identification of long-term (yearly and multi-year) goals.</li>\n        </ul>\n        <p><strong>In order to ensure that the high-level data is shared from school, to districts and then to the province, and is used to inform long-term provincial planning and fiscal priorities, it is imperative that Annual School Performance Reports be completed during the January professional learning day which is focused on improvement planning</strong>. This school data, in aggregate, is shared with the districts, collated at the district level, and subsequently shared with the province on or before February 1<sup>st</sup>. District and department personnel will continue to collect additional data/evidence that informs implementation decisions and the allocation of supports.</p>"]);_templateObject30_6d670280e80511eb8c1eeb8ba8ae3128=function _templateObject30_6d670280e80511eb8c1eeb8ba8ae3128(){return data};return data}function _templateObject29_6d670280e80511eb8c1eeb8ba8ae3128(){var data=babelHelpers.taggedTemplateLiteral(["<p>The Plan, Do, Check, Act (PDCA) cycle, or micro cycle, is a recursive cycle of activities that occurs within the school year (Deming, 1986)<a href=\"#_ftn6\" name=\"_ftnref6\">[6]</a>. This cycle is contingent on the use of data/evidence to ensure progress toward ongoing improvement goals. Blink (2016) notes that &ldquo;school improvement is a continuous process&rdquo; (p.11)<a href=\"#_ftn7\" name=\"_ftnref7\">[7]</a>. It is important for schools to understand that the improvement planning cycle is recursive and the gathering of data/evidence and analysis of progress toward identified goals repeats within the school year.&nbsp;</p>\n        <p>It is important for schools to use a variety of data and evidence to inform planning, including the examination of formative and summative assessments, to ensure their use of data/evidence is effective in identifying the strengths and challenges at all levels. Schools should prioritize high-impact strategies to promote ongoing growth, such as a focus on formative assessment and developing assessment capable learners. Schools could examine the links embedded below for information on balanced and formative assessment. It is recommended that teachers examine page 2 of the Formative Assessment link inserted below for information on the PDCA cycle and triangulation of data related to teaching practice.</p>\n        <ul>\n            <li><a target=\"_blank\" href=\"https://collabe.nbed.nb.ca/res/ae/docs/Balanced%20Assessment%20Final%20doc%202014.pdf\">Balanced Assessment</a>\n            <li><a target=\"_blank\" href=\"https://collabe.nbed.nb.ca/res/sa/ela/docs/Formative%20Assessment.pdf\">Formative Assessment</a>\n        </ul>\n        <p>The New Brunswick School Improvement Indicators Document with Explanatory Notes suggests the following guidelines for monitoring of initiatives within the PDCA cycle. When discussing routine monitoring it states,</p>\n        <p>&ldquo;although the school improvement plan is reviewed at the beginning and end of the school year, it is imperative that the strategies are monitored on a regular basis. It is suggested that minor interventions are monitored every 2 weeks and major interventions every 4-6 weeks to gauge their effectiveness and progression toward school goals. &ldquo;</p>\n        <p>Recognizing that each school will have distinct goals and initiatives, these monitoring guidelines are suggestions. What is imperative is that teams use the PDCA cycle to regularly monitor progress and take action when the data indicates that progress toward identified goals is not occurring.</p>\n        <p>School teams are cautioned that there may be an implementation lag when enacting a new program or process. Schools should not abandon an initiative if the initial examination of data/evidence does not indicate growth, but continue to monitor progress and analyze data/evidence to ensure that the program or process is being implemented with fidelity and that it is showing the intended results once staff become familiar and adept with the process. If ongoing analysis of data/evidence indicates that there is little or no growth over two or more cycles of analysis, then school personnel should closely examine the data/evidence to determine if there are issues with the process, the clientele, or the implementation, and make the necessary adjustments.&nbsp;</p>\n        <p>There are several key timeframes for activities within the PDCA. Sample cycles are provided as guidelines. The graphics inserted below delineate some of the suggested actions and recommended timeframes for activities.</p>\n        <p>The first graphic outlines the PDCA cycle. The second provides some suggested timelines and activities that schools may use to help guide their self-assessment and planning processes.&nbsp;</p>\n        <h3>Graphic 1: PDCA Cycle</h3>\n        <img width=\"100%\" src=\"./manifest/S2-PDCACycleGraphic.jpg\" alt=\"PDCA Cycle Graphic\">\n        <h3>Graphic 2: PDCA Calendar</h3>\n        <a target=\"_blank\" href=\"https://collabe.nbed.nb.ca/sites/10year/nbsip/Shared%20Documents/2.%20Provincial%20Improvement%20Framework%20and%20Associated%20Documents/PDCA%20Calendar%20Graphic.pdf?Web=1\">PDCA Calendar Graphic</a>\n        <br>\n        <br>\n        <p><a href=\"#_ftnref6\" name=\"_ftn6\">[6]</a> Deming, W. Edwards (1986). <em>Out of the Crisis</em>. Cambridge, MA: Massachusetts Institute of Technology, Center for Advanced Engineering Study.</p>\n        <p><a href=\"#_ftnref7\" name=\"_ftn7\">[7]</a> Blink, R. J. (2016). <em>Data-driven instructional leadership</em>. New York: Routledge.</p>"]);_templateObject29_6d670280e80511eb8c1eeb8ba8ae3128=function _templateObject29_6d670280e80511eb8c1eeb8ba8ae3128(){return data};return data}function _templateObject28_6d670280e80511eb8c1eeb8ba8ae3128(){var data=babelHelpers.taggedTemplateLiteral(["<p>Several key individuals and groups are important for the effective implementation of an improvement process at the school level, as outlined below. See also, <a target=\"_blank\" href=\"http://www2.gnb.ca/content/dam/gnb/Departments/ed/pdf/K12/dec-ced/RolesAndResponsibilities.pdf\">Roles and Responsibilities.pdf</a></p>"]);_templateObject28_6d670280e80511eb8c1eeb8ba8ae3128=function _templateObject28_6d670280e80511eb8c1eeb8ba8ae3128(){return data};return data}function _templateObject27_6d670280e80511eb8c1eeb8ba8ae3128(){var data=babelHelpers.taggedTemplateLiteral(["<p style=\"text-align: center;\">\n                <img width=\"70%\" src=\"./manifest/S1-ImprovementPlanningProcessOverview-img1.jpg\" alt=\"Improvement Planning Process Overview\" />\n                <img width=\"40%\" src=\"./manifest/S1-ImprovementPlanningProcessOverview-img2.jpg\" alt=\"Legend - Improvement Planning Process Overview\" />\n            </p>\n                      <p>The graphic inserted above explains the relationship between individual (e.g. school personnel), groups, districts, and cyclical processes. This graphic can also be used to help explain the interplay between short-term (PDCA) cycles of analysis, which are used to analyze data and help schools adapt to changing circumstances within the school year, and the longer cycles of activity which use data/evidence to track long-term progress toward annual and multi-year goals.&nbsp;</p>"]);_templateObject27_6d670280e80511eb8c1eeb8ba8ae3128=function _templateObject27_6d670280e80511eb8c1eeb8ba8ae3128(){return data};return data}function _templateObject26_6d670280e80511eb8c1eeb8ba8ae3128(){var data=babelHelpers.taggedTemplateLiteral(["<p>Districts will identify a process to provide feedback and support to school staff as needed. Support should be provided through either the school requesting district support or the district offering to provide support. At any time, schools or districts can seek or offer support or counsel. Where a school is accurate in their self-assessment and is attaining the goals outlined in the improvement plan, the request for consultation or support may more often originate from the school.&nbsp;</p>\n                      <p>In the event that a school may be struggling to effectively analyze data/evidence or accurately identify specific strengths and needs, district personnel may choose to be proactive and contact school personnel to offer guidance and/or support. Further, if a school has not been able to make progress with the goals identified in the Improvement Plan, schools may seek, or districts may offer, collaborative and constructive support in areas such as:</p>\n                      <ul>\n                      <li>Data (gathering and analysis).</li>\n                      <li>Establishing effective evidence-informed goals.</li>\n                      <li>Identifying strategies to facilitate growth.</li>\n                      <li>Focusing on student learning and advancing student outcomes.</li>\n                      <li>Other areas as determined in collaboration with schools.</li>\n                      </ul>\n                      <p>Lack of progress may become apparent through the analysis of the Annual School Performance Report or other factors (assessment results, Our School data, Teacher Perception Survey Data or other evidence).</p>\n                      <p>As noted, each district is required to establish and communicate a process to support improvement planning in schools. As part of this process, an individual or individuals will be identified to act as <strong>school liaison</strong> to provide links to resources, process knowledge, and/or support (e.g. act as, or refer to school personnel to, a <strong>critical friend</strong>). It has been recommended that the Director of Schools, Director of Curriculum and Instruction, Director of Education Support Services, or the Data and Accountability Supervisor be involved, depending on district preference and school needs. In collaboration with the principal/school team, district personnel could:&nbsp;</p>\n                      <ul>\n                      <li>help schools develop and clarify their vision, mission and value statements, where the latter exist;</li>\n                      <li>assist with the school improvement planning process, the establishment of effective goal setting and development of associated strategies;</li>\n                      <li>facilitate and support ongoing PL;</li>\n                      <li>advance shared leadership and participative decision-making;</li>\n                      <li>help schools to establish and maintain effective teaming and communication structures;</li>\n                      <li>assist schools to build capacity with the gathering, analysis, and use of data/evidence;</li>\n                      <li>identify links to supports and funding opportunities;</li>\n                      <li>assist schools to identify partnerships to help facilitate ongoing school improvement and the advancement of student outcomes; and</li>\n                      <li>act as a School Liaison and/or Critical Friend (this will be elaborated upon later in this document in the section, Roles and Responsibilities).</li>\n                      </ul>"]);_templateObject26_6d670280e80511eb8c1eeb8ba8ae3128=function _templateObject26_6d670280e80511eb8c1eeb8ba8ae3128(){return data};return data}function _templateObject25_6d670280e80511eb8c1eeb8ba8ae3128(){var data=babelHelpers.taggedTemplateLiteral(["<p>Each school will have a team focused on continuous improvement. This could be a team dedicated solely to school improvement, a combined school improvement and positive learning environment team, or a different configuration depending on school and district preference. Ultimately, in consultation with staff, the school principal will determine the configuration of the team based on their individual needs.</p>\n                      <p>Fullan (2000) notes that one of the core components of the school improvement process is &ldquo;(a) professional learning community in which staff work collaboratively to set clear goals for student learning, assess how well students are doing, develop action plans to increase student achievement, all the while being engaged in inquiry and problem-solving&rdquo;( p. 1).<a href=\"#_ftn2\" name=\"_ftnref2\">[2]</a> The improvement team will facilitate the annual self-assessment process and the ongoing monitoring of strategies and actions within the school year to promote continued growth.</p>\n                      <p>Improvement team options include the following:&nbsp;</p>\n                      <ol type=\"A\">\n                      <li>Core Leadership Team (CLT) and/or Distributive Leadership Team (Kilgore and Reynold, 2011<a href=\"#_ftn3\" name=\"_ftnref3\">[3]</a>)</li>\n                      <li>Dedicated School Improvement Planning (SIP) Team</li>\n                      <li>Combined Educational Support Services Team (ESST)/School Improvement Team</li>\n                      <li>Combined SIP/Positive Learning and Working Environment (PLWEP) Team</li>\n                      <li>Whole School Team</li>\n                      </ol>\n                      <p>Both makeup and number of members on a school team will be at the discretion of the school. Each potential structure is described as follows:</p>\n                      <ol type=\"A\">\n                      <li>The &ldquo;School Review Indicator Document with Explanatory Notes&rdquo; defines the Core Leadership Team (CLT) as being:\n                      <p>Composed of the Principal, Vice-Principal and a selection of key teacher leaders. Like all learning teams in the school, this team should be organized in a very structured manner. Team time should be regularly scheduled; norms should be established; agendas should be created; minutes should be kept and goals and follow-up actions should be developed and monitored. Since the key objective of the CLT is to help facilitate continuous improvement, change and growth, ensuring effective reciprocal communication, reporting to the entire staff, soliciting feedback, monitoring school-based teams and monitoring the Improvement Plan on a routine basis are critical responsibilities of this team. (p. 22).</p>\n                      <p>It is noted that a fundamental purpose of the CLT is to help facilitate continuous improvement and monitor the improvement plan on a regular basis. If a school has a number of initiatives and feels the CLT is better served focusing solely on advancing leadership capacity and informing decisions which have school-wide implications, they may choose to have a separate, dedicated, School Improvement Planning (SIP) Team.&nbsp;</p>\n                      </li>\n                      <li>If a school determines that there should be a dedicated School Improvement Planning (SIP) Team, separate from the Core Leadership Team, this team should be focused solely on the goals and strategies outlined in the improvement plan. The SIP team would be dedicated to ensuring the consistent implementation of initiatives designed to support the goals established in the improvement plan, monitoring progress, identifying necessary resources and professional learning needs associated with the plan, communicating with stakeholders, and providing an Annual School Performance Report on progress each January. Please see pg. 28 for further information on the Annual School Performance Report.\n                      <p>It is important to note that the SIP Team could include membership from the CLT and representation from other groups as appropriate.</p>\n                      </li>\n                      <li>\n                      <p>Combined Educational Support Services Team (ESST) and Improvement Planning Team: It may be beneficial to combine the Education Support Services Team (ESST) and the Leadership Team/Improvement Planning Team, if it is identified that many of the goals are overlapping. This decision should be made in the best interest of the school community in consultation with district personnel (e.g. the relevant Director of Schools).</p>\n                      </li>\n                      <li>Recognizing that each school is different, the decision to adopt a combined SIP/PLWEP team is entirely the choice of the school in consultation with the district. Recognizing this, when a school chooses to combine the SIP and PLWEP plans, there are key variables to consider.\n                      <ul>\n                      <li>The plan must align with policy requirements including ensuring adherence to the language established within the <em>Education Act</em> as well as policies 322 and 703 (see <a target=\"_blank\" href=\"./manifest/Appendix-B.pdf\">Appendix B</a> for an elaboration).</li>\n                      <li>All combined plans will have a dedicated PLWEP component which is identified specifically by that PLWEP designation.</li>\n                      <li>The dedicated PLWEP component of the plan must be able to stand alone in a fully comprehensible manner if removed from the remainder of the combined document.</li>\n                      <li>The PLWEP component must be removable in order to comply with Policy 703 and allow for timely replies to Right to Information and Protection of Privacy Act (RTIPPA) requests.</li>\n                      <li>In a tiered plan, the PLWEP component should be the first (highest priority) component in the plan if the data and evidence supports it.</li>\n                      </ul>\n                      <p><em>Please note: a wholly combined improvement planning document with no delineation between SIP and PLWEP contravenes the language outlined in Policy 322 and Policy 703.</em></p>\n                      <p>This combined approach can be used to strike a balance between administrative efficiency (combining the documents) and adherence to existing policy while also maintaining a necessary priority on PLWEP planning.&nbsp;</p>\n                      </li>\n                      <li>Whole School Team &ndash; in a situation where there is the equivalent of eight or fewer full-time teaching staff, schools may choose to adopt a whole school approach to improvement planning teaming. They may also choose to combine other teams which may be focused on similar content, if deemed appropriate.</li>\n                      </ol>\n                      <p>Schools may choose an atypical configuration if their needs are deemed distinct. Regardless of the preferred structure, the improvement team should be focused on continuous improvement and advancing (academic, behavioural and social-emotional) student outcomes.</p>\n                      <p>The following process suggests ways to determine the team configuration and membership:</p>\n                      <ol>\n                      <li><strong>School size and configuration</strong> &ndash; the size of the team is often dependent on the size and configuration of the school. A small school with a K-5 student population has different needs than a large 6-12 school; consequently, schools need to assess their own distinct needs when determining the size and makeup of the team. In general, those developing an improvement team should consider the following criteria:\n                      <ul>\n                      <li>Seven to nine members total is suggested, with a recommended minimum of five (depending on school size).</li>\n                      <li>Administrative representation.</li>\n                      <li>Teacher representation considering grades, levels and overall configuration.</li>\n                      <li>Support-staff representation.</li>\n                      <li>Representation from school-based teams with a specific focus on having Education Support Teacher-Guidance (EST-G) and Education Support Teacher-Resource (EST-R) representation.</li>\n                      <li>A mix of early-career and more experienced teachers.</li>\n                      <li>Identification of mechanisms to ensure access to student and parent voice. This could include direct participation on the committee or establishing avenues for formal (student and/or parent) communication with committee representatives to share ideas and/or concerns.</li>\n                      </ul>\n                      <p><em>Note: Student feedback could include ongoing consultation depending on the age and maturity of the student population. In the absence of direct attendance at committee meetings, schools could decide to use any of the following feedback mechanisms: through class and/or Student Representative Council (SRC) representatives, assemblies, Principal forums, focus groups, surveys, or any other viable means deemed appropriate and effective by the improvement team.</em></p>\n                      </li>\n                      <li>\n                      <p>The <strong>guidelines for improvement team members</strong> should include the length of appointment, and an elaboration of the roles and responsibilities associated with membership. For example, the consultative nature of the parent role should be delineated. Meeting norms should be established. Robert&rsquo;s Rules of Order could be applied for this purpose. Norms should include the appointment of a chair and secretary as well as the <strong>generation of agendas and minutes for each meeting</strong>. Schools may also wish to identify individuals with specific expertise to lead and/or support specific initiatives, i.e., Literacy, Math, Data or Resource Support.<br />See: <a target=\"_blank\" href=\"http://www.robertsrules.org/\">http://www.robertsrules.org/</a> for a quick reference to Robert&rsquo;s Rules.</p>\n                      </li>\n                      <li><strong>Training for improvement team members</strong> - In order for staff, students, families and other stakeholders to understand the process of school improvement, school leaders, with district support where needed, should provide an information session which includes:\n                      <ul>\n                      <li>an overview of the process; and,</li>\n                      <li>delineation of roles and responsibilities for individual members.</li>\n                      </ul>\n                      <p>A PowerPoint with notes to support the dialogue will be developed by each district leadership team with all districts represented. School leaders can use this as a guide when administering training sessions.&nbsp;</p>\n                      </li>\n                      </ol>\n                      <p>Note: Team structures should be established to ensure effective two-way communication occurs between improvement teams and stakeholders.</p>\n                      <p><a href=\"#_ftnref2\" name=\"_ftn2\">[2]</a> Fullan, M. (2000). <em>The role of the head in school improvement</em>. London, England: National College of School Leadership.&nbsp;</p>\n                      <p><a href=\"#_ftnref3\" name=\"_ftn3\">[3]</a> Kilgore, S., &amp; Reynolds, K. J. (2011). From silos to systems: Reframing schools for success. Thousand Oaks, Calif: Corwin.</p>\n                      "]);_templateObject25_6d670280e80511eb8c1eeb8ba8ae3128=function _templateObject25_6d670280e80511eb8c1eeb8ba8ae3128(){return data};return data}function _templateObject24_6d670280e80511eb8c1eeb8ba8ae3128(){var data=babelHelpers.taggedTemplateLiteral(["<p>The Parent School Support Committee (PSSC) is a parent advisory group whose primary responsibility is to advise on school improvement planning. There are several aspects associated with this role including:</p>\n        <ul>\n        <li>providing an avenue to access parent voice;&nbsp;</li>\n        <li>advising on school improvement initiatives and helping identify needs;&nbsp;</li>\n        <li>providing input on draft and finalized improvement plans;&nbsp;</li>\n        <li>liaising with District Education Council members through the PSSC chair regarding school strengths and needs;&nbsp;</li>\n        <li>working to strengthen school community communications; and,&nbsp;</li>\n        <li>providing input on potential partnerships to advance student outcomes.</li>\n        </ul>"]);_templateObject24_6d670280e80511eb8c1eeb8ba8ae3128=function _templateObject24_6d670280e80511eb8c1eeb8ba8ae3128(){return data};return data}function _templateObject23_6d670280e80511eb8c1eeb8ba8ae3128(){var data=babelHelpers.taggedTemplateLiteral(["<p>DECs are responsible for local decision-making in the operation of schools in their district. At the district level, DECs develop broad policies and their superintendents make day- to-day decisions within these policies. In so doing, the superintendent is accountable to the DEC for the management of services, programs and resources, for the quality of learning, and for the implementation of the annual District Education Plan and District Expenditure Plan.</p>"]);_templateObject23_6d670280e80511eb8c1eeb8ba8ae3128=function _templateObject23_6d670280e80511eb8c1eeb8ba8ae3128(){return data};return data}function _templateObject22_6d670280e80511eb8c1eeb8ba8ae3128(){var data=babelHelpers.taggedTemplateLiteral(["<p>The superintendent is the Chief Executive Officer (CEO) of the school district. As such, the superintendent is accountable to the District Education Council for the management of programs and resources, the quality of learning, and the implementation of the district education plan and district expenditure plan. The duties of the superintendent include responsibility for:</p>\n        <ul>\n        <li>day-to-day operation of schools;&nbsp;</li>\n        <li>preparing the District Education Plan;&nbsp;</li>\n        <li>preparing the District Performance Report;</li>\n        <li>preparing the District Expenditure Plan;&nbsp;</li>\n        <li>hiring/evaluating district and school staff;&nbsp;</li>\n        <li>managing budgets;&nbsp;</li>\n        <li>operational/administrative decision-making;&nbsp;</li>\n        <li>placement of students;&nbsp;</li>\n        <li>implementing and monitoring provincial and district policies;&nbsp;</li>\n        <li>teacher and teacher-aide assignments; and,&nbsp;</li>\n        <li>signing agreements.</li>\n        </ul>\n        <p>Taken from <a target=\"_blank\" href=\"http://www2.gnb.ca/content/dam/gnb/Departments/ed/pdf/K12/dec-ced/RolesAndResponsibilities.pdf\">New Brunswick Public Education: A Shared Responsibility</a></p>\n        <p>The superintendent is the sole employee of the DEC and the superintendent&rsquo;s decisions are made on behalf of, and subject to, any policies of the DEC. Superintendents play an important role in school improvement and monitoring of student learning and achievement by supporting policies and processes that promote school self-assessment, ongoing school growth, the adoption and use of promising practices, and by ensuring a focus on academic excellence and ongoing progress toward advancing student outcomes. Follow-up and support may include ensuring that resources are made available to schools to support the initiatives delineated in the improvement plans and ensuring that school, district and departmental plans are aligned to promote ongoing systemic growth.&nbsp;</p>"]);_templateObject22_6d670280e80511eb8c1eeb8ba8ae3128=function _templateObject22_6d670280e80511eb8c1eeb8ba8ae3128(){return data};return data}function _templateObject21_6d670280e80511eb8c1eeb8ba8ae3128(){var data=babelHelpers.taggedTemplateLiteral(["<p>The Minister&rsquo;s primary role is to set provincial parameters and direction in education. Through the Department of Education and Early Childhood Development, the Minister and designates act to:</p>\n        <ul>\n        <li>maintain an environment that supports learning;&nbsp;</li>\n        <li>provide funding and other resources;&nbsp;</li>\n        <li>establish a provincial education plan;&nbsp;</li>\n        <li>provide an appropriate legislation and policy framework;&nbsp;</li>\n        <li>identify and communicate provincial expectations to DECs, district staff, families and students;&nbsp;</li>\n        <li>meet with district personnel to discuss data/evidence from their schools and help determine supports to address identified needs; and,&nbsp;</li>\n        <li>encourage and enable the work of dedicated education professionals.</li>\n        </ul>"]);_templateObject21_6d670280e80511eb8c1eeb8ba8ae3128=function _templateObject21_6d670280e80511eb8c1eeb8ba8ae3128(){return data};return data}function _templateObject20_6d670280e80511eb8c1eeb8ba8ae3128(){var data=babelHelpers.taggedTemplateLiteral(["<p><em>The District </em></p>\n        <p>The work of the district will include helping to promote a culture of self-assessment, evidence-based inquiry and collective responsibility for continuous improvement at district, school and provincial levels. To do this effectively, districts must be collaborative, inclusive and respectful when working with schools. This necessitates a focus on equitable practices while recognizing the distinct nature and needs of each school. Reciprocal communication should be open, honest and focused on a process used primarily for supporting continuous improvement.&nbsp;</p>\n        <p>The district processes should:</p>\n        <ul>\n        <li>support the notion of continuous improvement for schools and districts;</li>\n        </ul>\n        <ul>\n        <li>support capacity building and autonomy at the school level;</li>\n        <li>support the self-assessment process at the school level and provide assistance to schools who may need assistance to effectively self-assess;&nbsp;</li>\n        <li>recognize the uniqueness of each school, and work to support the strategies undertaken to address the goals and advance student outcomes;</li>\n        <li>where needed, district staff (school liaisons and/or critical friends) will help schools develop a deeper understanding of the self-assessment process and the data/evidence which may be used to effectively self-analyze;</li>\n        <li>the school liaison provides a concrete link between the school and the district and can either act as a critical friend or help facilitate links to critical friend(s);</li>\n        <li>critical friends will work with school personnel in a constructive, non-threatening manner;&nbsp;</li>\n        <li>share high level information (e.g., high-level content derived from the schools&rsquo; annual progress reports) to Education and Early Childhood Development (EECD) to help inform long-term provincial planning, goal setting, professional learning and the allocation of supports;</li>\n        <li>support a cycle that helps align the school, district and provincial planning cycles (e.g., three to five years and/or alignment with the 10-year Education Plan); and,</li>\n        <li>support actions which help reach the objectives identified in the 10-year Education Plan.</li>\n        </ul>\n        <p><em>School Liaisons/Critical Friends</em></p>\n        <p>Many of the specific roles and responsibilities of the district staff were previously outlined in this document with the exception of the <em>school liaisons</em> and <em>critical friends</em>. The school liaison is a designated person at the district level who will link schools to critical friends or, when appropriate, will act as the critical friend. Critical friends act as a coach, facilitator or challenger and are used to help schools identify needs and build capacity. According to the Glossary of Educational Reform,</p>\n        <p class=\"block\">&ldquo;A critical friend is typically a colleague or other educational professional, such as a school coach, who is committed to helping an educator or school improve. A critical friend is someone who is encouraging and supportive, but who also provides honest and often candid feedback that may be uncomfortable or difficult to hear. In short, a critical friend is someone who agrees to speak truthfully, but constructively, about weaknesses, problems, and emotionally charged issues.&rdquo;</p>\n        <p>See: <a target=\"_blank\" href=\"https://www.edglossary.org/critical-friend/\">https://www.edglossary.org/critical-friend/</a></p>\n        <p>Schools may suggest others to act as critical friends, including colleagues working in like-sized or configured schools, working on similar initiatives or challenges, or those identified by the district using promising or exemplary practices in improvement planning, gathering and analysis of evidence, and ongoing monitoring of progress. District personnel acting as critical friends may refer principals, school administrative teams or improvement committee members to others who have expertise or experience in an area identified as a school improvement goal.&nbsp;</p>"]);_templateObject20_6d670280e80511eb8c1eeb8ba8ae3128=function _templateObject20_6d670280e80511eb8c1eeb8ba8ae3128(){return data};return data}function _templateObject19_6d670280e80511eb8c1eeb8ba8ae3128(){var data=babelHelpers.taggedTemplateLiteral(["<p>The improvement team should be collaborative and operate in an interdependent manner with stakeholders and potential partners. Although often grouped together and sometimes overlapping, there are often marked differences between stakeholders and partners.</p>\n        <p>A <strong>stakeholder</strong> is defined as &ldquo;any group or individual who can affect or is affected by the achievement of the organization&rsquo;s objectives&rdquo; (Freeman 1984)<a href=\"#_ftn4\" name=\"_ftnref4\">[4]</a>. More recently, when defining the term, proponents of change theory have included those who feel they have or will be influenced by an institution (Initiatives Management, EECD, 2017).</p>\n        <p>Friedman and Miles (2006)<a href=\"#_ftn5\" name=\"_ftnref5\">[5]</a> provide an exhaustive list of those who may be considered stakeholders. The main groups include customers/clients (students), employees, local communities, suppliers and distributors, and shareholders. Additionally, Friedman offers the media, the public in general, business partners, future generations, past generations (founders of organizations), academics, competitors, NGOs or activists. In addition, stakeholder representatives from trade unions or trade associations, financiers, competitors, government, regulators and policymakers could be considered.&nbsp;</p>\n        <p>The school administrative team and improvement committee members should work to identify potential <strong>partners</strong> and actively seek opportunities to communicate with and engage community members, organizations (non-profit), businesses, and other governmental and non-governmental agencies for potential partnerships and support. Many of these partnerships could provide school and community groups with some mutual benefit. For example, students taking Cooperative Education 120 could work with a seniors&rsquo; facility to support online learning for residents as part of their Co-op placement. Opportunities such as these provide practical learning experiences for students while also benefitting the institution hosting the student. It is important that potential partnerships between school and community, which provide the opportunity to advance student outcomes, be examined.&nbsp;</p>\n        <p>Regardless of the partner or stakeholders, it is important that team structures are established to promote effective two-way communication between the improvement team and groups with an interest in the improvement plan. To ensure this occurs, improvement teams should solicit feedback from partners and stakeholders prior to generating the plan. Once the improvement plan has been developed in draft form, it is important to communicate the plan to stakeholders for feedback, revisions and support as needed. One goal of this activity would be to examine opportunities for stakeholder support and options for additional partnerships. To accomplish this, schools should:</p>\n        <ul>\n        <li>provide a copy of the plan to all relevant stakeholders. (See <a target=\"_blank\" href=\"./manifest/Appendix-C.pdf\">Appendix C</a> for a sample improvement planning template.) This would include teachers, para-professionals (EAs, SIWs, administrative assistants, etc.), external partners, family representatives, District Education Council (DEC) and Parent School Support Committee (PSSC) members;</li>\n        <li>ensure the plan is reviewed at a staff meeting with all staff present. It is recommended this staff meeting take place at the beginning of the school year. During the meeting, demonstrate the alignment of the plan with district and departmental goals, the 10-year Education Plan objectives, and team or teacher growth goals as appropriate;</li>\n        <li>have the improvement planning team or school leaders present the improvement plan to the PSSC and request feedback; and,</li>\n        <li>consider including a copy of the plan on the school's website. This action may facilitate opportunities for further partnerships.</li>\n        </ul>\n        <p><a href=\"#_ftnref4\" name=\"_ftn4\">[4]</a> Freeman, R.E (1984). &ldquo;Strategic Management: A stakeholder Approach&rdquo;. Boston, MA: Pitman.</p>\n        <p><a href=\"#_ftnref5\" name=\"_ftn5\">[5]</a> Friedman, A. L., &amp; Miles, S. (2006). <em>Stakeholders: Theory and practice</em>. Oxford: Oxford University Press.</p>"]);_templateObject19_6d670280e80511eb8c1eeb8ba8ae3128=function _templateObject19_6d670280e80511eb8c1eeb8ba8ae3128(){return data};return data}function _templateObject18_6d670280e80511eb8c1eeb8ba8ae3128(){var data=babelHelpers.taggedTemplateLiteral(["<p>It is the responsibility of all school personnel to work to advance progress toward the goals outlined in the improvement plan. Teachers, support staff and other school personnel should:</p>\n        <ul>\n        <li>develop a working knowledge of the improvement process with the support of the improvement team;</li>\n        <li>participate in the school self-assessment process by examining classroom practices, overall school climate and evidence to help formulate goals and the associated strategies to advance progress towards these goals;</li>\n        <li>make links to the objectives of the 10-year Education Plan;</li>\n        <li>work collaboratively to develop the improvement plan and contribute to the ongoing monitoring of progress through the sharing of evidence;</li>\n        <li>have a working understanding of the improvement plan in relation to their roles and individual contributions to achieve the outcomes identified in the plan;</li>\n        <li>participate in Professional Learning opportunities designed to advance school goals and student outcomes;</li>\n        <li>work consistently and with fidelity to implement the strategies outlined in the plan; and,</li>\n        <li>participate in improvement planning meetings as requested.</li>\n        </ul>"]);_templateObject18_6d670280e80511eb8c1eeb8ba8ae3128=function _templateObject18_6d670280e80511eb8c1eeb8ba8ae3128(){return data};return data}function _templateObject17_6d670280e80511eb8c1eeb8ba8ae3128(){var data=babelHelpers.taggedTemplateLiteral(["<p>As noted on page 1, the makeup of the improvement committee is a school-based decision and could include any of the following: Core Leadership Team, Distributive Leadership Team, Dedicated School Improvement Planning (SIP) Team, Combined SIP/PLWEP Team, or a Whole School Team depending on the needs, size and configuration of the school.</p>\n        <p>The school improvement committee is responsible for supporting the principal and engaging school personnel to conduct the school improvement process, including all of the components listed above with the exception of the establishment of the committee.</p>\n        <p>In addition to the components listed above, the role of the school improvement committee is to:</p>\n        <ul>\n        <li>conduct the annual self-assessment across the four domains of school improvement (Systemic School Planning, Collaboration, Teaming and Leadership, Learning Environments, and Classroom Practice), while making links to the objectives of the 10-year Education Plan;</li>\n        <li>identify a few key goals;</li>\n        <li>ensure the establishment of strategies and actions to address identified goals;</li>\n        <li>report to the school principal and/or designate and other stakeholders on the progress of the school plan;;</li>\n        <li>collate and analyze the data/evidence required to effectively inform the Annual School Performance Report; and,</li>\n        <li>assist with the development, authoring and distribution of the Annual School Performance Report.</li>\n        </ul>\n        <p>Please note the school-wide goals are very broad. There should be alignment of the school-wide goals with the associated strategies and actions enacted at each level within the school. As we progress from schools, to teams, to classrooms and then to individual students, the strategies and actions, as well as the data used to measure progress, become more targeted.</p>\n        <p>The following diagram illustrates that the vision and mission are broad concepts that identify the preferred reality and the broad potential steps which personnel could take to advance outcomes. As we move from broad improvement goals and overall school strategies, we become more targeted. Team and individual strategies and actions should support diverse school goals aligned with the vision and mission of the school. The most targeted actions should occur at the individual student level and should be designed to accomplish two tasks: advance overall school goals and, most importantly, address the needs of the diverse clients (individual students) that we serve.</p>\n        <p style=\"text-align: center;\"><img width=\"50%\" src=\"./manifest/S1-RolesResponsibilities-img.jpg\" alt=\"Roles Responsibilities\" /></p>"]);_templateObject17_6d670280e80511eb8c1eeb8ba8ae3128=function _templateObject17_6d670280e80511eb8c1eeb8ba8ae3128(){return data};return data}function _templateObject16_6d670280e80511eb8c1eeb8ba8ae3128(){var data=babelHelpers.taggedTemplateLiteral(["<p>The principal and school administrative team consists of the principal and, depending on the size and configuration of the school, could include vice-principals, department heads and those in Supplementary Positions of Responsibility (SPRs). The principal is ultimately responsible for the overall performance and adherence to standards at the school level and must work with her/his team to ensure that effective school improvement processes are in place.</p>\n        <p>The role of the principal and/or designate is to:</p>\n        <ul>\n        <li>establish an improvement committee;</li>\n        <li>oversee the improvement process;</li>\n        <li>establish school goals and associated targets;</li>\n        <li>ensure that there is ongoing monitoring of progress;</li>\n        <li>liaise with district staff to source support;</li>\n        <li>ensure school and system alignment;</li>\n        <li>report regularly to the appropriate district personnel on progress and the advancement of student outcomes (academic, behavioural and social-emotional); and,</li>\n        <li>ensure the Annual School Performance Report is authored and shared with district personnel.</li>\n        </ul>"]);_templateObject16_6d670280e80511eb8c1eeb8ba8ae3128=function _templateObject16_6d670280e80511eb8c1eeb8ba8ae3128(){return data};return data}function _templateObject15_6d670280e80511eb8c1eeb8ba8ae3128(){var data=babelHelpers.taggedTemplateLiteral(["<p>Through extensive consultation with educators in New Brunswick, supported by exhaustive research in this (New Brunswick) and other jurisdictions in Canada and throughout the world, we have identified the following key components of the New Brunswick Improvement Planning Framework for Schools as follows:</p>\n        <ol>\n        <li>options for the school team;&nbsp;</li>\n        <li>district team including a School Liaison/Critical Friend(s) (a coach, facilitator or challenger used to help schools identify needs and advanced practices);</li>\n        <li>roles and responsibilities;</li>\n        <li>cycles;</li>\n        <li>school instrument for autonomous self-assessment;</li>\n        <li>data and evidence;</li>\n        <li>templates; and</li>\n        <li>School Performance Report (January) used as a mechanism for sharing high-level (aggregate) data from the schools, to districts, and then to the province.</li>\n        </ol>\n        <p><br /><em>Extensive systemic consultation indicated a desire for a balance of autonomy and accountability. Further, district representatives working on the Improvement Framework committee have noted distinct needs at the district and school levels; therefore, a degree of flexibility is embedded in terms of how these components are implemented in practice.</em> The content that follows provides an elaboration of the framework and a discussion of some practical strategies schools may use to help facilitate continuous improvement.</p>"]);_templateObject15_6d670280e80511eb8c1eeb8ba8ae3128=function _templateObject15_6d670280e80511eb8c1eeb8ba8ae3128(){return data};return data}function _templateObject14_6d670280e80511eb8c1eeb8ba8ae3128(){var data=babelHelpers.taggedTemplateLiteral(["<ul>\n        <li>Schools will establish an improvement plan and review multi-year plans annually.</li>\n        <li>School administrators, teachers, staff, and district personnel will support the plans.</li>\n        <li>Data will be shared via the annual self-assessment and authoring of the Annual School Performance Report. This report will identify school improvement goals and progress toward meeting these goals. Aggregate data will be used to help identify district and systemic needs.</li>\n        <li>When the data is submitted, districts will assist and support individual schools; at times, external expertise may be accessed to support growth in particular areas.</li>\n        <li>District data will be used to monitor and support:</li>\n        </ul>\n        <ul>\n        <li>student growth;</li>\n        <li>school processes; and,</li>\n        <li>building staff capacity in schools.</li>\n        </ul>\n        <ul>\n        <li>Data will be used to help inform the district improvement planning process.</li>\n        <li>Non-school specific aggregate data will be shared with the department and will be used to inform systemic needs. <strong>All school identifiers will be removed.</strong></li>\n        <li>The province will use the data to:</li>\n        <ul>\n        <li>ensure progress toward the objectives outlined in the 10-year Education Plan;</li>\n        <li>identify systemic trends; and,</li>\n        <li>inform resource allocation and PL needs for the upcoming school year.</li>\n        </ul>\n        </ul>"]);_templateObject14_6d670280e80511eb8c1eeb8ba8ae3128=function _templateObject14_6d670280e80511eb8c1eeb8ba8ae3128(){return data};return data}function _templateObject13_6d670280e80511eb8c1eeb8ba8ae3128(){var data=babelHelpers.taggedTemplateLiteral(["<p>The framework is based on the following fundamental principles.</p>\n        <ul>\n        <li>Student learning is at the center of the framework. All improvement plans should be focused on advancing student outcomes and working with students within their zone of proximal development to grow academically, behaviourally and socially-emotionally.&nbsp;</li>\n        <li>The data identified in school plans will be used to inform the district plan(s), which will then be used to drive provincial priorities.</li>\n        <li>The indicator document (which will include links to the 10-year Education Plan objectives) will be used as an assessment tool to identify the highest standards of effective practice and will help schools identify baseline objectives.</li>\n        <li>The framework will be used as a mechanism to assist schools to plan effectively. The individuality of the districts and schools will be valued.&nbsp; Schools will self-assess and identify their goals, associated strategies and actions based on their local school context, student profiles, staff capacity and what is relevant to address local needs. Autonomy on how these goals are realized will be based on local circumstances. It is recommended that schools limit their global priorities to a manageable number.&nbsp; Research indicates that it is beneficial to establish a maximum of five school-wide goals in each improvement plan with three being the preferred number (Duke; Carr; Sterrett, and Wooleyhand, 2014, p.71).<a href=\"#_ftn1\" name=\"_ftnref1\">[1]</a></li>\n        </ul>\n        <p><a href=\"#_ftnref1\" name=\"_ftn1\">[1]</a> Duke, D. L., Carr, M., Sterrett, W., &amp; Wooleyhand, C. (2014). The School Improvement Planning Handbook: Getting Focused for Turnaround and Transition. <em>Principal, 93, </em>4, 42.</p>"]);_templateObject13_6d670280e80511eb8c1eeb8ba8ae3128=function _templateObject13_6d670280e80511eb8c1eeb8ba8ae3128(){return data};return data}function _templateObject12_6d670280e80511eb8c1eeb8ba8ae3128(){var data=babelHelpers.taggedTemplateLiteral(["<p>Feedback from front line educators indicates that a self-assessment tool, based on the school review School Review Indicator Document originally established by the New Brunswick School Improvement Service (NBSIS), will serve as the self-assessment instrument for use at schools. Schools and districts will use this document, along with school-based data and evidence (conversations, observations and products), as a mechanism to help identify their particular areas of focus for improvement. Schools and districts may also choose to use other tools to help support the identification of their distinct areas for growth.</p>\n        <p>It is important to note that an annual review of the framework and the self-assessment tool will be completed to ensure ongoing alignment with current research and changing systemic needs. These annual updates will be done in consultation with districts and school personnel.</p>\n        <p>Schools will be asked to submit an <a target=\"_blank\" href=\"https://collabe.nbed.nb.ca/sites/10year/nbsip/Shared%20Documents/2.%20Provincial%20Improvement%20Framework%20and%20Associated%20Documents/Annual%20School%20Performance%20Report%20FINAL.docx?Web=1\">Annual School Performance Report</a> to district representatives. This report will outline their strengths and potential areas for growth, as well as their progress toward reaching school goals. Districts will then submit a high-level (aggregate) document to the department outlining the areas of focus they believe need to be prioritized in their district(s) and suggestions for upcoming resourcing and Professional Learning (PL) needs.</p>"]);_templateObject12_6d670280e80511eb8c1eeb8ba8ae3128=function _templateObject12_6d670280e80511eb8c1eeb8ba8ae3128(){return data};return data}function _templateObject11_6d670280e80511eb8c1eeb8ba8ae3128(){var data=babelHelpers.taggedTemplateLiteral(["<p>The necessity to align processes and practices are identified in the 10-year Education Plan. The plan notes that we need to:</p>\n        <p class=\"block\">&ldquo;work toward developing a cohesive system that is effective and efficient. We must align programs and services and promote collaborative planning and professional learning. Existing structures, practices and policies must be examined to ensure they are effectively supporting the needs and strengths of our learners&rdquo; (p.19).</p>\n        <p><a target=\"_blank\" href=\"http://www2.gnb.ca/content/dam/gnb/Departments/ed/pdf/K12/EveryoneAtTheirBest.pdf\">EveryoneAtTheirBest.pdf</a></p>\n        <p>The framework is used to help align all of the components in a complex system. This will include a system-wide approach designed to ensure that we are collectively working to address the objectives outlined in the 10-year Education Plan.&nbsp;</p>\n        <p>(See <a target=\"_blank\" href=\"./manifest/Appendix-A.pdf\">Appendix A</a> for a graphic outlining the objectives of the 10-year Ed Plan.)</p>\n        <p>The framework will assist districts working with their schools in identifying and working toward these objectives and will support effective school planning while allowing schools the autonomy to address the specific and varied needs identified at the individual school level.&nbsp;</p>"]);_templateObject11_6d670280e80511eb8c1eeb8ba8ae3128=function _templateObject11_6d670280e80511eb8c1eeb8ba8ae3128(){return data};return data}function _templateObject10_6d670280e80511eb8c1eeb8ba8ae3128(){var data=babelHelpers.taggedTemplateLiteral(["<p>The four main goals of the framework are to:</p>\n        <ol>\n        <li>improve systemic capacity to support the effective implementation of the provincial education plan;</li>\n        <li>provide a document which outlines suggested guidelines which assist districts and schools to effectively plan to maximize academic, behavioural and social-emotional outcomes for students;</li>\n        <li>provide a framework which balances school autonomy with systemic accountability; and</li>\n        <li>collate high-level aggregate data via the Annual School Performance Reports (ASPR), which will be completed during the annual School Improvement Plan (SIP) planning day. The data from these reports will be shared from schools to the districts and then to the province to better support schools through more effective resource allocation and targeted identification of professional learning (PL) needs for the upcoming school year.</li>\n        </ol>"]);_templateObject10_6d670280e80511eb8c1eeb8ba8ae3128=function _templateObject10_6d670280e80511eb8c1eeb8ba8ae3128(){return data};return data}function _templateObject9_6d670280e80511eb8c1eeb8ba8ae3128(){var data=babelHelpers.taggedTemplateLiteral(["<p>The desire for a consistent improvement planning framework for schools was identified by means of two major consultations.\xA0 The first was a consultation that focused on the 10-year Education Plan implementation.\xA0 The 10-year Education Plan implementation committee, which consisted of early childhood educators, representatives from the New Brunswick Teachers\u2019 Association, First Nation educators, families, principals, classroom teachers, and education system leaders, led consultations with over 4800 participants. When the team submitted their recommendations, the overarching request from the system was to establish clear expectations for implementing the 10-year Education Plan.</p>\n        <p>The second came from a system-wide consultation that occurred between the dates of November 24th and December 1st, 2017. This took into consideration the views of educators working on the front lines and included 2497 individual and school submissions. Ongoing consultations, including focus groups and individual dialogues, have occurred regularly following the larger consultations. From these consultations, the desire for a consistent improvement framework, to be used provincially throughout the four Anglophone school districts was identified. Suggestions for content to be included in this framework were also gathered from these systemic consultations.</p>\n        <p>Many New Brunswick public school policies identify the responsibilities of school personnel and others to support effective planning practices. These policies include Policy 322 (Inclusive Education) and Policy 703 (Positive Learning and Working Environment), as well as the <em>Education Act</em> and its supporting regulations. Specifically, section 27(1) and section 28(2) of the Act requires that teachers and principals \u201Cassist in the development and implementation of the school improvement plan and [cooperate] in the preparation of the Annual School Performance Report.\u201D The content included in this document offers guidelines to assist schools to do this in an efficient and effective manner.</p>\n        <p>Please see <a target=\"_blank\" href=\"./manifest/Appendix-G.pdf\">Appendix G</a> for an elaboration of the obligations associated with improvement planning in New Brunswick schools.\xA0</p>"]);_templateObject9_6d670280e80511eb8c1eeb8ba8ae3128=function _templateObject9_6d670280e80511eb8c1eeb8ba8ae3128(){return data};return data}function _templateObject8_6d670280e80511eb8c1eeb8ba8ae3128(){var data=babelHelpers.taggedTemplateLiteral(["<div class=\"tab-content fadeIn\">","</div>"]);_templateObject8_6d670280e80511eb8c1eeb8ba8ae3128=function _templateObject8_6d670280e80511eb8c1eeb8ba8ae3128(){return data};return data}function _templateObject7_6d670280e80511eb8c1eeb8ba8ae3128(){var data=babelHelpers.taggedTemplateLiteral(["+"]);_templateObject7_6d670280e80511eb8c1eeb8ba8ae3128=function _templateObject7_6d670280e80511eb8c1eeb8ba8ae3128(){return data};return data}function _templateObject6_6d670280e80511eb8c1eeb8ba8ae3128(){var data=babelHelpers.taggedTemplateLiteral(["-"]);_templateObject6_6d670280e80511eb8c1eeb8ba8ae3128=function _templateObject6_6d670280e80511eb8c1eeb8ba8ae3128(){return data};return data}function _templateObject5_6d670280e80511eb8c1eeb8ba8ae3128(){var data=babelHelpers.taggedTemplateLiteral(["\n\t\t\t\t\t<div class=\"tab ","\"\n\t\t\t\t\t\t\tdata-tab="," @click=",">\n\t\t\t\t\t\t<div style=\"flex: 1;\">","</div>\n\t\t\t\t\t\t<div style=\"flex: 0;\">","</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t","\n\t\t\t\t"]);_templateObject5_6d670280e80511eb8c1eeb8ba8ae3128=function _templateObject5_6d670280e80511eb8c1eeb8ba8ae3128(){return data};return data}function _templateObject4_6d670280e80511eb8c1eeb8ba8ae3128(){var data=babelHelpers.taggedTemplateLiteral(["\n\n\t\t<style>\n\t\t\t","\n\n\t\t\t:host { \n\t\t\t\tdisplay: block;\n\t\t\t\tfont-family: sans-serif;\n\t\t\t}\n\t\t\t:host([hidden]) { display: none; }\n\n\t\t\t.container {\n\t\t\t\tpadding: 1em;\n\t\t\t}\n\n\t\t\t.nav-section {\n\t\t\t\tpadding: 1em 0;\n\t\t\t}\n\n\t\t\t.tab {\n\t\t\t\tcursor: pointer;\n\t\t\t\tposition: relative;\n\t\t\t\tpadding: 10px;\n\n\t\t\t\tdisplay: flex;\n\n\t\t\t\tborder-top: 1px solid ",";\n\t\t\t}\n\n\t\t\t.tab-selected, .tab:hover {\n\t\t\t\tbackground-color: ",";\n\t\t\t\tborder-top: 2px solid ",";\n\n\t\t\t\tpadding-top: 9px;\n\n\t\t\t\tborder-top-right-radius: 5px;\n\t\t\t\tborder-top-left-radius: 5px;\n\t\t\t}\n\n\t\t\t.tab-content {\n\t\t\t\tposition: relative;\n\t\t\t\tpadding: 10px;\n\n\t\t\t\tborder-right: 1px solid ",";\n\t\t\t\tborder-bottom: 1px solid ",";\n\t\t\t\tborder-left: 1px solid ",";\n\t\t\t\tborder-bottom-right-radius: 5px;\n\t\t\t\tborder-bottom-left-radius: 5px;\n\t\t\t}\n\n\t\t</style>\n\n\t\t<div class=\"container\">\n\t\t\t","\n\t\t</div>\n\t\t"]);_templateObject4_6d670280e80511eb8c1eeb8ba8ae3128=function _templateObject4_6d670280e80511eb8c1eeb8ba8ae3128(){return data};return data}function _templateObject3_6d670280e80511eb8c1eeb8ba8ae3128(){var data=babelHelpers.taggedTemplateLiteral(["",""]);_templateObject3_6d670280e80511eb8c1eeb8ba8ae3128=function _templateObject3_6d670280e80511eb8c1eeb8ba8ae3128(){return data};return data}function _templateObject2_6d670280e80511eb8c1eeb8ba8ae3128(){var data=babelHelpers.taggedTemplateLiteral(["\n    ","\n    /* Global variables */\n    :host {\n        color: white;\n        background-color: #17181c;\n\n        /* menu */\n        --menu-bg: #222;\n        --menu-nav-bg: #17181cbb;\n        --menu-color-text: white;\n\n        /* tab */\n        --tab-color: #17181c;\n    }"]);_templateObject2_6d670280e80511eb8c1eeb8ba8ae3128=function _templateObject2_6d670280e80511eb8c1eeb8ba8ae3128(){return data};return data}function _templateObject_6d670280e80511eb8c1eeb8ba8ae3128(){var data=babelHelpers.taggedTemplateLiteral(["\n    /* Global variables */\n    :host {\n        /* section */\n        --s1-color: #f79646;\n        --s1-color-faded: #f7964655;\n        --s2-color: #9e2cf5;\n        --s2-color-faded: #9e2cf555;\n        --s3-color: #3f902f;\n        --s3-color-faded: #3f902f55;\n        --s4-color: #1e79e4;\n        --s4-color-faded: #1e79e455;\n\n        /* menu */\n        --menu-bg: #eee;\n        --menu-bg-selected: rgba(0, 112, 192, 0.8);\n        --menu-color-selected: #eee;\n        --menu-color-text: #333;\n        --menu-nav-bg: #fffb;\n\n        /* tab */\n        --tab-color: white;\n    }\n\n    body {\n        font: 16px/1.25 arial, sans-serif;\n        height: 100vh;\n    }\n\n    hr {\n        width: 40%;\n        text-align: left;\n        position: absolute;\n        border-top: 1px solid;\n    }\n\n    td {\n        vertical-align: top;\n    }\n\n    ul {\n        margin: 0.5em 0;\n    }\n\n    li {\n        padding: 0 0 0.5em 0;\n    }\n\n    .block {\n        margin: 1em 5em 1em 2em;\n    }\n\n    .fadeIn {\n        -webkit-animation: fadein 1s; /* Safari, Chrome and Opera > 12.1 */\n        -moz-animation: fadein 1s; /* Firefox < 16 */\n        -ms-animation: fadein 1s; /* Internet Explorer */\n        -o-animation: fadein 1s; /* Opera < 12.1 */\n        animation: fadein 1s;\n    }\n\n    @keyframes fadein {\n        from { opacity: 0; }\n        to   { opacity: 1; }\n    }\n\n    /* Firefox < 16 */\n    @-moz-keyframes fadein {\n        from { opacity: 0; }\n        to   { opacity: 1; }\n    }\n\n    /* Safari, Chrome and Opera > 12.1 */\n    @-webkit-keyframes fadein {\n        from { opacity: 0; }\n        to   { opacity: 1; }\n    }\n\n    /* Internet Explorer */\n    @-ms-keyframes fadein {\n        from { opacity: 0; }\n        to   { opacity: 1; }\n    }"]);_templateObject_6d670280e80511eb8c1eeb8ba8ae3128=function _templateObject_6d670280e80511eb8c1eeb8ba8ae3128(){return data};return data}/**
@license
Copyright (c) 2019 The Polymer Project Authors. All rights reserved.
This code may only be used under the BSD style license found at
http://polymer.github.io/LICENSE.txt The complete set of authors may be found at
http://polymer.github.io/AUTHORS.txt The complete set of contributors may be
found at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as
part of the polymer project is also subject to an additional IP rights grant
found at http://polymer.github.io/PATENTS.txt
*/ /**
    * Whether the current browser supports `adoptedStyleSheets`.
    */var supportsAdoptingStyleSheets=window.ShadowRoot&&(window.ShadyCSS===void 0||window.ShadyCSS.nativeShadow)&&"adoptedStyleSheets"in Document.prototype&&"replace"in CSSStyleSheet.prototype;_exports.supportsAdoptingStyleSheets$1=_exports.supportsAdoptingStyleSheets=supportsAdoptingStyleSheets;var constructionToken=Symbol(),CSSResult=/*#__PURE__*/function(){function CSSResult(cssText,safeToken){babelHelpers.classCallCheck(this,CSSResult);if(safeToken!==constructionToken){throw new Error("CSSResult is not constructable. Use `unsafeCSS` or `css` instead.")}this.cssText=cssText}// Note, this is a getter so that it's lazy. In practice, this means
// stylesheets are not created until the first element instance is made.
babelHelpers.createClass(CSSResult,[{key:"toString",value:function toString(){return this.cssText}},{key:"styleSheet",get:function get(){if(this._styleSheet===void 0){// Note, if `supportsAdoptingStyleSheets` is true then we assume
// CSSStyleSheet is constructable.
if(supportsAdoptingStyleSheets){this._styleSheet=new CSSStyleSheet;this._styleSheet.replaceSync(this.cssText)}else{this._styleSheet=null}}return this._styleSheet}}]);return CSSResult}();_exports.CSSResult$1=_exports.CSSResult=CSSResult;/**
   * Wrap a value for interpolation in a [[`css`]] tagged template literal.
   *
   * This is unsafe because untrusted CSS text can be used to phone home
   * or exfiltrate data to an attacker controlled site. Take care to only use
   * this with trusted input.
   */var unsafeCSS=function unsafeCSS(value){return new CSSResult(value+"",constructionToken)};_exports.unsafeCSS$1=_exports.unsafeCSS=unsafeCSS;var textFromCSSResult=function textFromCSSResult(value){if(babelHelpers.instanceof(value,CSSResult)){return value.cssText}else if("number"===typeof value){return value}else{throw new Error("Value passed to 'css' function must be a 'css' function result: ".concat(value,". Use 'unsafeCSS' to pass non-literal values, but\n            take care to ensure page security."))}},css=function css(strings){for(var _len=arguments.length,values=Array(1<_len?_len-1:0),_key=1;_key<_len;_key++){values[_key-1]=arguments[_key]}var cssText=values.reduce(function(acc,v,idx){return acc+textFromCSSResult(v)+strings[idx+1]},strings[0]);return new CSSResult(cssText,constructionToken)};/**
    * Template tag which which can be used with LitElement's [[LitElement.styles |
    * `styles`]] property to set element styles. For security reasons, only literal
    * string values may be used. To incorporate non-literal values [[`unsafeCSS`]]
    * may be used inside a template string part.
    */_exports.css$1=_exports.css=css;var cssTag={supportsAdoptingStyleSheets:supportsAdoptingStyleSheets,CSSResult:CSSResult,unsafeCSS:unsafeCSS,css:css};/**
    * @license
    * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.
    * This code may only be used under the BSD style license found at
    * http://polymer.github.io/LICENSE.txt
    * The complete set of authors may be found at
    * http://polymer.github.io/AUTHORS.txt
    * The complete set of contributors may be found at
    * http://polymer.github.io/CONTRIBUTORS.txt
    * Code distributed by Google as part of the polymer project is also
    * subject to an additional IP rights grant found at
    * http://polymer.github.io/PATENTS.txt
    */_exports.$cssTag=cssTag;var legacyCustomElement=function legacyCustomElement(tagName,clazz){window.customElements.define(tagName,clazz);// Cast as any because TS doesn't recognize the return type as being a
// subtype of the decorated class when clazz is typed as
// `Constructor<HTMLElement>` for some reason.
// `Constructor<HTMLElement>` is helpful to make sure the decorator is
// applied to elements however.
// tslint:disable-next-line:no-any
return clazz},standardCustomElement=function standardCustomElement(tagName,descriptor){var kind=descriptor.kind,elements=descriptor.elements;return{kind:kind,elements:elements,// This callback is called once the class is otherwise fully defined
finisher:function finisher(clazz){window.customElements.define(tagName,clazz)}}},customElement=function customElement(tagName){return function(classOrDescriptor){return"function"===typeof classOrDescriptor?legacyCustomElement(tagName,classOrDescriptor):standardCustomElement(tagName,classOrDescriptor)}};_exports.customElement$1=_exports.customElement=customElement;var standardProperty=function standardProperty(options,element){// When decorating an accessor, pass it through and add property metadata.
// Note, the `hasOwnProperty` check in `createProperty` ensures we don't
// stomp over the user's accessor.
if("method"===element.kind&&element.descriptor&&!("value"in element.descriptor)){return Object.assign(Object.assign({},element),{finisher:function finisher(clazz){clazz.createProperty(element.key,options)}})}else{// createProperty() takes care of defining the property, but we still
// must return some kind of descriptor, so return a descriptor for an
// unused prototype field. The finisher calls createProperty().
return{kind:"field",key:Symbol(),placement:"own",descriptor:{},// When @babel/plugin-proposal-decorators implements initializers,
// do this instead of the initializer below. See:
// https://github.com/babel/babel/issues/9260 extras: [
//   {
//     kind: 'initializer',
//     placement: 'own',
//     initializer: descriptor.initializer,
//   }
// ],
initializer:function initializer(){if("function"===typeof element.initializer){this[element.key]=element.initializer.call(this)}},finisher:function finisher(clazz){clazz.createProperty(element.key,options)}}}},legacyProperty=function legacyProperty(options,proto,name){proto.constructor.createProperty(name,options)};/**
    * A property decorator which creates a LitElement property which reflects a
    * corresponding attribute value. A [[`PropertyDeclaration`]] may optionally be
    * supplied to configure property features.
    *
    * This decorator should only be used for public fields. Private or protected
    * fields should use the [[`internalProperty`]] decorator.
    *
    * @example
    * ```ts
    * class MyElement {
    *   @property({ type: Boolean })
    *   clicked = false;
    * }
    * ```
    * @category Decorator
    * @ExportDecoratedItems
    */function property(options){// tslint:disable-next-line:no-any decorator
return function(protoOrDescriptor,name){return name!==void 0?legacyProperty(options,protoOrDescriptor,name):standardProperty(options,protoOrDescriptor)}}/**
   * Declares a private or protected property that still triggers updates to the
   * element when it changes.
   *
   * Properties declared this way must not be used from HTML or HTML templating
   * systems, they're solely for properties internal to the element. These
   * properties may be renamed by optimization tools like the Closure Compiler.
   * @category Decorator
   * @deprecated `internalProperty` has been renamed to `state` in lit-element
   *     3.0. Please update to `state` now to be compatible with 3.0.
   */function internalProperty(options){return property({attribute:!1,hasChanged:null===options||void 0===options?void 0:options.hasChanged})}/**
   * Declares a private or protected property that still triggers updates to the
   * element when it changes.
   *
   * Properties declared this way must not be used from HTML or HTML templating
   * systems, they're solely for properties internal to the element. These
   * properties may be renamed by optimization tools like the Closure Compiler.
   * @category Decorator
   */var state=function state(options){return internalProperty(options)};/**
                                                            * A property decorator that converts a class property into a getter that
                                                            * executes a querySelector on the element's renderRoot.
                                                            *
                                                            * @param selector A DOMString containing one or more selectors to match.
                                                            * @param cache An optional boolean which when true performs the DOM query only
                                                            * once and caches the result.
                                                            *
                                                            * See: https://developer.mozilla.org/en-US/docs/Web/API/Document/querySelector
                                                            *
                                                            * @example
                                                            *
                                                            * ```ts
                                                            * class MyElement {
                                                            *   @query('#first')
                                                            *   first;
                                                            *
                                                            *   render() {
                                                            *     return html`
                                                            *       <div id="first"></div>
                                                            *       <div id="second"></div>
                                                            *     `;
                                                            *   }
                                                            * }
                                                            * ```
                                                            * @category Decorator
                                                            */_exports.state$1=_exports.state=state;function query(selector,cache){return function(protoOrDescriptor,// tslint:disable-next-line:no-any decorator
name){var descriptor={get:function get(){return this.renderRoot.querySelector(selector)},enumerable:!0,configurable:!0};if(cache){var prop=name!==void 0?name:protoOrDescriptor.key,key="symbol"===babelHelpers.typeof(prop)?Symbol():"__".concat(prop);descriptor.get=function(){if(this[key]===void 0){this[key]=this.renderRoot.querySelector(selector)}return this[key]}}return name!==void 0?legacyQuery(descriptor,protoOrDescriptor,name):standardQuery(descriptor,protoOrDescriptor)}}// Note, in the future, we may extend this decorator to support the use case
// where the queried element may need to do work to become ready to interact
// with (e.g. load some implementation code). If so, we might elect to
// add a second argument defining a function that can be run to make the
// queried element loaded/updated/ready.
/**
 * A property decorator that converts a class property into a getter that
 * returns a promise that resolves to the result of a querySelector on the
 * element's renderRoot done after the element's `updateComplete` promise
 * resolves. When the queried property may change with element state, this
 * decorator can be used instead of requiring users to await the
 * `updateComplete` before accessing the property.
 *
 * @param selector A DOMString containing one or more selectors to match.
 *
 * See: https://developer.mozilla.org/en-US/docs/Web/API/Document/querySelector
 *
 * @example
 * ```ts
 * class MyElement {
 *   @queryAsync('#first')
 *   first;
 *
 *   render() {
 *     return html`
 *       <div id="first"></div>
 *       <div id="second"></div>
 *     `;
 *   }
 * }
 *
 * // external usage
 * async doSomethingWithFirst() {
 *  (await aMyElement.first).doSomething();
 * }
 * ```
 * @category Decorator
 */function queryAsync(selector){return function(protoOrDescriptor,// tslint:disable-next-line:no-any decorator
name){var descriptor={get:function(){var _get=babelHelpers.asyncToGenerator(/*#__PURE__*/regeneratorRuntime.mark(function _callee(){return regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return this.updateComplete;case 2:return _context.abrupt("return",this.renderRoot.querySelector(selector));case 3:case"end":return _context.stop();}}},_callee,this)}));function get(){return _get.apply(this,arguments)}return get}(),enumerable:!0,configurable:!0};return name!==void 0?legacyQuery(descriptor,protoOrDescriptor,name):standardQuery(descriptor,protoOrDescriptor)}}/**
   * A property decorator that converts a class property into a getter
   * that executes a querySelectorAll on the element's renderRoot.
   *
   * @param selector A DOMString containing one or more selectors to match.
   *
   * See:
   * https://developer.mozilla.org/en-US/docs/Web/API/Document/querySelectorAll
   *
   * @example
   * ```ts
   * class MyElement {
   *   @queryAll('div')
   *   divs;
   *
   *   render() {
   *     return html`
   *       <div id="first"></div>
   *       <div id="second"></div>
   *     `;
   *   }
   * }
   * ```
   * @category Decorator
   */function queryAll(selector){return function(protoOrDescriptor,// tslint:disable-next-line:no-any decorator
name){var descriptor={get:function get(){return this.renderRoot.querySelectorAll(selector)},enumerable:!0,configurable:!0};return name!==void 0?legacyQuery(descriptor,protoOrDescriptor,name):standardQuery(descriptor,protoOrDescriptor)}}var legacyQuery=function legacyQuery(descriptor,proto,name){Object.defineProperty(proto,name,descriptor)},standardQuery=function standardQuery(descriptor,element){return{kind:"method",placement:"prototype",key:element.key,descriptor:descriptor}},standardEventOptions=function standardEventOptions(options,element){return Object.assign(Object.assign({},element),{finisher:function finisher(clazz){Object.assign(clazz.prototype[element.key],options)}})},legacyEventOptions=// tslint:disable-next-line:no-any legacy decorator
function legacyEventOptions(options,proto,name){Object.assign(proto[name],options)};/**
    * Adds event listener options to a method used as an event listener in a
    * lit-html template.
    *
    * @param options An object that specifies event listener options as accepted by
    * `EventTarget#addEventListener` and `EventTarget#removeEventListener`.
    *
    * Current browsers support the `capture`, `passive`, and `once` options. See:
    * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Parameters
    *
    * @example
    * ```ts
    * class MyElement {
    *   clicked = false;
    *
    *   render() {
    *     return html`
    *       <div @click=${this._onClick}`>
    *         <button></button>
    *       </div>
    *     `;
    *   }
    *
    *   @eventOptions({capture: true})
    *   _onClick(e) {
    *     this.clicked = true;
    *   }
    * }
    * ```
    * @category Decorator
    */function eventOptions(options){// Return value typed as any to prevent TypeScript from complaining that
// standard decorator function signature does not match TypeScript decorator
// signature
// TODO(kschaaf): unclear why it was only failing on this decorator and not
// the others
return function(protoOrDescriptor,name){return name!==void 0?legacyEventOptions(options,protoOrDescriptor,name):standardEventOptions(options,protoOrDescriptor)}}// x-browser support for matches
// tslint:disable-next-line:no-any
var ElementProto=Element.prototype,legacyMatches=ElementProto.msMatchesSelector||ElementProto.webkitMatchesSelector;/**
                                                                                             * A property decorator that converts a class property into a getter that
                                                                                             * returns the `assignedNodes` of the given named `slot`. Note, the type of
                                                                                             * this property should be annotated as `NodeListOf<HTMLElement>`.
                                                                                             *
                                                                                             * @param slotName A string name of the slot.
                                                                                             * @param flatten A boolean which when true flattens the assigned nodes,
                                                                                             * meaning any assigned nodes that are slot elements are replaced with their
                                                                                             * assigned nodes.
                                                                                             * @param selector A string which filters the results to elements that match
                                                                                             * the given css selector.
                                                                                             *
                                                                                             * * @example
                                                                                             * ```ts
                                                                                             * class MyElement {
                                                                                             *   @queryAssignedNodes('list', true, '.item')
                                                                                             *   listItems;
                                                                                             *
                                                                                             *   render() {
                                                                                             *     return html`
                                                                                             *       <slot name="list"></slot>
                                                                                             *     `;
                                                                                             *   }
                                                                                             * }
                                                                                             * ```
                                                                                             * @category Decorator
                                                                                             */function queryAssignedNodes(){var slotName=0<arguments.length&&arguments[0]!==void 0?arguments[0]:"",flatten=1<arguments.length&&arguments[1]!==void 0?arguments[1]:!1,selector=2<arguments.length&&arguments[2]!==void 0?arguments[2]:"";return function(protoOrDescriptor,// tslint:disable-next-line:no-any decorator
name){var descriptor={get:function get(){var slotSelector="slot".concat(slotName?"[name=".concat(slotName,"]"):":not([name])"),slot=this.renderRoot.querySelector(slotSelector),nodes=slot&&slot.assignedNodes({flatten:flatten});if(nodes&&selector){nodes=nodes.filter(function(node){return node.nodeType===Node.ELEMENT_NODE&&(// tslint:disable-next-line:no-any testing existence on older browsers
node.matches?node.matches(selector):legacyMatches.call(node,selector))})}return nodes},enumerable:!0,configurable:!0};return name!==void 0?legacyQuery(descriptor,protoOrDescriptor,name):standardQuery(descriptor,protoOrDescriptor)}}var decorators={customElement:customElement,property:property,internalProperty:internalProperty,state:state,query:query,queryAsync:queryAsync,queryAll:queryAll,eventOptions:eventOptions,queryAssignedNodes:queryAssignedNodes};/**
    * @license
    * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.
    * This code may only be used under the BSD style license found at
    * http://polymer.github.io/LICENSE.txt
    * The complete set of authors may be found at
    * http://polymer.github.io/AUTHORS.txt
    * The complete set of contributors may be found at
    * http://polymer.github.io/CONTRIBUTORS.txt
    * Code distributed by Google as part of the polymer project is also
    * subject to an additional IP rights grant found at
    * http://polymer.github.io/PATENTS.txt
    */_exports.$decorators=decorators;var _a;/**
         * Use this module if you want to create your own base class extending
         * [[UpdatingElement]].
         * @packageDocumentation
         */ /*
             * When using Closure Compiler, JSCompiler_renameProperty(property, object) is
             * replaced at compile time by the munged name for object[property]. We cannot
             * alias this function, so we have to use a small shim that has the same
             * behavior when not compiling.
             */window.JSCompiler_renameProperty=function(prop,_obj){return prop};var defaultConverter={toAttribute:function toAttribute(value,type){switch(type){case Boolean:return value?"":null;case Object:case Array:// if the value is `null` or `undefined` pass this through
// to allow removing/no change behavior.
return null==value?value:JSON.stringify(value);}return value},fromAttribute:function fromAttribute(value,type){switch(type){case Boolean:return null!==value;case Number:return null===value?null:+value;case Object:case Array:// Type assert to adhere to Bazel's "must type assert JSON parse" rule.
return JSON.parse(value);}return value}};/**
    * Change function that returns true if `value` is different from `oldValue`.
    * This method is used as the default for a property's `hasChanged` function.
    */_exports.defaultConverter$1=_exports.defaultConverter=defaultConverter;var notEqual=function notEqual(value,old){// This ensures (old==NaN, value==NaN) always returns false
return old!==value&&(old===old||value===value)};_exports.notEqual$1=_exports.notEqual=notEqual;var defaultPropertyDeclaration={attribute:!0,type:String,converter:defaultConverter,reflect:!1,hasChanged:notEqual},STATE_HAS_UPDATED=1,STATE_UPDATE_REQUESTED=1<<2,STATE_IS_REFLECTING_TO_ATTRIBUTE=1<<3,STATE_IS_REFLECTING_TO_PROPERTY=1<<4,finalized="finalized",UpdatingElement=/*#__PURE__*/function(_HTMLElement){babelHelpers.inherits(UpdatingElement,_HTMLElement);function UpdatingElement(){var _this;babelHelpers.classCallCheck(this,UpdatingElement);_this=babelHelpers.possibleConstructorReturn(this,babelHelpers.getPrototypeOf(UpdatingElement).call(this));_this.initialize();return _this}/**
     * Returns a list of attributes corresponding to the registered properties.
     * @nocollapse
     */babelHelpers.createClass(UpdatingElement,[{key:"initialize",/**
     * Performs element initialization. By default captures any pre-set values for
     * registered properties.
     */value:function initialize(){var _this2=this;this._updateState=0;this._updatePromise=new Promise(function(res){return _this2._enableUpdatingResolver=res});this._changedProperties=new Map;this._saveInstanceProperties();// ensures first update will be caught by an early access of
// `updateComplete`
this.requestUpdateInternal()}/**
     * Fixes any properties set on the instance before upgrade time.
     * Otherwise these would shadow the accessor and break these properties.
     * The properties are stored in a Map which is played back after the
     * constructor runs. Note, on very old versions of Safari (<=9) or Chrome
     * (<=41), properties created for native platform properties like (`id` or
     * `name`) may not have default values set in the element constructor. On
     * these browsers native properties appear on instances and therefore their
     * default value will overwrite any element default (e.g. if the element sets
     * this.id = 'id' in the constructor, the 'id' will become '' since this is
     * the native platform default).
     */},{key:"_saveInstanceProperties",value:function _saveInstanceProperties(){var _this3=this;// Use forEach so this works even if for/of loops are compiled to for loops
// expecting arrays
this.constructor._classProperties.forEach(function(_v,p){if(_this3.hasOwnProperty(p)){var value=_this3[p];delete _this3[p];if(!_this3._instanceProperties){_this3._instanceProperties=new Map}_this3._instanceProperties.set(p,value)}})}/**
     * Applies previously saved instance properties.
     */},{key:"_applyInstanceProperties",value:function _applyInstanceProperties(){var _this4=this;// Use forEach so this works even if for/of loops are compiled to for loops
// expecting arrays
// tslint:disable-next-line:no-any
this._instanceProperties.forEach(function(v,p){return _this4[p]=v});this._instanceProperties=void 0}},{key:"connectedCallback",value:function connectedCallback(){// Ensure first connection completes an update. Updates cannot complete
// before connection.
this.enableUpdating()}},{key:"enableUpdating",value:function enableUpdating(){if(this._enableUpdatingResolver!==void 0){this._enableUpdatingResolver();this._enableUpdatingResolver=void 0}}/**
     * Allows for `super.disconnectedCallback()` in extensions while
     * reserving the possibility of making non-breaking feature additions
     * when disconnecting at some point in the future.
     */},{key:"disconnectedCallback",value:function disconnectedCallback(){}/**
                             * Synchronizes property values when attributes change.
                             */},{key:"attributeChangedCallback",value:function attributeChangedCallback(name,old,value){if(old!==value){this._attributeToProperty(name,value)}}},{key:"_propertyToAttribute",value:function _propertyToAttribute(name,value){var options=2<arguments.length&&arguments[2]!==void 0?arguments[2]:defaultPropertyDeclaration,ctor=this.constructor,attr=ctor._attributeNameForProperty(name,options);if(attr!==void 0){var attrValue=ctor._propertyValueToAttribute(value,options);// an undefined value does not change the attribute.
if(attrValue===void 0){return}// Track if the property is being reflected to avoid
// setting the property again via `attributeChangedCallback`. Note:
// 1. this takes advantage of the fact that the callback is synchronous.
// 2. will behave incorrectly if multiple attributes are in the reaction
// stack at time of calling. However, since we process attributes
// in `update` this should not be possible (or an extreme corner case
// that we'd like to discover).
// mark state reflecting
this._updateState=this._updateState|STATE_IS_REFLECTING_TO_ATTRIBUTE;if(null==attrValue){this.removeAttribute(attr)}else{this.setAttribute(attr,attrValue)}// mark state not reflecting
this._updateState=this._updateState&~STATE_IS_REFLECTING_TO_ATTRIBUTE}}},{key:"_attributeToProperty",value:function _attributeToProperty(name,value){// Use tracking info to avoid deserializing attribute value if it was
// just set from a property setter.
if(this._updateState&STATE_IS_REFLECTING_TO_ATTRIBUTE){return}var ctor=this.constructor,propName=ctor._attributeToPropertyMap.get(name);// Note, hint this as an `AttributeMap` so closure clearly understands
// the type; it has issues with tracking types through statics
// tslint:disable-next-line:no-unnecessary-type-assertion
if(propName!==void 0){var options=ctor.getPropertyOptions(propName);// mark state reflecting
this._updateState=this._updateState|STATE_IS_REFLECTING_TO_PROPERTY;this[propName]=// tslint:disable-next-line:no-any
ctor._propertyValueFromAttribute(value,options);// mark state not reflecting
this._updateState=this._updateState&~STATE_IS_REFLECTING_TO_PROPERTY}}/**
     * This protected version of `requestUpdate` does not access or return the
     * `updateComplete` promise. This promise can be overridden and is therefore
     * not free to access.
     */},{key:"requestUpdateInternal",value:function requestUpdateInternal(name,oldValue,options){var shouldRequestUpdate=!0;// If we have a property key, perform property update steps.
if(name!==void 0){var ctor=this.constructor;options=options||ctor.getPropertyOptions(name);if(ctor._valueHasChanged(this[name],oldValue,options.hasChanged)){if(!this._changedProperties.has(name)){this._changedProperties.set(name,oldValue)}// Add to reflecting properties set.
// Note, it's important that every change has a chance to add the
// property to `_reflectingProperties`. This ensures setting
// attribute + property reflects correctly.
if(!0===options.reflect&&!(this._updateState&STATE_IS_REFLECTING_TO_PROPERTY)){if(this._reflectingProperties===void 0){this._reflectingProperties=new Map}this._reflectingProperties.set(name,options)}}else{// Abort the request if the property should not be considered changed.
shouldRequestUpdate=!1}}if(!this._hasRequestedUpdate&&shouldRequestUpdate){this._updatePromise=this._enqueueUpdate()}}/**
     * Requests an update which is processed asynchronously. This should
     * be called when an element should update based on some state not triggered
     * by setting a property. In this case, pass no arguments. It should also be
     * called when manually implementing a property setter. In this case, pass the
     * property `name` and `oldValue` to ensure that any configured property
     * options are honored. Returns the `updateComplete` Promise which is resolved
     * when the update completes.
     *
     * @param name {PropertyKey} (optional) name of requesting property
     * @param oldValue {any} (optional) old value of requesting property
     * @returns {Promise} A Promise that is resolved when the update completes.
     */},{key:"requestUpdate",value:function requestUpdate(name,oldValue){this.requestUpdateInternal(name,oldValue);return this.updateComplete}/**
     * Sets up the element to asynchronously update.
     */},{key:"_enqueueUpdate",value:function(){var _enqueueUpdate2=babelHelpers.asyncToGenerator(/*#__PURE__*/regeneratorRuntime.mark(function _callee2(){var result;return regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:this._updateState=this._updateState|STATE_UPDATE_REQUESTED;_context2.prev=1;_context2.next=4;return this._updatePromise;case 4:_context2.next=8;break;case 6:_context2.prev=6;_context2.t0=_context2["catch"](1);case 8:result=this.performUpdate();// If `performUpdate` returns a Promise, we await it. This is done to
// enable coordinating updates with a scheduler. Note, the result is
// checked to avoid delaying an additional microtask unless we need to.
if(!(null!=result)){_context2.next=12;break}_context2.next=12;return result;case 12:return _context2.abrupt("return",!this._hasRequestedUpdate);case 13:case"end":return _context2.stop();}}},_callee2,this,[[1,6]])}));function _enqueueUpdate(){return _enqueueUpdate2.apply(this,arguments)}return _enqueueUpdate}()},{key:"performUpdate",/**
     * Performs an element update. Note, if an exception is thrown during the
     * update, `firstUpdated` and `updated` will not be called.
     *
     * You can override this method to change the timing of updates. If this
     * method is overridden, `super.performUpdate()` must be called.
     *
     * For instance, to schedule updates to occur just before the next frame:
     *
     * ```
     * protected async performUpdate(): Promise<unknown> {
     *   await new Promise((resolve) => requestAnimationFrame(() => resolve()));
     *   super.performUpdate();
     * }
     * ```
     */value:function performUpdate(){// Abort any update if one is not pending when this is called.
// This can happen if `performUpdate` is called early to "flush"
// the update.
if(!this._hasRequestedUpdate){return}// Mixin instance properties once, if they exist.
if(this._instanceProperties){this._applyInstanceProperties()}var shouldUpdate=!1,changedProperties=this._changedProperties;try{shouldUpdate=this.shouldUpdate(changedProperties);if(shouldUpdate){this.update(changedProperties)}else{this._markUpdated()}}catch(e){// Prevent `firstUpdated` and `updated` from running when there's an
// update exception.
shouldUpdate=!1;// Ensure element can accept additional updates after an exception.
this._markUpdated();throw e}if(shouldUpdate){if(!(this._updateState&STATE_HAS_UPDATED)){this._updateState=this._updateState|STATE_HAS_UPDATED;this.firstUpdated(changedProperties)}this.updated(changedProperties)}}},{key:"_markUpdated",value:function _markUpdated(){this._changedProperties=new Map;this._updateState=this._updateState&~STATE_UPDATE_REQUESTED}/**
     * Returns a Promise that resolves when the element has completed updating.
     * The Promise value is a boolean that is `true` if the element completed the
     * update without triggering another update. The Promise result is `false` if
     * a property was set inside `updated()`. If the Promise is rejected, an
     * exception was thrown during the update.
     *
     * To await additional asynchronous work, override the `_getUpdateComplete`
     * method. For example, it is sometimes useful to await a rendered element
     * before fulfilling this Promise. To do this, first await
     * `super._getUpdateComplete()`, then any subsequent state.
     *
     * @returns {Promise} The Promise returns a boolean that indicates if the
     * update resolved without triggering another update.
     */},{key:"_getUpdateComplete",/**
     * Override point for the `updateComplete` promise.
     *
     * It is not safe to override the `updateComplete` getter directly due to a
     * limitation in TypeScript which means it is not possible to call a
     * superclass getter (e.g. `super.updateComplete.then(...)`) when the target
     * language is ES5 (https://github.com/microsoft/TypeScript/issues/338).
     * This method should be overridden instead. For example:
     *
     *   class MyElement extends LitElement {
     *     async _getUpdateComplete() {
     *       await super._getUpdateComplete();
     *       await this._myChild.updateComplete;
     *     }
     *   }
     * @deprecated Override `getUpdateComplete()` instead for forward
     *     compatibility with `lit-element` 3.0 / `@lit/reactive-element`.
     */value:function _getUpdateComplete(){return this.getUpdateComplete()}/**
     * Override point for the `updateComplete` promise.
     *
     * It is not safe to override the `updateComplete` getter directly due to a
     * limitation in TypeScript which means it is not possible to call a
     * superclass getter (e.g. `super.updateComplete.then(...)`) when the target
     * language is ES5 (https://github.com/microsoft/TypeScript/issues/338).
     * This method should be overridden instead. For example:
     *
     *   class MyElement extends LitElement {
     *     async getUpdateComplete() {
     *       await super.getUpdateComplete();
     *       await this._myChild.updateComplete;
     *     }
     *   }
     */},{key:"getUpdateComplete",value:function getUpdateComplete(){return this._updatePromise}/**
     * Controls whether or not `update` should be called when the element requests
     * an update. By default, this method always returns `true`, but this can be
     * customized to control when to update.
     *
     * @param _changedProperties Map of changed properties with old values
     */},{key:"shouldUpdate",value:function shouldUpdate(_changedProperties){return!0}/**
     * Updates the element. This method reflects property values to attributes.
     * It can be overridden to render and keep updated element DOM.
     * Setting properties inside this method will *not* trigger
     * another update.
     *
     * @param _changedProperties Map of changed properties with old values
     */},{key:"update",value:function update(_changedProperties){var _this5=this;if(this._reflectingProperties!==void 0&&0<this._reflectingProperties.size){// Use forEach so this works even if for/of loops are compiled to for
// loops expecting arrays
this._reflectingProperties.forEach(function(v,k){return _this5._propertyToAttribute(k,_this5[k],v)});this._reflectingProperties=void 0}this._markUpdated()}/**
     * Invoked whenever the element is updated. Implement to perform
     * post-updating tasks via DOM APIs, for example, focusing an element.
     *
     * Setting properties inside this method will trigger the element to update
     * again after this update cycle completes.
     *
     * @param _changedProperties Map of changed properties with old values
     */},{key:"updated",value:function updated(_changedProperties){}/**
                                  * Invoked when the element is first updated. Implement to perform one time
                                  * work on the element after update.
                                  *
                                  * Setting properties inside this method will trigger the element to update
                                  * again after this update cycle completes.
                                  *
                                  * @param _changedProperties Map of changed properties with old values
                                  */},{key:"firstUpdated",value:function firstUpdated(_changedProperties){}},{key:"_hasRequestedUpdate",get:function get(){return this._updateState&STATE_UPDATE_REQUESTED}},{key:"hasUpdated",get:function get(){return this._updateState&STATE_HAS_UPDATED}},{key:"updateComplete",get:function get(){return this._getUpdateComplete()}}],[{key:"_ensureClassProperties",/**
     * Ensures the private `_classProperties` property metadata is created.
     * In addition to `finalize` this is also called in `createProperty` to
     * ensure the `@property` decorator can add property metadata.
     */ /** @nocollapse */value:function _ensureClassProperties(){var _this6=this;// ensure private storage for property declarations.
if(!this.hasOwnProperty(JSCompiler_renameProperty("_classProperties",this))){this._classProperties=new Map;// NOTE: Workaround IE11 not supporting Map constructor argument.
var superProperties=Object.getPrototypeOf(this)._classProperties;if(superProperties!==void 0){superProperties.forEach(function(v,k){return _this6._classProperties.set(k,v)})}}}/**
     * Creates a property accessor on the element prototype if one does not exist
     * and stores a PropertyDeclaration for the property with the given options.
     * The property setter calls the property's `hasChanged` property option
     * or uses a strict identity check to determine whether or not to request
     * an update.
     *
     * This method may be overridden to customize properties; however,
     * when doing so, it's important to call `super.createProperty` to ensure
     * the property is setup correctly. This method calls
     * `getPropertyDescriptor` internally to get a descriptor to install.
     * To customize what properties do when they are get or set, override
     * `getPropertyDescriptor`. To customize the options for a property,
     * implement `createProperty` like this:
     *
     * static createProperty(name, options) {
     *   options = Object.assign(options, {myOption: true});
     *   super.createProperty(name, options);
     * }
     *
     * @nocollapse
     */},{key:"createProperty",value:function createProperty(name){var options=1<arguments.length&&arguments[1]!==void 0?arguments[1]:defaultPropertyDeclaration;// Note, since this can be called by the `@property` decorator which
// is called before `finalize`, we ensure storage exists for property
// metadata.
this._ensureClassProperties();this._classProperties.set(name,options);// Do not generate an accessor if the prototype already has one, since
// it would be lost otherwise and that would never be the user's intention;
// Instead, we expect users to call `requestUpdate` themselves from
// user-defined accessors. Note that if the super has an accessor we will
// still overwrite it
if(options.noAccessor||this.prototype.hasOwnProperty(name)){return}var key="symbol"===babelHelpers.typeof(name)?Symbol():"__".concat(name),descriptor=this.getPropertyDescriptor(name,key,options);if(descriptor!==void 0){Object.defineProperty(this.prototype,name,descriptor)}}/**
     * Returns a property descriptor to be defined on the given named property.
     * If no descriptor is returned, the property will not become an accessor.
     * For example,
     *
     *   class MyElement extends LitElement {
     *     static getPropertyDescriptor(name, key, options) {
     *       const defaultDescriptor =
     *           super.getPropertyDescriptor(name, key, options);
     *       const setter = defaultDescriptor.set;
     *       return {
     *         get: defaultDescriptor.get,
     *         set(value) {
     *           setter.call(this, value);
     *           // custom action.
     *         },
     *         configurable: true,
     *         enumerable: true
     *       }
     *     }
     *   }
     *
     * @nocollapse
     */},{key:"getPropertyDescriptor",value:function getPropertyDescriptor(name,key,options){return{// tslint:disable-next-line:no-any no symbol in index
get:function get(){return this[key]},set:function set(value){var oldValue=this[name];this[key]=value;this.requestUpdateInternal(name,oldValue,options)},configurable:!0,enumerable:!0}}/**
     * Returns the property options associated with the given property.
     * These options are defined with a PropertyDeclaration via the `properties`
     * object or the `@property` decorator and are registered in
     * `createProperty(...)`.
     *
     * Note, this method should be considered "final" and not overridden. To
     * customize the options for a given property, override `createProperty`.
     *
     * @nocollapse
     * @final
     */},{key:"getPropertyOptions",value:function getPropertyOptions(name){return this._classProperties&&this._classProperties.get(name)||defaultPropertyDeclaration}/**
     * Creates property accessors for registered properties and ensures
     * any superclasses are also finalized.
     * @nocollapse
     */},{key:"finalize",value:function finalize(){// finalize any superclasses
var superCtor=Object.getPrototypeOf(this);if(!superCtor.hasOwnProperty(finalized)){superCtor.finalize()}this[finalized]=!0;this._ensureClassProperties();// initialize Map populated in observedAttributes
this._attributeToPropertyMap=new Map;// make any properties
// Note, only process "own" properties since this element will inherit
// any properties defined on the superClass, and finalization ensures
// the entire prototype chain is finalized.
if(this.hasOwnProperty(JSCompiler_renameProperty("properties",this))){var props=this.properties,propKeys=[].concat(babelHelpers.toConsumableArray(Object.getOwnPropertyNames(props)),babelHelpers.toConsumableArray("function"===typeof Object.getOwnPropertySymbols?Object.getOwnPropertySymbols(props):[])),_iteratorNormalCompletion=!0,_didIteratorError=!1,_iteratorError=void 0;// support symbols in properties (IE11 does not support this)
try{// This for/of is ok because propKeys is an array
for(var _iterator=propKeys[Symbol.iterator](),_step,p;!(_iteratorNormalCompletion=(_step=_iterator.next()).done);_iteratorNormalCompletion=!0){p=_step.value;// note, use of `any` is due to TypeSript lack of support for symbol in
// index types
// tslint:disable-next-line:no-any no symbol in index
this.createProperty(p,props[p])}}catch(err){_didIteratorError=!0;_iteratorError=err}finally{try{if(!_iteratorNormalCompletion&&null!=_iterator.return){_iterator.return()}}finally{if(_didIteratorError){throw _iteratorError}}}}}/**
     * Returns the property name for the given attribute `name`.
     * @nocollapse
     */},{key:"_attributeNameForProperty",value:function _attributeNameForProperty(name,options){var attribute=options.attribute;return!1===attribute?void 0:"string"===typeof attribute?attribute:"string"===typeof name?name.toLowerCase():void 0}/**
     * Returns true if a property should request an update.
     * Called when a property value is set and uses the `hasChanged`
     * option for the property if present or a strict identity check.
     * @nocollapse
     */},{key:"_valueHasChanged",value:function _valueHasChanged(value,old){var hasChanged=2<arguments.length&&arguments[2]!==void 0?arguments[2]:notEqual;return hasChanged(value,old)}/**
     * Returns the property value for the given attribute value.
     * Called via the `attributeChangedCallback` and uses the property's
     * `converter` or `converter.fromAttribute` property option.
     * @nocollapse
     */},{key:"_propertyValueFromAttribute",value:function _propertyValueFromAttribute(value,options){var type=options.type,converter=options.converter||defaultConverter,fromAttribute="function"===typeof converter?converter:converter.fromAttribute;return fromAttribute?fromAttribute(value,type):value}/**
     * Returns the attribute value for the given property value. If this
     * returns undefined, the property will *not* be reflected to an attribute.
     * If this returns null, the attribute will be removed, otherwise the
     * attribute will be set to the value.
     * This uses the property's `reflect` and `type.toAttribute` property options.
     * @nocollapse
     */},{key:"_propertyValueToAttribute",value:function _propertyValueToAttribute(value,options){if(options.reflect===void 0){return}var type=options.type,converter=options.converter,toAttribute=converter&&converter.toAttribute||defaultConverter.toAttribute;return toAttribute(value,type)}},{key:"observedAttributes",get:function get(){var _this7=this;// note: piggy backing on this to ensure we're finalized.
this.finalize();var attributes=[];// Use forEach so this works even if for/of loops are compiled to for loops
// expecting arrays
this._classProperties.forEach(function(v,p){var attr=_this7._attributeNameForProperty(p,v);if(attr!==void 0){_this7._attributeToPropertyMap.set(attr,p);attributes.push(attr)}});return attributes}}]);return UpdatingElement}(babelHelpers.wrapNativeSuper(HTMLElement));_exports.UpdatingElement$1=_exports.UpdatingElement=_exports.ReactiveElement=UpdatingElement;_a=finalized;/**
                 * Marks class as having finished creating properties.
                 */UpdatingElement[_a]=!0;var updatingElement={defaultConverter:defaultConverter,notEqual:notEqual,UpdatingElement:UpdatingElement};/**
    * @license
    * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.
    * This code may only be used under the BSD style license found at
    * http://polymer.github.io/LICENSE.txt
    * The complete set of authors may be found at
    * http://polymer.github.io/AUTHORS.txt
    * The complete set of contributors may be found at
    * http://polymer.github.io/CONTRIBUTORS.txt
    * Code distributed by Google as part of the polymer project is also
    * subject to an additional IP rights grant found at
    * http://polymer.github.io/PATENTS.txt
    */ /**
        * True if the custom elements polyfill is in use.
        */_exports.$updatingElement=updatingElement;var isCEPolyfill="undefined"!==typeof window&&null!=window.customElements&&window.customElements.polyfillWrapFlushCallback!==void 0;/**
                                                                                                                                                              * Reparents nodes, starting from `start` (inclusive) to `end` (exclusive),
                                                                                                                                                              * into another container (could be the same container), before `before`. If
                                                                                                                                                              * `before` is null, it appends the nodes to the container.
                                                                                                                                                              */_exports.isCEPolyfill=isCEPolyfill;var reparentNodes=function reparentNodes(container,start){var end=2<arguments.length&&arguments[2]!==void 0?arguments[2]:null,before=3<arguments.length&&arguments[3]!==void 0?arguments[3]:null;while(start!==end){var n=start.nextSibling;container.insertBefore(start,before);start=n}};/**
    * Removes nodes, starting from `start` (inclusive) to `end` (exclusive), from
    * `container`.
    */_exports.reparentNodes$1=_exports.reparentNodes=reparentNodes;var removeNodes=function removeNodes(container,start){var end=2<arguments.length&&arguments[2]!==void 0?arguments[2]:null;while(start!==end){var n=start.nextSibling;container.removeChild(start);start=n}};_exports.removeNodes$1=_exports.removeNodes=removeNodes;var dom={isCEPolyfill:isCEPolyfill,reparentNodes:reparentNodes,removeNodes:removeNodes};/**
    * @license
    * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.
    * This code may only be used under the BSD style license found at
    * http://polymer.github.io/LICENSE.txt
    * The complete set of authors may be found at
    * http://polymer.github.io/AUTHORS.txt
    * The complete set of contributors may be found at
    * http://polymer.github.io/CONTRIBUTORS.txt
    * Code distributed by Google as part of the polymer project is also
    * subject to an additional IP rights grant found at
    * http://polymer.github.io/PATENTS.txt
    */ /**
        * An expression marker with embedded unique key to avoid collision with
        * possible text in templates.
        */_exports.$dom=dom;var marker="{{lit-".concat((Math.random()+"").slice(2),"}}");/**
                                                                    * An expression marker used text-positions, multi-binding attributes, and
                                                                    * attributes with markup-like text values.
                                                                    */_exports.marker=marker;var nodeMarker="<!--".concat(marker,"-->");_exports.nodeMarker=nodeMarker;var markerRegex=new RegExp("".concat(marker,"|").concat(nodeMarker));/**
                                                                   * Suffix appended to all bound attribute names.
                                                                   */_exports.markerRegex=markerRegex;var boundAttributeSuffix="$lit$";/**
                                              * An updatable Template that tracks the location of dynamic parts.
                                              */_exports.boundAttributeSuffix=boundAttributeSuffix;var Template=function Template(result,element){babelHelpers.classCallCheck(this,Template);this.parts=[];this.element=element;var nodesToRemove=[],stack=[],walker=document.createTreeWalker(element.content,133/* NodeFilter.SHOW_{ELEMENT|COMMENT|TEXT} */,null,!1),lastPartIndex=0,index=-1,partIndex=0,strings=result.strings,length=result.values.length;while(partIndex<length){var node=walker.nextNode();if(null===node){// We've exhausted the content inside a nested template element.
// Because we still have parts (the outer for-loop), we know:
// - There is a template in the stack
// - The walker will find a nextNode outside the template
walker.currentNode=stack.pop();continue}index++;if(1===node.nodeType/* Node.ELEMENT_NODE */){if(node.hasAttributes()){for(var attributes=node.attributes,_length=attributes.length,count=0,i=0;i<_length;i++){if(endsWith(attributes[i].name,boundAttributeSuffix)){count++}}while(0<count--){// Get the template literal section leading up to the first
// expression in this attribute
var stringForPart=strings[partIndex],name=lastAttributeNameRegex.exec(stringForPart)[2],attributeLookupName=name.toLowerCase()+boundAttributeSuffix,attributeValue=node.getAttribute(attributeLookupName);// Find the attribute name
node.removeAttribute(attributeLookupName);var statics=attributeValue.split(markerRegex);this.parts.push({type:"attribute",index:index,name:name,strings:statics});partIndex+=statics.length-1}}if("TEMPLATE"===node.tagName){stack.push(node);walker.currentNode=node.content}}else if(3===node.nodeType/* Node.TEXT_NODE */){var data=node.data;if(0<=data.indexOf(marker)){// Generate a new text node for each literal section
// These nodes are also used as the markers for node parts
for(var parent=node.parentNode,_strings=data.split(markerRegex),lastIndex=_strings.length-1,_i=0;_i<lastIndex;_i++){var insert=void 0,s=_strings[_i];if(""===s){insert=createMarker()}else{var match=lastAttributeNameRegex.exec(s);if(null!==match&&endsWith(match[2],boundAttributeSuffix)){s=s.slice(0,match.index)+match[1]+match[2].slice(0,-boundAttributeSuffix.length)+match[3]}insert=document.createTextNode(s)}parent.insertBefore(insert,node);this.parts.push({type:"node",index:++index})}// If there's no text, we must insert a comment to mark our place.
// Else, we can trust it will stick around after cloning.
if(""===_strings[lastIndex]){parent.insertBefore(createMarker(),node);nodesToRemove.push(node)}else{node.data=_strings[lastIndex]}// We have a part for each match found
partIndex+=lastIndex}}else if(8===node.nodeType/* Node.COMMENT_NODE */){if(node.data===marker){var _parent=node.parentNode;// Add a new marker node to be the startNode of the Part if any of
// the following are true:
//  * We don't have a previousSibling
//  * The previousSibling is already the start of a previous part
if(null===node.previousSibling||index===lastPartIndex){index++;_parent.insertBefore(createMarker(),node)}lastPartIndex=index;this.parts.push({type:"node",index:index});// If we don't have a nextSibling, keep this node so we have an end.
// Else, we can remove it to save future costs.
if(null===node.nextSibling){node.data=""}else{nodesToRemove.push(node);index--}partIndex++}else{var _i2=-1;while(-1!==(_i2=node.data.indexOf(marker,_i2+1))){// Comment node has a binding marker inside, make an inactive part
// The binding won't work, but subsequent bindings will
// TODO (justinfagnani): consider whether it's even worth it to
// make bindings in comments work
this.parts.push({type:"node",index:-1});partIndex++}}}}// Remove text binding nodes after the walk to not disturb the TreeWalker
for(var _i3=0,_nodesToRemove=nodesToRemove,n;_i3<_nodesToRemove.length;_i3++){n=_nodesToRemove[_i3];n.parentNode.removeChild(n)}};_exports.Template$1=_exports.Template=Template;var endsWith=function endsWith(str,suffix){var index=str.length-suffix.length;return 0<=index&&str.slice(index)===suffix},isTemplatePartActive=function isTemplatePartActive(part){return-1!==part.index};_exports.isTemplatePartActive$1=_exports.isTemplatePartActive=isTemplatePartActive;// Allows `document.createComment('')` to be renamed for a
// small manual size-savings.
var createMarker=function createMarker(){return document.createComment("")};/**
                                                               * This regex extracts the attribute name preceding an attribute-position
                                                               * expression. It does this by matching the syntax allowed for attributes
                                                               * against the string literal directly preceding the expression, assuming that
                                                               * the expression is in an attribute-value position.
                                                               *
                                                               * See attributes in the HTML spec:
                                                               * https://www.w3.org/TR/html5/syntax.html#elements-attributes
                                                               *
                                                               * " \x09\x0a\x0c\x0d" are HTML space characters:
                                                               * https://www.w3.org/TR/html5/infrastructure.html#space-characters
                                                               *
                                                               * "\0-\x1F\x7F-\x9F" are Unicode control characters, which includes every
                                                               * space character except " ".
                                                               *
                                                               * So an attribute is:
                                                               *  * The name: any character except a control character, space character, ('),
                                                               *    ("), ">", "=", or "/"
                                                               *  * Followed by zero or more space characters
                                                               *  * Followed by "="
                                                               *  * Followed by zero or more space characters
                                                               *  * Followed by:
                                                               *    * Any character except space, ('), ("), "<", ">", "=", (`), or
                                                               *    * (") then any non-("), or
                                                               *    * (') then any non-(')
                                                               */_exports.createMarker$1=_exports.createMarker=createMarker;var lastAttributeNameRegex=// eslint-disable-next-line no-control-regex
/([ \x09\x0a\x0c\x0d])([^\0-\x1F\x7F-\x9F "'>=/]+)([ \x09\x0a\x0c\x0d]*=[ \x09\x0a\x0c\x0d]*(?:[^ \x09\x0a\x0c\x0d"'`<>=]*|"[^"]*|'[^']*))$/;_exports.lastAttributeNameRegex=lastAttributeNameRegex;var template={marker:marker,nodeMarker:nodeMarker,markerRegex:markerRegex,boundAttributeSuffix:boundAttributeSuffix,Template:Template,isTemplatePartActive:isTemplatePartActive,createMarker:createMarker,lastAttributeNameRegex:lastAttributeNameRegex};_exports.$template=template;var walkerNodeFilter=133/* NodeFilter.SHOW_{ELEMENT|COMMENT|TEXT} */;/**
                                                                            * Removes the list of nodes from a Template safely. In addition to removing
                                                                            * nodes from the Template, the Template part indices are updated to match
                                                                            * the mutated Template DOM.
                                                                            *
                                                                            * As the template is walked the removal state is tracked and
                                                                            * part indices are adjusted as needed.
                                                                            *
                                                                            * div
                                                                            *   div#1 (remove) <-- start removing (removing node is div#1)
                                                                            *     div
                                                                            *       div#2 (remove)  <-- continue removing (removing node is still div#1)
                                                                            *         div
                                                                            * div <-- stop removing since previous sibling is the removing node (div#1,
                                                                            * removed 4 nodes)
                                                                            */function removeNodesFromTemplate(template,nodesToRemove){var content=template.element.content,parts=template.parts,walker=document.createTreeWalker(content,walkerNodeFilter,null,!1),partIndex=nextActiveIndexInTemplateParts(parts),part=parts[partIndex],nodeIndex=-1,removeCount=0,nodesToRemoveInTemplate=[],currentRemovingNode=null;while(walker.nextNode()){nodeIndex++;var node=walker.currentNode;// End removal if stepped past the removing node
if(node.previousSibling===currentRemovingNode){currentRemovingNode=null}// A node to remove was found in the template
if(nodesToRemove.has(node)){nodesToRemoveInTemplate.push(node);// Track node we're removing
if(null===currentRemovingNode){currentRemovingNode=node}}// When removing, increment count by which to adjust subsequent part indices
if(null!==currentRemovingNode){removeCount++}while(part!==void 0&&part.index===nodeIndex){// If part is in a removed node deactivate it by setting index to -1 or
// adjust the index as needed.
part.index=null!==currentRemovingNode?-1:part.index-removeCount;// go to the next active part.
partIndex=nextActiveIndexInTemplateParts(parts,partIndex);part=parts[partIndex]}}nodesToRemoveInTemplate.forEach(function(n){return n.parentNode.removeChild(n)})}var countNodes=function countNodes(node){var count=11===node.nodeType/* Node.DOCUMENT_FRAGMENT_NODE */?0:1,walker=document.createTreeWalker(node,walkerNodeFilter,null,!1);while(walker.nextNode()){count++}return count},nextActiveIndexInTemplateParts=function nextActiveIndexInTemplateParts(parts){for(var startIndex=1<arguments.length&&arguments[1]!==void 0?arguments[1]:-1,i=startIndex+1,_part;i<parts.length;i++){_part=parts[i];if(isTemplatePartActive(_part)){return i}}return-1};/**
    * Inserts the given node into the Template, optionally before the given
    * refNode. In addition to inserting the node into the Template, the Template
    * part indices are updated to match the mutated Template DOM.
    */function insertNodeIntoTemplate(template,node){var refNode=2<arguments.length&&arguments[2]!==void 0?arguments[2]:null,content=template.element.content,parts=template.parts;// If there's no refNode, then put node at end of template.
// No part indices need to be shifted in this case.
if(null===refNode||refNode===void 0){content.appendChild(node);return}var walker=document.createTreeWalker(content,walkerNodeFilter,null,!1),partIndex=nextActiveIndexInTemplateParts(parts),insertCount=0,walkerIndex=-1;while(walker.nextNode()){walkerIndex++;var walkerNode=walker.currentNode;if(walkerNode===refNode){insertCount=countNodes(node);refNode.parentNode.insertBefore(node,refNode)}while(-1!==partIndex&&parts[partIndex].index===walkerIndex){// If we've inserted the node, simply adjust all subsequent parts
if(0<insertCount){while(-1!==partIndex){parts[partIndex].index+=insertCount;partIndex=nextActiveIndexInTemplateParts(parts,partIndex)}return}partIndex=nextActiveIndexInTemplateParts(parts,partIndex)}}}var modifyTemplate={removeNodesFromTemplate:removeNodesFromTemplate,insertNodeIntoTemplate:insertNodeIntoTemplate};/**
    * @license
    * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.
    * This code may only be used under the BSD style license found at
    * http://polymer.github.io/LICENSE.txt
    * The complete set of authors may be found at
    * http://polymer.github.io/AUTHORS.txt
    * The complete set of contributors may be found at
    * http://polymer.github.io/CONTRIBUTORS.txt
    * Code distributed by Google as part of the polymer project is also
    * subject to an additional IP rights grant found at
    * http://polymer.github.io/PATENTS.txt
    */_exports.$modifyTemplate=modifyTemplate;var directives=new WeakMap,directive=function directive(f){return function(){var d=f.apply(void 0,arguments);directives.set(d,!0);return d}};/**
                                   * Brands a function as a directive factory function so that lit-html will call
                                   * the function during template rendering, rather than passing as a value.
                                   *
                                   * A _directive_ is a function that takes a Part as an argument. It has the
                                   * signature: `(part: Part) => void`.
                                   *
                                   * A directive _factory_ is a function that takes arguments for data and
                                   * configuration and returns a directive. Users of directive usually refer to
                                   * the directive factory as the directive. For example, "The repeat directive".
                                   *
                                   * Usually a template author will invoke a directive factory in their template
                                   * with relevant arguments, which will then return a directive function.
                                   *
                                   * Here's an example of using the `repeat()` directive factory that takes an
                                   * array and a function to render an item:
                                   *
                                   * ```js
                                   * html`<ul><${repeat(items, (item) => html`<li>${item}</li>`)}</ul>`
                                   * ```
                                   *
                                   * When `repeat` is invoked, it returns a directive function that closes over
                                   * `items` and the template function. When the outer template is rendered, the
                                   * return directive function is called with the Part for the expression.
                                   * `repeat` then performs it's custom logic to render multiple items.
                                   *
                                   * @param f The directive factory function. Must be a function that returns a
                                   * function of the signature `(part: Part) => void`. The returned function will
                                   * be called with the part object.
                                   *
                                   * @example
                                   *
                                   * import {directive, html} from 'lit-html';
                                   *
                                   * const immutable = directive((v) => (part) => {
                                   *   if (part.value !== v) {
                                   *     part.setValue(v)
                                   *   }
                                   * });
                                   */_exports.directive$1=_exports.directive=directive;var isDirective=function isDirective(o){return"function"===typeof o&&directives.has(o)};_exports.isDirective$1=_exports.isDirective=isDirective;var directive$1={directive:directive,isDirective:isDirective};/**
    * @license
    * Copyright (c) 2018 The Polymer Project Authors. All rights reserved.
    * This code may only be used under the BSD style license found at
    * http://polymer.github.io/LICENSE.txt
    * The complete set of authors may be found at
    * http://polymer.github.io/AUTHORS.txt
    * The complete set of contributors may be found at
    * http://polymer.github.io/CONTRIBUTORS.txt
    * Code distributed by Google as part of the polymer project is also
    * subject to an additional IP rights grant found at
    * http://polymer.github.io/PATENTS.txt
    */ /**
        * A sentinel value that signals that a value was handled by a directive and
        * should not be written to the DOM.
        */_exports.$directive=directive$1;var noChange={};/**
                             * A sentinel value that signals a NodePart to fully clear its content.
                             */_exports.noChange$1=_exports.noChange=noChange;var nothing={};_exports.nothing$1=_exports.nothing=nothing;var part={noChange:noChange,nothing:nothing};_exports.$part=part;var TemplateInstance=/*#__PURE__*/function(){function TemplateInstance(template,processor,options){babelHelpers.classCallCheck(this,TemplateInstance);this.__parts=[];this.template=template;this.processor=processor;this.options=options}babelHelpers.createClass(TemplateInstance,[{key:"update",value:function update(values){var i=0,_iteratorNormalCompletion2=!0,_didIteratorError2=!1,_iteratorError2=void 0;try{for(var _iterator2=this.__parts[Symbol.iterator](),_step2,_part2;!(_iteratorNormalCompletion2=(_step2=_iterator2.next()).done);_iteratorNormalCompletion2=!0){_part2=_step2.value;if(_part2!==void 0){_part2.setValue(values[i])}i++}}catch(err){_didIteratorError2=!0;_iteratorError2=err}finally{try{if(!_iteratorNormalCompletion2&&null!=_iterator2.return){_iterator2.return()}}finally{if(_didIteratorError2){throw _iteratorError2}}}var _iteratorNormalCompletion3=!0,_didIteratorError3=!1,_iteratorError3=void 0;try{for(var _iterator3=this.__parts[Symbol.iterator](),_step3,_part3;!(_iteratorNormalCompletion3=(_step3=_iterator3.next()).done);_iteratorNormalCompletion3=!0){_part3=_step3.value;if(_part3!==void 0){_part3.commit()}}}catch(err){_didIteratorError3=!0;_iteratorError3=err}finally{try{if(!_iteratorNormalCompletion3&&null!=_iterator3.return){_iterator3.return()}}finally{if(_didIteratorError3){throw _iteratorError3}}}}},{key:"_clone",value:function _clone(){// There are a number of steps in the lifecycle of a template instance's
// DOM fragment:
//  1. Clone - create the instance fragment
//  2. Adopt - adopt into the main document
//  3. Process - find part markers and create parts
//  4. Upgrade - upgrade custom elements
//  5. Update - set node, attribute, property, etc., values
//  6. Connect - connect to the document. Optional and outside of this
//     method.
//
// We have a few constraints on the ordering of these steps:
//  * We need to upgrade before updating, so that property values will pass
//    through any property setters.
//  * We would like to process before upgrading so that we're sure that the
//    cloned fragment is inert and not disturbed by self-modifying DOM.
//  * We want custom elements to upgrade even in disconnected fragments.
//
// Given these constraints, with full custom elements support we would
// prefer the order: Clone, Process, Adopt, Upgrade, Update, Connect
//
// But Safari does not implement CustomElementRegistry#upgrade, so we
// can not implement that order and still have upgrade-before-update and
// upgrade disconnected fragments. So we instead sacrifice the
// process-before-upgrade constraint, since in Custom Elements v1 elements
// must not modify their light DOM in the constructor. We still have issues
// when co-existing with CEv0 elements like Polymer 1, and with polyfills
// that don't strictly adhere to the no-modification rule because shadow
// DOM, which may be created in the constructor, is emulated by being placed
// in the light DOM.
//
// The resulting order is on native is: Clone, Adopt, Upgrade, Process,
// Update, Connect. document.importNode() performs Clone, Adopt, and Upgrade
// in one step.
//
// The Custom Elements v1 polyfill supports upgrade(), so the order when
// polyfilled is the more ideal: Clone, Process, Adopt, Upgrade, Update,
// Connect.
var fragment=isCEPolyfill?this.template.element.content.cloneNode(!0):document.importNode(this.template.element.content,!0),stack=[],parts=this.template.parts,walker=document.createTreeWalker(fragment,133/* NodeFilter.SHOW_{ELEMENT|COMMENT|TEXT} */,null,!1),partIndex=0,nodeIndex=0,part,node=walker.nextNode();// Loop through all the nodes and parts of a template
while(partIndex<parts.length){part=parts[partIndex];if(!isTemplatePartActive(part)){this.__parts.push(void 0);partIndex++;continue}// Progress the tree walker until we find our next part's node.
// Note that multiple parts may share the same node (attribute parts
// on a single element), so this loop may not run at all.
while(nodeIndex<part.index){nodeIndex++;if("TEMPLATE"===node.nodeName){stack.push(node);walker.currentNode=node.content}if(null===(node=walker.nextNode())){// We've exhausted the content inside a nested template element.
// Because we still have parts (the outer for-loop), we know:
// - There is a template in the stack
// - The walker will find a nextNode outside the template
walker.currentNode=stack.pop();node=walker.nextNode()}}// We've arrived at our part's node.
if("node"===part.type){var _part4=this.processor.handleTextExpression(this.options);_part4.insertAfterNode(node.previousSibling);this.__parts.push(_part4)}else{var _this$__parts;(_this$__parts=this.__parts).push.apply(_this$__parts,babelHelpers.toConsumableArray(this.processor.handleAttributeExpressions(node,part.name,part.strings,this.options)))}partIndex++}if(isCEPolyfill){document.adoptNode(fragment);customElements.upgrade(fragment)}return fragment}}]);return TemplateInstance}();_exports.TemplateInstance$1=_exports.TemplateInstance=TemplateInstance;var templateInstance={TemplateInstance:TemplateInstance};_exports.$templateInstance=templateInstance;var policy=window.trustedTypes&&trustedTypes.createPolicy("lit-html",{createHTML:function createHTML(s){return s}}),commentMarker=" ".concat(marker," "),TemplateResult=/*#__PURE__*/function(){function TemplateResult(strings,values,type,processor){babelHelpers.classCallCheck(this,TemplateResult);this.strings=strings;this.values=values;this.type=type;this.processor=processor}/**
     * Returns a string of HTML used to create a `<template>` element.
     */babelHelpers.createClass(TemplateResult,[{key:"getHTML",value:function getHTML(){for(var l=this.strings.length-1,html="",isCommentBinding=!1,i=0;i<l;i++){var s=this.strings[i],commentOpen=s.lastIndexOf("<!--");// For each binding we want to determine the kind of marker to insert
// into the template source before it's parsed by the browser's HTML
// parser. The marker type is based on whether the expression is in an
// attribute, text, or comment position.
//   * For node-position bindings we insert a comment with the marker
//     sentinel as its text content, like <!--{{lit-guid}}-->.
//   * For attribute bindings we insert just the marker sentinel for the
//     first binding, so that we support unquoted attribute bindings.
//     Subsequent bindings can use a comment marker because multi-binding
//     attributes must be quoted.
//   * For comment bindings we insert just the marker sentinel so we don't
//     close the comment.
//
// The following code scans the template source, but is *not* an HTML
// parser. We don't need to track the tree structure of the HTML, only
// whether a binding is inside a comment, and if not, if it appears to be
// the first binding in an attribute.
// We're in comment position if we have a comment open with no following
// comment close. Because <-- can appear in an attribute value there can
// be false positives.
isCommentBinding=(-1<commentOpen||isCommentBinding)&&-1===s.indexOf("-->",commentOpen+1);// Check to see if we have an attribute-like sequence preceding the
// expression. This can match "name=value" like structures in text,
// comments, and attribute values, so there can be false-positives.
var attributeMatch=lastAttributeNameRegex.exec(s);if(null===attributeMatch){// We're only in this branch if we don't have a attribute-like
// preceding sequence. For comments, this guards against unusual
// attribute values like <div foo="<!--${'bar'}">. Cases like
// <!-- foo=${'bar'}--> are handled correctly in the attribute branch
// below.
html+=s+(isCommentBinding?commentMarker:nodeMarker)}else{// For attributes we use just a marker sentinel, and also append a
// $lit$ suffix to the name to opt-out of attribute-specific parsing
// that IE and Edge do for style and certain SVG attributes.
html+=s.substr(0,attributeMatch.index)+attributeMatch[1]+attributeMatch[2]+boundAttributeSuffix+attributeMatch[3]+marker}}html+=this.strings[l];return html}},{key:"getTemplateElement",value:function getTemplateElement(){var template=document.createElement("template"),value=this.getHTML();if(policy!==void 0){// this is secure because `this.strings` is a TemplateStringsArray.
// TODO: validate this when
// https://github.com/tc39/proposal-array-is-template-object is
// implemented.
value=policy.createHTML(value)}template.innerHTML=value;return template}}]);return TemplateResult}();_exports.TemplateResult$3=_exports.TemplateResult$2=_exports.TemplateResult$1=_exports.TemplateResult=TemplateResult;/**
   * A TemplateResult for SVG fragments.
   *
   * This class wraps HTML in an `<svg>` tag in order to parse its contents in the
   * SVG namespace, then modifies the template to remove the `<svg>` tag so that
   * clones only container the original fragment.
   */var SVGTemplateResult=/*#__PURE__*/function(_TemplateResult){babelHelpers.inherits(SVGTemplateResult,_TemplateResult);function SVGTemplateResult(){babelHelpers.classCallCheck(this,SVGTemplateResult);return babelHelpers.possibleConstructorReturn(this,babelHelpers.getPrototypeOf(SVGTemplateResult).apply(this,arguments))}babelHelpers.createClass(SVGTemplateResult,[{key:"getHTML",value:function getHTML(){return"<svg>".concat(babelHelpers.get(babelHelpers.getPrototypeOf(SVGTemplateResult.prototype),"getHTML",this).call(this),"</svg>")}},{key:"getTemplateElement",value:function getTemplateElement(){var template=babelHelpers.get(babelHelpers.getPrototypeOf(SVGTemplateResult.prototype),"getTemplateElement",this).call(this),content=template.content,svgElement=content.firstChild;content.removeChild(svgElement);reparentNodes(content,svgElement.firstChild);return template}}]);return SVGTemplateResult}(TemplateResult);_exports.SVGTemplateResult$2=_exports.SVGTemplateResult$1=_exports.SVGTemplateResult=SVGTemplateResult;var templateResult={TemplateResult:TemplateResult,SVGTemplateResult:SVGTemplateResult};_exports.$templateResult=templateResult;var isPrimitive=function isPrimitive(value){return null===value||!("object"===babelHelpers.typeof(value)||"function"===typeof value)};_exports.isPrimitive$1=_exports.isPrimitive=isPrimitive;var isIterable=function isIterable(value){return Array.isArray(value)||// eslint-disable-next-line @typescript-eslint/no-explicit-any
!!(value&&value[Symbol.iterator])};/**
    * Writes attribute values to the DOM for a group of AttributeParts bound to a
    * single attribute. The value is only set once even if there are multiple parts
    * for an attribute.
    */_exports.isIterable$1=_exports.isIterable=isIterable;var AttributeCommitter=/*#__PURE__*/function(){function AttributeCommitter(element,name,strings){babelHelpers.classCallCheck(this,AttributeCommitter);this.dirty=!0;this.element=element;this.name=name;this.strings=strings;this.parts=[];for(var i=0;i<strings.length-1;i++){this.parts[i]=this._createPart()}}/**
     * Creates a single part. Override this to create a differnt type of part.
     */babelHelpers.createClass(AttributeCommitter,[{key:"_createPart",value:function _createPart(){return new AttributePart(this)}},{key:"_getValue",value:function _getValue(){var strings=this.strings,l=strings.length-1,parts=this.parts;// If we're assigning an attribute via syntax like:
//    attr="${foo}"  or  attr=${foo}
// but not
//    attr="${foo} ${bar}" or attr="${foo} baz"
// then we don't want to coerce the attribute value into one long
// string. Instead we want to just return the value itself directly,
// so that sanitizeDOMValue can get the actual value rather than
// String(value)
// The exception is if v is an array, in which case we do want to smash
// it together into a string without calling String() on the array.
//
// This also allows trusted values (when using TrustedTypes) being
// assigned to DOM sinks without being stringified in the process.
if(1===l&&""===strings[0]&&""===strings[1]){var v=parts[0].value;if("symbol"===babelHelpers.typeof(v)){return v+""}if("string"===typeof v||!isIterable(v)){return v}}for(var text="",i=0;i<l;i++){text+=strings[i];var _part5=parts[i];if(_part5!==void 0){var _v2=_part5.value;if(isPrimitive(_v2)||!isIterable(_v2)){text+="string"===typeof _v2?_v2:_v2+""}else{var _iteratorNormalCompletion4=!0,_didIteratorError4=!1,_iteratorError4=void 0;try{for(var _iterator4=_v2[Symbol.iterator](),_step4,t;!(_iteratorNormalCompletion4=(_step4=_iterator4.next()).done);_iteratorNormalCompletion4=!0){t=_step4.value;text+="string"===typeof t?t:t+""}}catch(err){_didIteratorError4=!0;_iteratorError4=err}finally{try{if(!_iteratorNormalCompletion4&&null!=_iterator4.return){_iterator4.return()}}finally{if(_didIteratorError4){throw _iteratorError4}}}}}}text+=strings[l];return text}},{key:"commit",value:function commit(){if(this.dirty){this.dirty=!1;this.element.setAttribute(this.name,this._getValue())}}}]);return AttributeCommitter}();/**
   * A Part that controls all or part of an attribute value.
   */_exports.AttributeCommitter$1=_exports.AttributeCommitter=AttributeCommitter;var AttributePart=/*#__PURE__*/function(){function AttributePart(committer){babelHelpers.classCallCheck(this,AttributePart);this.value=void 0;this.committer=committer}babelHelpers.createClass(AttributePart,[{key:"setValue",value:function setValue(value){if(value!==noChange&&(!isPrimitive(value)||value!==this.value)){this.value=value;// If the value is a not a directive, dirty the committer so that it'll
// call setAttribute. If the value is a directive, it'll dirty the
// committer if it calls setValue().
if(!isDirective(value)){this.committer.dirty=!0}}}},{key:"commit",value:function commit(){while(isDirective(this.value)){var _directive=this.value;this.value=noChange;_directive(this)}if(this.value===noChange){return}this.committer.commit()}}]);return AttributePart}();/**
   * A Part that controls a location within a Node tree. Like a Range, NodePart
   * has start and end locations and can set and update the Nodes between those
   * locations.
   *
   * NodeParts support several value types: primitives, Nodes, TemplateResults,
   * as well as arrays and iterables of those types.
   */_exports.AttributePart$1=_exports.AttributePart=AttributePart;var NodePart=/*#__PURE__*/function(){function NodePart(options){babelHelpers.classCallCheck(this,NodePart);this.value=void 0;this.__pendingValue=void 0;this.options=options}/**
     * Appends this part into a container.
     *
     * This part must be empty, as its contents are not automatically moved.
     */babelHelpers.createClass(NodePart,[{key:"appendInto",value:function appendInto(container){this.startNode=container.appendChild(createMarker());this.endNode=container.appendChild(createMarker())}/**
     * Inserts this part after the `ref` node (between `ref` and `ref`'s next
     * sibling). Both `ref` and its next sibling must be static, unchanging nodes
     * such as those that appear in a literal section of a template.
     *
     * This part must be empty, as its contents are not automatically moved.
     */},{key:"insertAfterNode",value:function insertAfterNode(ref){this.startNode=ref;this.endNode=ref.nextSibling}/**
     * Appends this part into a parent part.
     *
     * This part must be empty, as its contents are not automatically moved.
     */},{key:"appendIntoPart",value:function appendIntoPart(part){part.__insert(this.startNode=createMarker());part.__insert(this.endNode=createMarker())}/**
     * Inserts this part after the `ref` part.
     *
     * This part must be empty, as its contents are not automatically moved.
     */},{key:"insertAfterPart",value:function insertAfterPart(ref){ref.__insert(this.startNode=createMarker());this.endNode=ref.endNode;ref.endNode=this.startNode}},{key:"setValue",value:function setValue(value){this.__pendingValue=value}},{key:"commit",value:function commit(){if(null===this.startNode.parentNode){return}while(isDirective(this.__pendingValue)){var _directive2=this.__pendingValue;this.__pendingValue=noChange;_directive2(this)}var value=this.__pendingValue;if(value===noChange){return}if(isPrimitive(value)){if(value!==this.value){this.__commitText(value)}}else if(babelHelpers.instanceof(value,TemplateResult)){this.__commitTemplateResult(value)}else if(babelHelpers.instanceof(value,Node)){this.__commitNode(value)}else if(isIterable(value)){this.__commitIterable(value)}else if(value===nothing){this.value=nothing;this.clear()}else{// Fallback, will render the string representation
this.__commitText(value)}}},{key:"__insert",value:function __insert(node){this.endNode.parentNode.insertBefore(node,this.endNode)}},{key:"__commitNode",value:function __commitNode(value){if(this.value===value){return}this.clear();this.__insert(value);this.value=value}},{key:"__commitText",value:function __commitText(value){var node=this.startNode.nextSibling;value=null==value?"":value;// If `value` isn't already a string, we explicitly convert it here in case
// it can't be implicitly converted - i.e. it's a symbol.
var valueAsString="string"===typeof value?value:value+"";if(node===this.endNode.previousSibling&&3===node.nodeType/* Node.TEXT_NODE */){// If we only have a single text node between the markers, we can just
// set its value, rather than replacing it.
// TODO(justinfagnani): Can we just check if this.value is primitive?
node.data=valueAsString}else{this.__commitNode(document.createTextNode(valueAsString))}this.value=value}},{key:"__commitTemplateResult",value:function __commitTemplateResult(value){var template=this.options.templateFactory(value);if(babelHelpers.instanceof(this.value,TemplateInstance)&&this.value.template===template){this.value.update(value.values)}else{// Make sure we propagate the template processor from the TemplateResult
// so that we use its syntax extension, etc. The template factory comes
// from the render function options so that it can control template
// caching and preprocessing.
var instance=new TemplateInstance(template,value.processor,this.options),fragment=instance._clone();instance.update(value.values);this.__commitNode(fragment);this.value=instance}}},{key:"__commitIterable",value:function __commitIterable(value){// For an Iterable, we create a new InstancePart per item, then set its
// value to the item. This is a little bit of overhead for every item in
// an Iterable, but it lets us recurse easily and efficiently update Arrays
// of TemplateResults that will be commonly returned from expressions like:
// array.map((i) => html`${i}`), by reusing existing TemplateInstances.
// If _value is an array, then the previous render was of an
// iterable and _value will contain the NodeParts from the previous
// render. If _value is not an array, clear this part and make a new
// array for NodeParts.
if(!Array.isArray(this.value)){this.value=[];this.clear()}// Lets us keep track of how many items we stamped so we can clear leftover
// items from a previous render
var itemParts=this.value,partIndex=0,itemPart,_iteratorNormalCompletion5=!0,_didIteratorError5=!1,_iteratorError5=void 0;try{for(var _iterator5=value[Symbol.iterator](),_step5,item;!(_iteratorNormalCompletion5=(_step5=_iterator5.next()).done);_iteratorNormalCompletion5=!0){item=_step5.value;// Try to reuse an existing part
itemPart=itemParts[partIndex];// If no existing part, create a new one
if(itemPart===void 0){itemPart=new NodePart(this.options);itemParts.push(itemPart);if(0===partIndex){itemPart.appendIntoPart(this)}else{itemPart.insertAfterPart(itemParts[partIndex-1])}}itemPart.setValue(item);itemPart.commit();partIndex++}}catch(err){_didIteratorError5=!0;_iteratorError5=err}finally{try{if(!_iteratorNormalCompletion5&&null!=_iterator5.return){_iterator5.return()}}finally{if(_didIteratorError5){throw _iteratorError5}}}if(partIndex<itemParts.length){// Truncate the parts array so _value reflects the current state
itemParts.length=partIndex;this.clear(itemPart&&itemPart.endNode)}}},{key:"clear",value:function clear(){var startNode=0<arguments.length&&arguments[0]!==void 0?arguments[0]:this.startNode;removeNodes(this.startNode.parentNode,startNode.nextSibling,this.endNode)}}]);return NodePart}();/**
   * Implements a boolean attribute, roughly as defined in the HTML
   * specification.
   *
   * If the value is truthy, then the attribute is present with a value of
   * ''. If the value is falsey, the attribute is removed.
   */_exports.NodePart$1=_exports.NodePart=NodePart;var BooleanAttributePart=/*#__PURE__*/function(){function BooleanAttributePart(element,name,strings){babelHelpers.classCallCheck(this,BooleanAttributePart);this.value=void 0;this.__pendingValue=void 0;if(2!==strings.length||""!==strings[0]||""!==strings[1]){throw new Error("Boolean attributes can only contain a single expression")}this.element=element;this.name=name;this.strings=strings}babelHelpers.createClass(BooleanAttributePart,[{key:"setValue",value:function setValue(value){this.__pendingValue=value}},{key:"commit",value:function commit(){while(isDirective(this.__pendingValue)){var _directive3=this.__pendingValue;this.__pendingValue=noChange;_directive3(this)}if(this.__pendingValue===noChange){return}var value=!!this.__pendingValue;if(this.value!==value){if(value){this.element.setAttribute(this.name,"")}else{this.element.removeAttribute(this.name)}this.value=value}this.__pendingValue=noChange}}]);return BooleanAttributePart}();/**
   * Sets attribute values for PropertyParts, so that the value is only set once
   * even if there are multiple parts for a property.
   *
   * If an expression controls the whole property value, then the value is simply
   * assigned to the property under control. If there are string literals or
   * multiple expressions, then the strings are expressions are interpolated into
   * a string first.
   */_exports.BooleanAttributePart$1=_exports.BooleanAttributePart=BooleanAttributePart;var PropertyCommitter=/*#__PURE__*/function(_AttributeCommitter){babelHelpers.inherits(PropertyCommitter,_AttributeCommitter);function PropertyCommitter(element,name,strings){var _this8;babelHelpers.classCallCheck(this,PropertyCommitter);_this8=babelHelpers.possibleConstructorReturn(this,babelHelpers.getPrototypeOf(PropertyCommitter).call(this,element,name,strings));_this8.single=2===strings.length&&""===strings[0]&&""===strings[1];return _this8}babelHelpers.createClass(PropertyCommitter,[{key:"_createPart",value:function _createPart(){return new PropertyPart(this)}},{key:"_getValue",value:function _getValue(){if(this.single){return this.parts[0].value}return babelHelpers.get(babelHelpers.getPrototypeOf(PropertyCommitter.prototype),"_getValue",this).call(this)}},{key:"commit",value:function commit(){if(this.dirty){this.dirty=!1;// eslint-disable-next-line @typescript-eslint/no-explicit-any
this.element[this.name]=this._getValue()}}}]);return PropertyCommitter}(AttributeCommitter);_exports.PropertyCommitter$1=_exports.PropertyCommitter=PropertyCommitter;var PropertyPart=/*#__PURE__*/function(_AttributePart){babelHelpers.inherits(PropertyPart,_AttributePart);function PropertyPart(){babelHelpers.classCallCheck(this,PropertyPart);return babelHelpers.possibleConstructorReturn(this,babelHelpers.getPrototypeOf(PropertyPart).apply(this,arguments))}return PropertyPart}(AttributePart);// Detect event listener options support. If the `capture` property is read
// from the options object, then options are supported. If not, then the third
// argument to add/removeEventListener is interpreted as the boolean capture
// value so we should only pass the `capture` property.
_exports.PropertyPart$1=_exports.PropertyPart=PropertyPart;var eventOptionsSupported=!1;// Wrap into an IIFE because MS Edge <= v41 does not support having try/catch
// blocks right into the body of a module
(function(){try{var options={get capture(){eventOptionsSupported=!0;return!1}};// eslint-disable-next-line @typescript-eslint/no-explicit-any
window.addEventListener("test",options,options);// eslint-disable-next-line @typescript-eslint/no-explicit-any
window.removeEventListener("test",options,options)}catch(_e){// event options not supported
}})();var EventPart=/*#__PURE__*/function(){function EventPart(element,eventName,eventContext){var _this9=this;babelHelpers.classCallCheck(this,EventPart);this.value=void 0;this.__pendingValue=void 0;this.element=element;this.eventName=eventName;this.eventContext=eventContext;this.__boundHandleEvent=function(e){return _this9.handleEvent(e)}}babelHelpers.createClass(EventPart,[{key:"setValue",value:function setValue(value){this.__pendingValue=value}},{key:"commit",value:function commit(){while(isDirective(this.__pendingValue)){var _directive4=this.__pendingValue;this.__pendingValue=noChange;_directive4(this)}if(this.__pendingValue===noChange){return}var newListener=this.__pendingValue,oldListener=this.value,shouldRemoveListener=null==newListener||null!=oldListener&&(newListener.capture!==oldListener.capture||newListener.once!==oldListener.once||newListener.passive!==oldListener.passive),shouldAddListener=null!=newListener&&(null==oldListener||shouldRemoveListener);if(shouldRemoveListener){this.element.removeEventListener(this.eventName,this.__boundHandleEvent,this.__options)}if(shouldAddListener){this.__options=getOptions(newListener);this.element.addEventListener(this.eventName,this.__boundHandleEvent,this.__options)}this.value=newListener;this.__pendingValue=noChange}},{key:"handleEvent",value:function handleEvent(event){if("function"===typeof this.value){this.value.call(this.eventContext||this.element,event)}else{this.value.handleEvent(event)}}}]);return EventPart}();// We copy options because of the inconsistent behavior of browsers when reading
// the third argument of add/removeEventListener. IE11 doesn't support options
// at all. Chrome 41 only reads `capture` if the argument is an object.
_exports.EventPart$1=_exports.EventPart=EventPart;var getOptions=function getOptions(o){return o&&(eventOptionsSupported?{capture:o.capture,passive:o.passive,once:o.once}:o.capture)},parts={isPrimitive:isPrimitive,isIterable:isIterable,AttributeCommitter:AttributeCommitter,AttributePart:AttributePart,NodePart:NodePart,BooleanAttributePart:BooleanAttributePart,PropertyCommitter:PropertyCommitter,PropertyPart:PropertyPart,EventPart:EventPart};_exports.$parts=parts;function templateFactory(result){var templateCache=templateCaches.get(result.type);if(templateCache===void 0){templateCache={stringsArray:new WeakMap,keyString:new Map};templateCaches.set(result.type,templateCache)}var template=templateCache.stringsArray.get(result.strings);if(template!==void 0){return template}// If the TemplateStringsArray is new, generate a key from the strings
// This key is shared between all templates with identical content
var key=result.strings.join(marker);// Check if we already have a Template for this key
template=templateCache.keyString.get(key);if(template===void 0){// If we have not seen this key before, create a new Template
template=new Template(result,result.getTemplateElement());// Cache the Template for this key
templateCache.keyString.set(key,template)}// Cache all future queries for this TemplateStringsArray
templateCache.stringsArray.set(result.strings,template);return template}var templateCaches=new Map;_exports.templateCaches$1=_exports.templateCaches=templateCaches;var templateFactory$1={templateFactory:templateFactory,templateCaches:templateCaches};_exports.$templateFactory=templateFactory$1;var parts$1=new WeakMap;/**
                                     * Renders a template result or other value to a container.
                                     *
                                     * To update a container with new values, reevaluate the template literal and
                                     * call `render` with the new result.
                                     *
                                     * @param result Any value renderable by NodePart - typically a TemplateResult
                                     *     created by evaluating a template tag like `html` or `svg`.
                                     * @param container A DOM parent to render to. The entire contents are either
                                     *     replaced, or efficiently updated if the same result type was previous
                                     *     rendered there.
                                     * @param options RenderOptions for the entire render tree rendered to this
                                     *     container. Render options must *not* change between renders to the same
                                     *     container, as those changes will not effect previously rendered DOM.
                                     */_exports.parts$1=_exports.parts=parts$1;var render=function render(result,container,options){var part=parts$1.get(container);if(part===void 0){removeNodes(container,container.firstChild);parts$1.set(container,part=new NodePart(Object.assign({templateFactory:templateFactory},options)));part.appendInto(container)}part.setValue(result);part.commit()};_exports.render$2=_exports.render=render;var render$1={parts:parts$1,render:render};_exports.$render=render$1;var DefaultTemplateProcessor=/*#__PURE__*/function(){function DefaultTemplateProcessor(){babelHelpers.classCallCheck(this,DefaultTemplateProcessor)}babelHelpers.createClass(DefaultTemplateProcessor,[{key:"handleAttributeExpressions",/**
   * Create parts for an attribute-position binding, given the event, attribute
   * name, and string literals.
   *
   * @param element The element containing the binding
   * @param name  The attribute name
   * @param strings The string literals. There are always at least two strings,
   *   event for fully-controlled bindings with a single expression.
   */value:function handleAttributeExpressions(element,name,strings,options){var prefix=name[0];if("."===prefix){var _committer=new PropertyCommitter(element,name.slice(1),strings);return _committer.parts}if("@"===prefix){return[new EventPart(element,name.slice(1),options.eventContext)]}if("?"===prefix){return[new BooleanAttributePart(element,name.slice(1),strings)]}var committer=new AttributeCommitter(element,name,strings);return committer.parts}/**
     * Create parts for a text-position binding.
     * @param templateFactory
     */},{key:"handleTextExpression",value:function handleTextExpression(options){return new NodePart(options)}}]);return DefaultTemplateProcessor}();_exports.DefaultTemplateProcessor$1=_exports.DefaultTemplateProcessor=DefaultTemplateProcessor;var defaultTemplateProcessor=new DefaultTemplateProcessor;_exports.defaultTemplateProcessor$1=_exports.defaultTemplateProcessor=defaultTemplateProcessor;var defaultTemplateProcessor$1={DefaultTemplateProcessor:DefaultTemplateProcessor,defaultTemplateProcessor:defaultTemplateProcessor};// This line will be used in regexes to search for lit-html usage.
// TODO(justinfagnani): inject version number at build time
_exports.$defaultTemplateProcessor=defaultTemplateProcessor$1;if("undefined"!==typeof window){(window.litHtmlVersions||(window.litHtmlVersions=[])).push("1.4.1")}/**
   * Interprets a template literal as an HTML template that can efficiently
   * render to and update a container.
   */var html=function html(strings){for(var _len2=arguments.length,values=Array(1<_len2?_len2-1:0),_key2=1;_key2<_len2;_key2++){values[_key2-1]=arguments[_key2]}return new TemplateResult(strings,values,"html",defaultTemplateProcessor)};/**
                                                                                                                    * Interprets a template literal as an SVG template that can efficiently
                                                                                                                    * render to and update a container.
                                                                                                                    */_exports.html$2=_exports.html$1=_exports.html=html;var svg=function svg(strings){for(var _len3=arguments.length,values=Array(1<_len3?_len3-1:0),_key3=1;_key3<_len3;_key3++){values[_key3-1]=arguments[_key3]}return new SVGTemplateResult(strings,values,"svg",defaultTemplateProcessor)};_exports.svg$2=_exports.svg$1=_exports.svg=svg;var litHtml={html:html,svg:svg,DefaultTemplateProcessor:DefaultTemplateProcessor,defaultTemplateProcessor:defaultTemplateProcessor,directive:directive,isDirective:isDirective,removeNodes:removeNodes,reparentNodes:reparentNodes,noChange:noChange,nothing:nothing,AttributeCommitter:AttributeCommitter,AttributePart:AttributePart,BooleanAttributePart:BooleanAttributePart,EventPart:EventPart,isIterable:isIterable,isPrimitive:isPrimitive,NodePart:NodePart,PropertyCommitter:PropertyCommitter,PropertyPart:PropertyPart,parts:parts$1,render:render,templateCaches:templateCaches,templateFactory:templateFactory,TemplateInstance:TemplateInstance,SVGTemplateResult:SVGTemplateResult,TemplateResult:TemplateResult,createMarker:createMarker,isTemplatePartActive:isTemplatePartActive,Template:Template};_exports.$litHtml=litHtml;var getTemplateCacheKey=function getTemplateCacheKey(type,scopeName){return"".concat(type,"--").concat(scopeName)},compatibleShadyCSSVersion=!0;if("undefined"===typeof window.ShadyCSS){compatibleShadyCSSVersion=!1}else if("undefined"===typeof window.ShadyCSS.prepareTemplateDom){console.warn("Incompatible ShadyCSS version detected. "+"Please update to at least @webcomponents/webcomponentsjs@2.0.2 and "+"@webcomponents/shadycss@1.3.1.");compatibleShadyCSSVersion=!1}/**
   * Template factory which scopes template DOM using ShadyCSS.
   * @param scopeName {string}
   */var shadyTemplateFactory=function shadyTemplateFactory(scopeName){return function(result){var cacheKey=getTemplateCacheKey(result.type,scopeName),templateCache=templateCaches.get(cacheKey);if(templateCache===void 0){templateCache={stringsArray:new WeakMap,keyString:new Map};templateCaches.set(cacheKey,templateCache)}var template=templateCache.stringsArray.get(result.strings);if(template!==void 0){return template}var key=result.strings.join(marker);template=templateCache.keyString.get(key);if(template===void 0){var element=result.getTemplateElement();if(compatibleShadyCSSVersion){window.ShadyCSS.prepareTemplateDom(element,scopeName)}template=new Template(result,element);templateCache.keyString.set(key,template)}templateCache.stringsArray.set(result.strings,template);return template}};_exports.shadyTemplateFactory=shadyTemplateFactory;var TEMPLATE_TYPES=["html","svg"],removeStylesFromLitTemplates=function removeStylesFromLitTemplates(scopeName){TEMPLATE_TYPES.forEach(function(type){var templates=templateCaches.get(getTemplateCacheKey(type,scopeName));if(templates!==void 0){templates.keyString.forEach(function(template){var content=template.element.content,styles=new Set;// IE 11 doesn't support the iterable param Set constructor
Array.from(content.querySelectorAll("style")).forEach(function(s){styles.add(s)});removeNodesFromTemplate(template,styles)})}})},shadyRenderSet=new Set,prepareTemplateStyles=function prepareTemplateStyles(scopeName,renderedDOM,template){shadyRenderSet.add(scopeName);// If `renderedDOM` is stamped from a Template, then we need to edit that
// Template's underlying template element. Otherwise, we create one here
// to give to ShadyCSS, which still requires one while scoping.
var templateElement=!!template?template.element:document.createElement("template"),styles=renderedDOM.querySelectorAll("style"),length=styles.length;// Move styles out of rendered DOM and store.
// If there are no styles, skip unnecessary work
if(0===length){// Ensure prepareTemplateStyles is called to support adding
// styles via `prepareAdoptedCssText` since that requires that
// `prepareTemplateStyles` is called.
//
// ShadyCSS will only update styles containing @apply in the template
// given to `prepareTemplateStyles`. If no lit Template was given,
// ShadyCSS will not be able to update uses of @apply in any relevant
// template. However, this is not a problem because we only create the
// template for the purpose of supporting `prepareAdoptedCssText`,
// which doesn't support @apply at all.
window.ShadyCSS.prepareTemplateStyles(templateElement,scopeName);return}// Collect styles into a single style. This helps us make sure ShadyCSS
// manipulations will not prevent us from being able to fix up template
// part indices.
// NOTE: collecting styles is inefficient for browsers but ShadyCSS
// currently does this anyway. When it does not, this should be changed.
for(var condensedStyle=document.createElement("style"),i=0,_style;i<length;i++){_style=styles[i];_style.parentNode.removeChild(_style);condensedStyle.textContent+=_style.textContent}// Remove styles from nested templates in this scope.
removeStylesFromLitTemplates(scopeName);// And then put the condensed style into the "root" template passed in as
// `template`.
var content=templateElement.content;if(!!template){insertNodeIntoTemplate(template,condensedStyle,content.firstChild)}else{content.insertBefore(condensedStyle,content.firstChild)}// Note, it's important that ShadyCSS gets the template that `lit-html`
// will actually render so that it can update the style inside when
// needed (e.g. @apply native Shadow DOM case).
window.ShadyCSS.prepareTemplateStyles(templateElement,scopeName);var style=content.querySelector("style");if(window.ShadyCSS.nativeShadow&&null!==style){// When in native Shadow DOM, ensure the style created by ShadyCSS is
// included in initially rendered output (`renderedDOM`).
renderedDOM.insertBefore(style.cloneNode(!0),renderedDOM.firstChild)}else if(!!template){// When no style is left in the template, parts will be broken as a
// result. To fix this, we put back the style node ShadyCSS removed
// and then tell lit to remove that node from the template.
// There can be no style in the template in 2 cases (1) when Shady DOM
// is in use, ShadyCSS removes all styles, (2) when native Shadow DOM
// is in use ShadyCSS removes the style if it contains no content.
// NOTE, ShadyCSS creates its own style so we can safely add/remove
// `condensedStyle` here.
content.insertBefore(condensedStyle,content.firstChild);var removes=new Set([condensedStyle]);removeNodesFromTemplate(template,removes)}},render$2=function render$2(result,container,options){if(!options||"object"!==babelHelpers.typeof(options)||!options.scopeName){throw new Error("The `scopeName` option is required.")}var scopeName=options.scopeName,hasRendered=parts$1.has(container),needsScoping=compatibleShadyCSSVersion&&11===container.nodeType/* Node.DOCUMENT_FRAGMENT_NODE */&&!!container.host,firstScopeRender=needsScoping&&!shadyRenderSet.has(scopeName),renderContainer=firstScopeRender?document.createDocumentFragment():container;render(result,renderContainer,Object.assign({templateFactory:shadyTemplateFactory(scopeName)},options));// When performing first scope render,
// (1) We've rendered into a fragment so that there's a chance to
// `prepareTemplateStyles` before sub-elements hit the DOM
// (which might cause them to render based on a common pattern of
// rendering in a custom element's `connectedCallback`);
// (2) Scope the template with ShadyCSS one time only for this scope.
// (3) Render the fragment into the container and make sure the
// container knows its `part` is the one we just rendered. This ensures
// DOM will be re-used on subsequent renders.
if(firstScopeRender){var _part6=parts$1.get(renderContainer);parts$1.delete(renderContainer);// ShadyCSS might have style sheets (e.g. from `prepareAdoptedCssText`)
// that should apply to `renderContainer` even if the rendered value is
// not a TemplateInstance. However, it will only insert scoped styles
// into the document if `prepareTemplateStyles` has already been called
// for the given scope name.
var _template=babelHelpers.instanceof(_part6.value,TemplateInstance)?_part6.value.template:void 0;prepareTemplateStyles(scopeName,renderContainer,_template);removeNodes(container,container.firstChild);container.appendChild(renderContainer);parts$1.set(container,_part6)}// After elements have hit the DOM, update styling if this is the
// initial render to this container.
// This is needed whenever dynamic changes are made so it would be
// safest to do every render; however, this would regress performance
// so we leave it up to the user to call `ShadyCSS.styleElement`
// for dynamic changes.
if(!hasRendered&&needsScoping){window.ShadyCSS.styleElement(container.host)}};/**
                                         * Removes all style elements from Templates for the given scopeName.
                                         */_exports.render$1=render$2;var shadyRender={shadyTemplateFactory:shadyTemplateFactory,render:render$2,html:html,svg:svg,TemplateResult:TemplateResult};// IMPORTANT: do not change the property name or the assignment expression.
// This line will be used in regexes to search for LitElement usage.
// TODO(justinfagnani): inject version number at build time
_exports.$shadyRender=shadyRender;(window.litElementVersions||(window.litElementVersions=[])).push("2.5.1");/**
                                                                                      * Sentinal value used to avoid calling lit-html's render function when
                                                                                      * subclasses do not implement `render`
                                                                                      */var renderNotImplemented={},LitElement=/*#__PURE__*/function(_UpdatingElement){babelHelpers.inherits(LitElement,_UpdatingElement);function LitElement(){babelHelpers.classCallCheck(this,LitElement);return babelHelpers.possibleConstructorReturn(this,babelHelpers.getPrototypeOf(LitElement).apply(this,arguments))}babelHelpers.createClass(LitElement,[{key:"initialize",/**
     * Performs element initialization. By default this calls
     * [[`createRenderRoot`]] to create the element [[`renderRoot`]] node and
     * captures any pre-set values for registered properties.
     */value:function initialize(){babelHelpers.get(babelHelpers.getPrototypeOf(LitElement.prototype),"initialize",this).call(this);this.constructor._getUniqueStyles();this.renderRoot=this.createRenderRoot();// Note, if renderRoot is not a shadowRoot, styles would/could apply to the
// element's getRootNode(). While this could be done, we're choosing not to
// support this now since it would require different logic around de-duping.
if(window.ShadowRoot&&babelHelpers.instanceof(this.renderRoot,window.ShadowRoot)){this.adoptStyles()}}/**
     * Returns the node into which the element should render and by default
     * creates and returns an open shadowRoot. Implement to customize where the
     * element's DOM is rendered. For example, to render into the element's
     * childNodes, return `this`.
     * @returns {Element|DocumentFragment} Returns a node into which to render.
     */},{key:"createRenderRoot",value:function createRenderRoot(){return this.attachShadow(this.constructor.shadowRootOptions)}/**
     * Applies styling to the element shadowRoot using the [[`styles`]]
     * property. Styling will apply using `shadowRoot.adoptedStyleSheets` where
     * available and will fallback otherwise. When Shadow DOM is polyfilled,
     * ShadyCSS scopes styles and adds them to the document. When Shadow DOM
     * is available but `adoptedStyleSheets` is not, styles are appended to the
     * end of the `shadowRoot` to [mimic spec
     * behavior](https://wicg.github.io/construct-stylesheets/#using-constructed-stylesheets).
     */},{key:"adoptStyles",value:function adoptStyles(){var styles=this.constructor._styles;if(0===styles.length){return}// There are three separate cases here based on Shadow DOM support.
// (1) shadowRoot polyfilled: use ShadyCSS
// (2) shadowRoot.adoptedStyleSheets available: use it
// (3) shadowRoot.adoptedStyleSheets polyfilled: append styles after
// rendering
if(window.ShadyCSS!==void 0&&!window.ShadyCSS.nativeShadow){window.ShadyCSS.ScopingShim.prepareAdoptedCssText(styles.map(function(s){return s.cssText}),this.localName)}else if(supportsAdoptingStyleSheets){this.renderRoot.adoptedStyleSheets=styles.map(function(s){return babelHelpers.instanceof(s,CSSStyleSheet)?s:s.styleSheet})}else{// This must be done after rendering so the actual style insertion is done
// in `update`.
this._needsShimAdoptedStyleSheets=!0}}},{key:"connectedCallback",value:function connectedCallback(){babelHelpers.get(babelHelpers.getPrototypeOf(LitElement.prototype),"connectedCallback",this).call(this);// Note, first update/render handles styleElement so we only call this if
// connected after first update.
if(this.hasUpdated&&window.ShadyCSS!==void 0){window.ShadyCSS.styleElement(this)}}/**
     * Updates the element. This method reflects property values to attributes
     * and calls `render` to render DOM via lit-html. Setting properties inside
     * this method will *not* trigger another update.
     * @param _changedProperties Map of changed properties with old values
     */},{key:"update",value:function update(changedProperties){var _this10=this,templateResult=this.render();babelHelpers.get(babelHelpers.getPrototypeOf(LitElement.prototype),"update",this).call(this,changedProperties);// If render is not implemented by the component, don't call lit-html render
if(templateResult!==renderNotImplemented){this.constructor.render(templateResult,this.renderRoot,{scopeName:this.localName,eventContext:this})}// When native Shadow DOM is used but adoptedStyles are not supported,
// insert styling after rendering to ensure adoptedStyles have highest
// priority.
if(this._needsShimAdoptedStyleSheets){this._needsShimAdoptedStyleSheets=!1;this.constructor._styles.forEach(function(s){var style=document.createElement("style");style.textContent=s.cssText;_this10.renderRoot.appendChild(style)})}}/**
     * Invoked on each update to perform rendering tasks. This method may return
     * any value renderable by lit-html's `NodePart` - typically a
     * `TemplateResult`. Setting properties inside this method will *not* trigger
     * the element to update.
     */},{key:"render",value:function render(){return renderNotImplemented}}],[{key:"getStyles",/**
   * Return the array of styles to apply to the element.
   * Override this method to integrate into a style management system.
   *
   * @nocollapse
   */value:function getStyles(){return this.styles}/** @nocollapse */},{key:"_getUniqueStyles",value:function _getUniqueStyles(){// Only gather styles once per class
if(this.hasOwnProperty(JSCompiler_renameProperty("_styles",this))){return}// Take care not to call `this.getStyles()` multiple times since this
// generates new CSSResults each time.
// TODO(sorvell): Since we do not cache CSSResults by input, any
// shared styles will generate new stylesheet objects, which is wasteful.
// This should be addressed when a browser ships constructable
// stylesheets.
var userStyles=this.getStyles();if(Array.isArray(userStyles)){// De-duplicate styles preserving the _last_ instance in the set.
// This is a performance optimization to avoid duplicated styles that can
// occur especially when composing via subclassing.
// The last item is kept to try to preserve the cascade order with the
// assumption that it's most important that last added styles override
// previous styles.
var addStyles=function addStyles(styles,set){return styles.reduceRight(function(set,s){return(// Note: On IE set.add() does not return the set
Array.isArray(s)?addStyles(s,set):(set.add(s),set))},set)},set=addStyles(userStyles,new Set),styles=[];// Array.from does not work on Set in IE, otherwise return
// Array.from(addStyles(userStyles, new Set<CSSResult>())).reverse()
set.forEach(function(v){return styles.unshift(v)});this._styles=styles}else{this._styles=userStyles===void 0?[]:[userStyles]}// Ensure that there are no invalid CSSStyleSheet instances here. They are
// invalid in two conditions.
// (1) the sheet is non-constructible (`sheet` of a HTMLStyleElement), but
//     this is impossible to check except via .replaceSync or use
// (2) the ShadyCSS polyfill is enabled (:. supportsAdoptingStyleSheets is
//     false)
this._styles=this._styles.map(function(s){if(babelHelpers.instanceof(s,CSSStyleSheet)&&!supportsAdoptingStyleSheets){// Flatten the cssText from the passed constructible stylesheet (or
// undetectable non-constructible stylesheet). The user might have
// expected to update their stylesheets over time, but the alternative
// is a crash.
var cssText=Array.prototype.slice.call(s.cssRules).reduce(function(css,rule){return css+rule.cssText},"");return unsafeCSS(cssText)}return s})}}]);return LitElement}(UpdatingElement);/**
                                  * Base element class that manages element properties and attributes, and
                                  * renders a lit-html template.
                                  *
                                  * To define a component, subclass `LitElement` and implement a
                                  * `render` method to provide the component's template. Define properties
                                  * using the [[`properties`]] property or the [[`property`]] decorator.
                                  */_exports.LitElement=LitElement;/**
   * Ensure this class is marked as `finalized` as an optimization ensuring
   * it will not needlessly try to `finalize`.
   *
   * Note this property name is a string to prevent breaking Closure JS Compiler
   * optimizations. See updating-element.ts for more information.
   */LitElement.finalized=!0;/**
                                 * Reference to the underlying library method used to render the element's
                                 * DOM. By default, points to the `render` method from lit-html's shady-render
                                 * module.
                                 *
                                 * **Most users will never need to touch this property.**
                                 *
                                 * This  property should not be confused with the `render` instance method,
                                 * which should be overridden to define a template for the element.
                                 *
                                 * Advanced users creating a new base class based on LitElement can override
                                 * this property to point to a custom render method with a signature that
                                 * matches [shady-render's `render`
                                 * method](https://lit-html.polymer-project.org/api/modules/shady_render.html#render).
                                 *
                                 * @nocollapse
                                 */LitElement.render=render$2;/** @nocollapse */LitElement.shadowRootOptions={mode:"open"};var litElement={LitElement:LitElement,defaultConverter:defaultConverter,notEqual:notEqual,UpdatingElement:UpdatingElement,ReactiveElement:UpdatingElement,customElement:customElement,property:property,internalProperty:internalProperty,state:state,query:query,queryAsync:queryAsync,queryAll:queryAll,eventOptions:eventOptions,queryAssignedNodes:queryAssignedNodes,html:html,svg:svg,TemplateResult:TemplateResult,SVGTemplateResult:SVGTemplateResult,supportsAdoptingStyleSheets:supportsAdoptingStyleSheets,CSSResult:CSSResult,unsafeCSS:unsafeCSS,css:css};_exports.$litElement=litElement;var CUSTOM_THEME="custom-theme-name",isLightTheme=!0;_exports.isLightTheme=isLightTheme;function setTheme(theme){_exports.isLightTheme=isLightTheme="light"===theme;console.log("Setting ".concat(theme," theme"));window.localStorage.setItem(CUSTOM_THEME,isLightTheme?"light":"dark")}if(window.localStorage){var s=window.localStorage;if(s.getItem(CUSTOM_THEME)){var currentTheme=s.getItem(CUSTOM_THEME);setTheme(currentTheme)}}function toggleTheme(){console.log("isLightTheme: "+isLightTheme);setTheme(isLightTheme?"dark":"light");window.location.reload()}var lightTheme=css(_templateObject_6d670280e80511eb8c1eeb8ba8ae3128()),darkTheme=css(_templateObject2_6d670280e80511eb8c1eeb8ba8ae3128(),lightTheme),sharedStyles=css(_templateObject3_6d670280e80511eb8c1eeb8ba8ae3128(),isLightTheme?lightTheme:darkTheme);_exports.sharedStyles=sharedStyles;var sharedStyles$1={get isLightTheme(){return isLightTheme},toggleTheme:toggleTheme,sharedStyles:sharedStyles};_exports.$sharedStyles=sharedStyles$1;var AccordianSection=/*#__PURE__*/function(_LitElement){babelHelpers.inherits(AccordianSection,_LitElement);function AccordianSection(){var _this11;babelHelpers.classCallCheck(this,AccordianSection);_this11=babelHelpers.possibleConstructorReturn(this,babelHelpers.getPrototypeOf(AccordianSection).apply(this,arguments));_this11.color="";_this11.list=[];_this11.lastSelectedId="";return _this11}babelHelpers.createClass(AccordianSection,[{key:"render",value:function render(){var _this12=this;return html(_templateObject4_6d670280e80511eb8c1eeb8ba8ae3128(),sharedStyles,this.color,this.color,this.color,this.color,this.color,this.color,this.list.map(function(tab){if(tab.selected){_this12.lastSelectedId=tab.id}return html(_templateObject5_6d670280e80511eb8c1eeb8ba8ae3128(),tab.selected?"tab-selected":"",tab.id,function(e){return _this12.toggle(tab.id)},tab.name,tab.selected?html(_templateObject6_6d670280e80511eb8c1eeb8ba8ae3128()):html(_templateObject7_6d670280e80511eb8c1eeb8ba8ae3128()),tab.selected?html(_templateObject8_6d670280e80511eb8c1eeb8ba8ae3128(),tab.content):"")}))}},{key:"toggle",value:function toggle(id){this.list=this.list.map(function(t){t.selected=!1;return t});if(this.lastSelectedId===id){this.lastSelectedId="";return}var selectedItem=this.list.find(function(t){return t.id===id});if(!selectedItem){throw new Error("No match tab id found in tab items")}selectedItem.selected=!0;this.lastSelectedId=selectedItem.id}}],[{key:"properties",get:function get(){return{list:{type:Array},color:{type:String}}}}]);return AccordianSection}(LitElement);_exports.AccordianSection=AccordianSection;customElements.define("accordian-section",AccordianSection);var accordianSection={AccordianSection:AccordianSection};_exports.$accordianSection=accordianSection;var overviewList=[{id:"item1",name:"Rationale and Consultation",selected:!1,content:html(_templateObject9_6d670280e80511eb8c1eeb8ba8ae3128())},{id:"item2",name:"The Goals",selected:!1,content:html(_templateObject10_6d670280e80511eb8c1eeb8ba8ae3128())},{id:"item3",name:"10-year Education Plan",selected:!1,content:html(_templateObject11_6d670280e80511eb8c1eeb8ba8ae3128())},{id:"item4",name:"School Self-Assessment Tool and Annual School Performance Report",selected:!1,content:html(_templateObject12_6d670280e80511eb8c1eeb8ba8ae3128())},{id:"item5",name:"Underlying Principles",selected:!1,content:html(_templateObject13_6d670280e80511eb8c1eeb8ba8ae3128())},{id:"item6",name:"The Expectations",selected:!1,content:html(_templateObject14_6d670280e80511eb8c1eeb8ba8ae3128())},{id:"item7",name:"The Content",selected:!1,content:html(_templateObject15_6d670280e80511eb8c1eeb8ba8ae3128())}];_exports.overviewList=overviewList;var overview={overviewList:overviewList};_exports.$overview=overview;var rolesItem=[{id:"item1",name:"The Principal/School Administrative Team",selected:!1,content:html(_templateObject16_6d670280e80511eb8c1eeb8ba8ae3128())},{id:"item2",name:"The Improvement Committee",selected:!1,content:html(_templateObject17_6d670280e80511eb8c1eeb8ba8ae3128())},{id:"item3",name:"School Personnel",selected:!1,content:html(_templateObject18_6d670280e80511eb8c1eeb8ba8ae3128())},{id:"item4",name:"Stakeholders and Partners",selected:!1,content:html(_templateObject19_6d670280e80511eb8c1eeb8ba8ae3128())},{id:"item5",name:"The District Process and the School Liaison and Critical Friend",selected:!1,content:html(_templateObject20_6d670280e80511eb8c1eeb8ba8ae3128())},{id:"item6",name:"The Minister (supported by Education and Early Childhood Education Staff)",selected:!1,content:html(_templateObject21_6d670280e80511eb8c1eeb8ba8ae3128())},{id:"item7",name:"The Superintendent",selected:!1,content:html(_templateObject22_6d670280e80511eb8c1eeb8ba8ae3128())},{id:"item8",name:"The District Education Council (DEC)",selected:!1,content:html(_templateObject23_6d670280e80511eb8c1eeb8ba8ae3128())},{id:"item9",name:"Parent School Support Committee",selected:!1,content:html(_templateObject24_6d670280e80511eb8c1eeb8ba8ae3128())}];_exports.rolesItem=rolesItem;var section1RolesItem={rolesItem:rolesItem};_exports.$section1RolesItem=section1RolesItem;var section1=[{id:"item1",name:"School Team",selected:!0,content:html(_templateObject25_6d670280e80511eb8c1eeb8ba8ae3128())},{id:"item2",name:"District Team",selected:!1,content:html(_templateObject26_6d670280e80511eb8c1eeb8ba8ae3128())},{id:"item3",name:"Improvement Planning Process Overview",selected:!1,content:html(_templateObject27_6d670280e80511eb8c1eeb8ba8ae3128())},{id:"item4",name:"Roles and Responsibilities",selected:!1,content:html(_templateObject28_6d670280e80511eb8c1eeb8ba8ae3128()),children:rolesItem}];_exports.section1=section1;var section1$1={section1:section1};_exports.$section1=section1$1;var section2Cycles=[{id:"item1",name:"Plan, Do, Check, Act (PDCA) ",selected:!1,content:html(_templateObject29_6d670280e80511eb8c1eeb8ba8ae3128())},{id:"item2",name:"Annual Cycle",selected:!1,content:html(_templateObject30_6d670280e80511eb8c1eeb8ba8ae3128())},{id:"item3",name:"Long-term Cycle (Multi-Year)",selected:!1,content:html(_templateObject31_6d670280e80511eb8c1eeb8ba8ae3128())}];_exports.section2Cycles=section2Cycles;var section2CyclesItem={section2Cycles:section2Cycles};_exports.$section2CyclesItem=section2CyclesItem;var section2=[{id:"item1",name:"Cycles",selected:!0,content:html(_templateObject32_6d670280e80511eb8c1eeb8ba8ae3128()),children:section2Cycles}];_exports.section2=section2;var section2$1={section2:section2};_exports.$section2=section2$1;var section3EvidenceItem=[{id:"item1",name:"Conversations, Observations and Products",selected:!1,content:html(_templateObject33_6d670280e80511eb8c1eeb8ba8ae3128())}];_exports.section3EvidenceItem=section3EvidenceItem;var section3DataEvidence={section3EvidenceItem:section3EvidenceItem};_exports.$section3DataEvidence=section3DataEvidence;var section3DocItem=[{id:"item1",name:"Overview and Purpose",selected:!1,content:html(_templateObject34_6d670280e80511eb8c1eeb8ba8ae3128())},{id:"item2",name:"Self-Assessment Process in Brief",selected:!1,content:html(_templateObject35_6d670280e80511eb8c1eeb8ba8ae3128())}];_exports.section3DocItem=section3DocItem;var section3IndDoc={section3DocItem:section3DocItem};_exports.$section3IndDoc=section3IndDoc;var section3=[{id:"item1",name:"The Self-Assessment Instrument: Indicator Document with Explanatory Notes",selected:!0,content:html(_templateObject36_6d670280e80511eb8c1eeb8ba8ae3128()),children:section3DocItem},{id:"item2",name:"Data/Evidence",selected:!1,content:html(_templateObject37_6d670280e80511eb8c1eeb8ba8ae3128()),children:section3EvidenceItem},{id:"item3",name:"Annual School Performance Report",selected:!1,content:html(_templateObject38_6d670280e80511eb8c1eeb8ba8ae3128())}];_exports.section3=section3;var section3$1={section3:section3};_exports.$section3=section3$1;var relativePath="./manifest/",section4=[{id:"item1",name:"Appendices and Templates",selected:!0,content:html(_templateObject39_6d670280e80511eb8c1eeb8ba8ae3128(),relativePath,relativePath,relativePath,relativePath,relativePath,relativePath,relativePath,relativePath)}];_exports.section4=section4;var section4$1={section4:section4};_exports.$section4=section4$1;var TabsSection=/*#__PURE__*/function(_LitElement2){babelHelpers.inherits(TabsSection,_LitElement2);function TabsSection(){var _this13;babelHelpers.classCallCheck(this,TabsSection);_this13=babelHelpers.possibleConstructorReturn(this,babelHelpers.getPrototypeOf(TabsSection).apply(this,arguments));_this13.list=[];_this13.currentTab={id:"",name:"",content:html(_templateObject40_6d670280e80511eb8c1eeb8ba8ae3128()),selected:!1};_this13.color="";return _this13}babelHelpers.createClass(TabsSection,[{key:"render",value:function render(){var _this14=this;return html(_templateObject41_6d670280e80511eb8c1eeb8ba8ae3128(),sharedStyles,this.color,this.list.map(function(tab){if(tab.selected){_this14.currentTab=tab}return html(_templateObject42_6d670280e80511eb8c1eeb8ba8ae3128(),tab.selected?"tab-selected":"",tab.id,function(e){return _this14.showTab(tab.id)},tab.name)}),this.currentTab.content,this.currentTab.children?html(_templateObject43_6d670280e80511eb8c1eeb8ba8ae3128(),this.color,this.currentTab.children):html(_templateObject44_6d670280e80511eb8c1eeb8ba8ae3128()))}},{key:"selectTab",value:function selectTab(id){var selectedTab=this.list.find(function(t){return t.id===id});if(!selectedTab){throw new Error("No match tab id found in tab items")}selectedTab.selected=!0;this.currentTab=selectedTab}},{key:"showTab",value:function showTab(id){this.list=this.list.map(function(t){t.selected=!1;return t});this.selectTab(id)}}],[{key:"properties",get:function get(){return{list:{type:Array},color:{type:String}}}}]);return TabsSection}(LitElement);_exports.TabsSection=TabsSection;customElements.define("tabs-section",TabsSection);var tabsSection={TabsSection:TabsSection};_exports.$tabsSection=tabsSection;var DomainSection=/*#__PURE__*/function(_LitElement3){babelHelpers.inherits(DomainSection,_LitElement3);function DomainSection(){var _this15;babelHelpers.classCallCheck(this,DomainSection);_this15=babelHelpers.possibleConstructorReturn(this,babelHelpers.getPrototypeOf(DomainSection).apply(this,arguments));_this15.color="";_this15.colorFaded="lightcyan";_this15.tabList=[];return _this15}babelHelpers.createClass(DomainSection,[{key:"render",value:function render(){return html(_templateObject45_6d670280e80511eb8c1eeb8ba8ae3128(),sharedStyles,this.colorFaded,this.colorFaded,this.colorFaded,0<this.tabList.length?html(_templateObject46_6d670280e80511eb8c1eeb8ba8ae3128(),this.color,this.tabList):html(_templateObject47_6d670280e80511eb8c1eeb8ba8ae3128()))}}],[{key:"properties",get:function get(){return{color:{type:String},colorFaded:{type:String},tabList:{type:Array}}}}]);return DomainSection}(LitElement);_exports.DomainSection=DomainSection;customElements.define("domain-section",DomainSection);var domainSection={DomainSection:DomainSection};_exports.$domainSection=domainSection;var TitlePage=/*#__PURE__*/function(_LitElement4){babelHelpers.inherits(TitlePage,_LitElement4);function TitlePage(){babelHelpers.classCallCheck(this,TitlePage);return babelHelpers.possibleConstructorReturn(this,babelHelpers.getPrototypeOf(TitlePage).apply(this,arguments))}babelHelpers.createClass(TitlePage,[{key:"render",value:function render(){return html(_templateObject48_6d670280e80511eb8c1eeb8ba8ae3128(),sharedStyles)}}]);return TitlePage}(LitElement);_exports.TitlePage=TitlePage;customElements.define("title-page",TitlePage);var titlePage={TitlePage:TitlePage};_exports.$titlePage=titlePage;var MenuSection=/*#__PURE__*/function(_LitElement5){babelHelpers.inherits(MenuSection,_LitElement5);function MenuSection(){var _this16;babelHelpers.classCallCheck(this,MenuSection);_this16=babelHelpers.possibleConstructorReturn(this,babelHelpers.getPrototypeOf(MenuSection).apply(this,arguments));_this16.list=[{id:"anchor_section0",name:"Top",selected:!1,content:html(_templateObject49_6d670280e80511eb8c1eeb8ba8ae3128())},{id:"anchor_section1",name:"Framework Overview",selected:!1,content:html(_templateObject50_6d670280e80511eb8c1eeb8ba8ae3128())},{id:"anchor_section2",name:"Cycles",selected:!1,content:html(_templateObject51_6d670280e80511eb8c1eeb8ba8ae3128())},{id:"anchor_section3",name:"Self-Assessment Instrument",selected:!1,content:html(_templateObject52_6d670280e80511eb8c1eeb8ba8ae3128())},{id:"anchor_section4",name:"Appendices and Templates",selected:!1,content:html(_templateObject53_6d670280e80511eb8c1eeb8ba8ae3128())}];return _this16}babelHelpers.createClass(MenuSection,[{key:"render",value:function render(){var _this17=this;return html(_templateObject54_6d670280e80511eb8c1eeb8ba8ae3128(),this.list.map(function(tab,index){return html(_templateObject55_6d670280e80511eb8c1eeb8ba8ae3128(),index!==_this17.list.length-1?"right-area":"",tab.selected?"nav-item-selected":"",function(e){return _this17.selectItem(tab.id)},tab.name)}),function(e){return _this17.toggleTheme()},isLightTheme?"moon-solid.svg":"sun-solid.svg")}},{key:"selectItem",value:function selectItem(hash){window.location.hash=hash;this.list=this.list.map(function(t){t.selected=!1;return t});var selectedTab=this.list.find(function(t){return t.id===hash});if(!selectedTab){throw new Error("No match tab id found in tab items")}selectedTab.selected=!0}},{key:"toggleTheme",value:function toggleTheme(){this.dispatchEvent(new CustomEvent("change-theme"))}}],[{key:"properties",get:function get(){return{list:{type:Array}}}},{key:"styles",get:function get(){return[sharedStyles,css(_templateObject56_6d670280e80511eb8c1eeb8ba8ae3128())]}}]);return MenuSection}(LitElement);_exports.MenuSection=MenuSection;customElements.define("menu-section",MenuSection);var menuSection={MenuSection:MenuSection};_exports.$menuSection=menuSection;var MainElement=/*#__PURE__*/function(_LitElement6){babelHelpers.inherits(MainElement,_LitElement6);function MainElement(){babelHelpers.classCallCheck(this,MainElement);return babelHelpers.possibleConstructorReturn(this,babelHelpers.getPrototypeOf(MainElement).call(this))}babelHelpers.createClass(MainElement,[{key:"scrollToMe",value:function scrollToMe(id){var targetElement=this.shadowRoot.getElementById(id.substr(1));if(targetElement){targetElement.scrollIntoView()}}},{key:"onChangeTheme",value:function onChangeTheme(){toggleTheme()}},{key:"render",value:function render(){var _this18=this;return html(_templateObject57_6d670280e80511eb8c1eeb8ba8ae3128(),function(e){_this18.onChangeTheme()},section1,overviewList,section2,section3,section4)}}],[{key:"styles",get:function get(){return[sharedStyles,css(_templateObject58_6d670280e80511eb8c1eeb8ba8ae3128())]}}]);return MainElement}(LitElement);_exports.MainElement=MainElement;customElements.define("main-element",MainElement);var mainElement={MainElement:MainElement};_exports.$mainElement=mainElement});